{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4","program":"/home/chris/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","tokio_util","--edition=2018","/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"codec\"","--cfg","feature=\"default\"","--cfg","feature=\"tracing\"","-C","metadata=89f0dc8e4bcf9885","-C","extra-filename=-89f0dc8e4bcf9885","--out-dir","/home/chris/github.com/ynab/ynab_lib/target/rls/debug/deps","-L","dependency=/home/chris/github.com/ynab/ynab_lib/target/rls/debug/deps","--extern","bytes=/home/chris/github.com/ynab/ynab_lib/target/rls/debug/deps/libbytes-402555cb9dddf049.rmeta","--extern","futures_core=/home/chris/github.com/ynab/ynab_lib/target/rls/debug/deps/libfutures_core-b6064cc85ceffded.rmeta","--extern","futures_sink=/home/chris/github.com/ynab/ynab_lib/target/rls/debug/deps/libfutures_sink-604bff5186db813c.rmeta","--extern","pin_project_lite=/home/chris/github.com/ynab/ynab_lib/target/rls/debug/deps/libpin_project_lite-a6a8db3c50a68696.rmeta","--extern","tokio=/home/chris/github.com/ynab/ynab_lib/target/rls/debug/deps/libtokio-93ea0c3b29a4e9d1.rmeta","--extern","tracing=/home/chris/github.com/ynab/ynab_lib/target/rls/debug/deps/libtracing-c762ca5854194ca1.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/chris/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/chris/github.com/ynab/ynab_lib/target/rls/debug/deps/libtokio_util-89f0dc8e4bcf9885.rmeta"},"prelude":{"crate_id":{"name":"tokio_util","disambiguator":[18429746315177439719,0]},"crate_root":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src","external_crates":[{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[3488764316664526318,0]}},{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","num":2,"id":{"name":"core","disambiguator":[8055937789589085173,0]}},{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[9266852701449989672,0]}},{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[3150474620658042907,0]}},{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[7885665867006586706,0]}},{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[12703856752884015026,0]}},{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[2969720598907790989,0]}},{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[2619625876091296344,0]}},{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[12464395834502290914,0]}},{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[6756473508419496664,0]}},{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","num":11,"id":{"name":"adler","disambiguator":[15198303206847108385,0]}},{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[2772378233732002785,0]}},{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[12984264205291464654,0]}},{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[17906896803061581552,0]}},{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","num":15,"id":{"name":"addr2line","disambiguator":[6255416831383744366,0]}},{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","num":16,"id":{"name":"gimli","disambiguator":[17027395046702333165,0]}},{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","num":17,"id":{"name":"object","disambiguator":[17940528507109169175,0]}},{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","num":18,"id":{"name":"memchr","disambiguator":[16282955217049922585,0]}},{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[15640776750749541284,0]}},{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","num":20,"id":{"name":"pin_project_lite","disambiguator":[8996050502750044262,0]}},{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","num":21,"id":{"name":"futures_sink","disambiguator":[11087726451328532371,0]}},{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","num":22,"id":{"name":"tokio","disambiguator":[3610701452144284855,0]}},{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","num":23,"id":{"name":"mio","disambiguator":[9503439303785452568,0]}},{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","num":24,"id":{"name":"log","disambiguator":[10392866420253292904,0]}},{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","num":25,"id":{"name":"cfg_if","disambiguator":[8027478366546687506,0]}},{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","num":26,"id":{"name":"libc","disambiguator":[15457682195810053729,0]}},{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","num":27,"id":{"name":"bytes","disambiguator":[9494209322558144552,0]}},{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","num":28,"id":{"name":"memchr","disambiguator":[12474290144649247054,0]}},{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","num":29,"id":{"name":"socket2","disambiguator":[16948440119255694623,0]}},{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","num":30,"id":{"name":"futures_core","disambiguator":[1899619963363951426,0]}},{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_impl.rs","num":31,"id":{"name":"tracing","disambiguator":[17873874643445474136,0]}},{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_impl.rs","num":32,"id":{"name":"tracing_core","disambiguator":[6112549781206418200,0]}},{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_impl.rs","num":33,"id":{"name":"once_cell","disambiguator":[2804281165937782276,0]}}],"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","byte_start":0,"byte_end":5547,"line_start":1,"line_end":205,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":1165},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16374700,"byte_end":16374710,"line_start":262,"line_end":262,"column_start":28,"column_end":38},"alias_span":null,"name":"BytesCodec","value":"","parent":{"krate":0,"index":458}},{"kind":"Use","ref_id":{"krate":0,"index":511},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16374749,"byte_end":16374756,"line_start":265,"line_end":265,"column_start":24,"column_end":31},"alias_span":null,"name":"Decoder","value":"","parent":{"krate":0,"index":458}},{"kind":"Use","ref_id":{"krate":0,"index":528},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16374795,"byte_end":16374802,"line_start":268,"line_end":268,"column_start":24,"column_end":31},"alias_span":null,"name":"Encoder","value":"","parent":{"krate":0,"index":458}},{"kind":"Use","ref_id":{"krate":0,"index":1475},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16374964,"byte_end":16374970,"line_start":275,"line_end":275,"column_start":24,"column_end":30},"alias_span":null,"name":"Framed","value":"","parent":{"krate":0,"index":458}},{"kind":"Use","ref_id":{"krate":0,"index":1201},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16374972,"byte_end":16374983,"line_start":275,"line_end":275,"column_start":32,"column_end":43},"alias_span":null,"name":"FramedParts","value":"","parent":{"krate":0,"index":458}},{"kind":"Use","ref_id":{"krate":0,"index":1434},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16375031,"byte_end":16375041,"line_start":278,"line_end":278,"column_start":28,"column_end":38},"alias_span":null,"name":"FramedRead","value":"","parent":{"krate":0,"index":458}},{"kind":"Use","ref_id":{"krate":0,"index":1393},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16375090,"byte_end":16375101,"line_start":281,"line_end":281,"column_start":29,"column_end":40},"alias_span":null,"name":"FramedWrite","value":"","parent":{"krate":0,"index":458}},{"kind":"Use","ref_id":{"krate":0,"index":1225},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16375163,"byte_end":16375183,"line_start":284,"line_end":284,"column_start":34,"column_end":54},"alias_span":null,"name":"LengthDelimitedCodec","value":"","parent":{"krate":0,"index":458}},{"kind":"Use","ref_id":{"krate":0,"index":973},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16375185,"byte_end":16375210,"line_start":284,"line_end":284,"column_start":56,"column_end":81},"alias_span":null,"name":"LengthDelimitedCodecError","value":"","parent":{"krate":0,"index":458}},{"kind":"Use","ref_id":{"krate":0,"index":1243},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16375259,"byte_end":16375269,"line_start":287,"line_end":287,"column_start":29,"column_end":39},"alias_span":null,"name":"LinesCodec","value":"","parent":{"krate":0,"index":458}},{"kind":"Use","ref_id":{"krate":0,"index":1265},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16375271,"byte_end":16375286,"line_start":287,"line_end":287,"column_start":41,"column_end":56},"alias_span":null,"name":"LinesCodecError","value":"","parent":{"krate":0,"index":458}},{"kind":"Use","ref_id":{"krate":0,"index":1273},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16375351,"byte_end":16375368,"line_start":290,"line_end":290,"column_start":37,"column_end":54},"alias_span":null,"name":"AnyDelimiterCodec","value":"","parent":{"krate":0,"index":458}},{"kind":"Use","ref_id":{"krate":0,"index":1297},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16375370,"byte_end":16375392,"line_start":290,"line_end":290,"column_start":56,"column_end":78},"alias_span":null,"name":"AnyDelimiterCodecError","value":"","parent":{"krate":0,"index":458}},{"kind":"Use","ref_id":{"krate":0,"index":1305},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mod.rs","byte_start":7139,"byte_end":7148,"line_start":4,"line_end":4,"column_start":37,"column_end":46},"alias_span":null,"name":"DropGuard","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":81},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mod.rs","byte_start":7150,"byte_end":7167,"line_start":4,"line_end":4,"column_start":48,"column_end":65},"alias_span":null,"name":"CancellationToken","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":1309},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mod.rs","byte_start":7169,"byte_end":7194,"line_start":4,"line_end":4,"column_start":67,"column_end":92},"alias_span":null,"name":"WaitForCancellationFuture","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":1346},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mod.rs","byte_start":7223,"byte_end":7236,"line_start":7,"line_end":7,"column_start":16,"column_end":29},"alias_span":null,"name":"PollSendError","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":1368},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mod.rs","byte_start":7238,"byte_end":7248,"line_start":7,"line_end":7,"column_start":31,"column_end":41},"alias_span":null,"name":"PollSender","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":226},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mod.rs","byte_start":7296,"byte_end":7309,"line_start":10,"line_end":10,"column_start":25,"column_end":38},"alias_span":null,"name":"PollSemaphore","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":282},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mod.rs","byte_start":7352,"byte_end":7369,"line_start":13,"line_end":13,"column_start":23,"column_end":40},"alias_span":null,"name":"ReusableBoxFuture","value":"","parent":{"krate":0,"index":14}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","byte_start":0,"byte_end":5547,"line_start":1,"line_end":205,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":10},{"krate":0,"index":458},{"krate":0,"index":14},{"krate":0,"index":340},{"krate":0,"index":409}],"decl_id":null,"docs":" Utilities for working with Tokio.","sig":null,"attributes":[{"value":"allow(clippy :: needless_doctest_main)","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","byte_start":0,"byte_end":40,"line_start":1,"line_end":1,"column_start":1,"column_end":41}},{"value":"warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\nunreachable_pub)","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","byte_start":41,"byte_end":147,"line_start":2,"line_end":7,"column_start":1,"column_end":3}},{"value":"/ Utilities for working with Tokio.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","byte_start":305,"byte_end":342,"line_start":14,"line_end":14,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","byte_start":343,"byte_end":346,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ This crate is not versioned in lockstep with the core","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","byte_start":347,"byte_end":404,"line_start":16,"line_end":16,"column_start":1,"column_end":58}},{"value":"/ [`tokio`] crate. However, `tokio-util` _will_ respect Rust's","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","byte_start":405,"byte_end":469,"line_start":17,"line_end":17,"column_start":1,"column_end":65}},{"value":"/ semantic versioning policy, especially with regard to breaking changes.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","byte_start":470,"byte_end":545,"line_start":18,"line_end":18,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","byte_start":546,"byte_end":549,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ [`tokio`]: https://docs.rs/tokio","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","byte_start":550,"byte_end":586,"line_start":20,"line_end":20,"column_start":1,"column_end":37}}]},{"kind":"Mod","id":{"krate":0,"index":458},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"codec","qualname":"::codec","value":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","parent":null,"children":[{"krate":0,"index":459},{"krate":0,"index":491},{"krate":0,"index":494},{"krate":0,"index":518},{"krate":0,"index":521},{"krate":0,"index":532},{"krate":0,"index":535},{"krate":0,"index":632},{"krate":0,"index":633},{"krate":0,"index":636},{"krate":0,"index":639},{"krate":0,"index":642},{"krate":0,"index":645},{"krate":0,"index":747},{"krate":0,"index":748},{"krate":0,"index":751},{"krate":0,"index":754},{"krate":0,"index":831},{"krate":0,"index":834},{"krate":0,"index":913},{"krate":0,"index":916},{"krate":0,"index":1027},{"krate":0,"index":1028},{"krate":0,"index":1031},{"krate":0,"index":1034},{"krate":0,"index":1091},{"krate":0,"index":1092},{"krate":0,"index":1095},{"krate":0,"index":1098},{"krate":0,"index":1158},{"krate":0,"index":1159},{"krate":0,"index":1162}],"decl_id":null,"docs":" Adaptors from AsyncRead/AsyncWrite to Stream/Sink","sig":null,"attributes":[{"value":"cfg(feature = \"codec\")","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/cfg.rs","byte_start":5623,"byte_end":5648,"line_start":4,"line_end":4,"column_start":13,"column_end":38}},{"value":"/ Adaptors from AsyncRead/AsyncWrite to Stream/Sink","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16364428,"byte_end":16364481,"line_start":1,"line_end":1,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16364482,"byte_end":16364485,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16364486,"byte_end":16364561,"line_start":3,"line_end":3,"column_start":1,"column_end":76}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\".","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16364562,"byte_end":16364627,"line_start":4,"line_end":4,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16364628,"byte_end":16364631,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This module contains adapters to go from streams of bytes, [`AsyncRead`] and","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16364632,"byte_end":16364712,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ [`AsyncWrite`], to framed streams implementing [`Sink`] and [`Stream`].","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16364713,"byte_end":16364788,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ Framed streams are also known as transports.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16364789,"byte_end":16364837,"line_start":8,"line_end":8,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16364838,"byte_end":16364841,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ # The Decoder trait","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16364842,"byte_end":16364865,"line_start":10,"line_end":10,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16364866,"byte_end":16364869,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ A [`Decoder`] is used together with [`FramedRead`] or [`Framed`] to turn an","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16364870,"byte_end":16364949,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/ [`AsyncRead`] into a [`Stream`]. The job of the decoder trait is to specify","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16364950,"byte_end":16365029,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ how sequences of bytes are turned into a sequence of frames, and to","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16365030,"byte_end":16365101,"line_start":14,"line_end":14,"column_start":1,"column_end":72}},{"value":"/ determine where the boundaries between frames are.  The job of the","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16365102,"byte_end":16365172,"line_start":15,"line_end":15,"column_start":1,"column_end":71}},{"value":"/ `FramedRead` is to repeatedly switch between reading more data from the IO","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16365173,"byte_end":16365251,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/ resource, and asking the decoder whether we have received enough data to","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16365252,"byte_end":16365328,"line_start":17,"line_end":17,"column_start":1,"column_end":77}},{"value":"/ decode another frame of data.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16365329,"byte_end":16365362,"line_start":18,"line_end":18,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16365363,"byte_end":16365366,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ The main method on the `Decoder` trait is the [`decode`] method. This method","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16365367,"byte_end":16365447,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/ takes as argument the data that has been read so far, and when it is called,","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16365448,"byte_end":16365528,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/ it will be in one of the following situations:","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16365529,"byte_end":16365579,"line_start":22,"line_end":22,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16365580,"byte_end":16365583,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/  1. The buffer contains less than a full frame.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16365584,"byte_end":16365635,"line_start":24,"line_end":24,"column_start":1,"column_end":52}},{"value":"/  2. The buffer contains exactly a full frame.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16365636,"byte_end":16365685,"line_start":25,"line_end":25,"column_start":1,"column_end":50}},{"value":"/  3. The buffer contains more than a full frame.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16365686,"byte_end":16365737,"line_start":26,"line_end":26,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16365738,"byte_end":16365741,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ In the first situation, the decoder should return `Ok(None)`.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16365742,"byte_end":16365807,"line_start":28,"line_end":28,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16365808,"byte_end":16365811,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ In the second situation, the decoder should clear the provided buffer and","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16365812,"byte_end":16365889,"line_start":30,"line_end":30,"column_start":1,"column_end":78}},{"value":"/ return `Ok(Some(the_decoded_frame))`.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16365890,"byte_end":16365931,"line_start":31,"line_end":31,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16365932,"byte_end":16365935,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ In the third situation, the decoder should use a method such as [`split_to`]","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16365936,"byte_end":16366016,"line_start":33,"line_end":33,"column_start":1,"column_end":81}},{"value":"/ or [`advance`] to modify the buffer such that the frame is removed from the","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16366017,"byte_end":16366096,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"/ buffer, but any data in the buffer after that frame should still remain in","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16366097,"byte_end":16366175,"line_start":35,"line_end":35,"column_start":1,"column_end":79}},{"value":"/ the buffer. The decoder should also return `Ok(Some(the_decoded_frame))` in","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16366176,"byte_end":16366255,"line_start":36,"line_end":36,"column_start":1,"column_end":80}},{"value":"/ this case.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16366256,"byte_end":16366270,"line_start":37,"line_end":37,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16366271,"byte_end":16366274,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Finally the decoder may return an error if the data is invalid in some way.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16366275,"byte_end":16366354,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"/ The decoder should _not_ return an error just because it has yet to receive","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16366355,"byte_end":16366434,"line_start":40,"line_end":40,"column_start":1,"column_end":80}},{"value":"/ a full frame.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16366435,"byte_end":16366452,"line_start":41,"line_end":41,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16366453,"byte_end":16366456,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ It is guaranteed that, from one call to `decode` to another, the provided","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16366457,"byte_end":16366534,"line_start":43,"line_end":43,"column_start":1,"column_end":78}},{"value":"/ buffer will contain the exact same data as before, except that if more data","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16366535,"byte_end":16366614,"line_start":44,"line_end":44,"column_start":1,"column_end":80}},{"value":"/ has arrived through the IO resource, that data will have been appended to","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16366615,"byte_end":16366692,"line_start":45,"line_end":45,"column_start":1,"column_end":78}},{"value":"/ the buffer.  This means that reading frames from a `FramedRead` is","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16366693,"byte_end":16366763,"line_start":46,"line_end":46,"column_start":1,"column_end":71}},{"value":"/ essentially equivalent to the following loop:","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16366764,"byte_end":16366813,"line_start":47,"line_end":47,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16366814,"byte_end":16366817,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16366818,"byte_end":16366831,"line_start":49,"line_end":49,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::AsyncReadExt;","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16366832,"byte_end":16366864,"line_start":50,"line_end":50,"column_start":1,"column_end":33}},{"value":"/ # // This uses async_stream to create an example that compiles.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16366865,"byte_end":16366932,"line_start":51,"line_end":51,"column_start":1,"column_end":68}},{"value":"/ # fn foo() -> impl futures_core::Stream<Item = std::io::Result<bytes::BytesMut>> { async_stream::try_stream! {","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16366933,"byte_end":16367047,"line_start":52,"line_end":52,"column_start":1,"column_end":115}},{"value":"/ # use tokio_util::codec::Decoder;","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16367048,"byte_end":16367085,"line_start":53,"line_end":53,"column_start":1,"column_end":38}},{"value":"/ # let mut decoder = tokio_util::codec::BytesCodec::new();","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16367086,"byte_end":16367147,"line_start":54,"line_end":54,"column_start":1,"column_end":62}},{"value":"/ # let io_resource = &mut &[0u8, 1, 2, 3][..];","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16367148,"byte_end":16367197,"line_start":55,"line_end":55,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16367198,"byte_end":16367201,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ let mut buf = bytes::BytesMut::new();","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16367202,"byte_end":16367243,"line_start":57,"line_end":57,"column_start":1,"column_end":42}},{"value":"/ loop {","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16367244,"byte_end":16367254,"line_start":58,"line_end":58,"column_start":1,"column_end":11}},{"value":"/     // The read_buf call will append to buf rather than overwrite existing data.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16367255,"byte_end":16367339,"line_start":59,"line_end":59,"column_start":1,"column_end":85}},{"value":"/     let len = io_resource.read_buf(&mut buf).await?;","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16367340,"byte_end":16367396,"line_start":60,"line_end":60,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16367397,"byte_end":16367400,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/     if len == 0 {","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16367401,"byte_end":16367422,"line_start":62,"line_end":62,"column_start":1,"column_end":22}},{"value":"/         while let Some(frame) = decoder.decode_eof(&mut buf)? {","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16367423,"byte_end":16367490,"line_start":63,"line_end":63,"column_start":1,"column_end":68}},{"value":"/             yield frame;","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16367491,"byte_end":16367519,"line_start":64,"line_end":64,"column_start":1,"column_end":29}},{"value":"/         }","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16367520,"byte_end":16367533,"line_start":65,"line_end":65,"column_start":1,"column_end":14}},{"value":"/         break;","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16367534,"byte_end":16367552,"line_start":66,"line_end":66,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16367553,"byte_end":16367562,"line_start":67,"line_end":67,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16367563,"byte_end":16367566,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/     while let Some(frame) = decoder.decode(&mut buf)? {","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16367567,"byte_end":16367626,"line_start":69,"line_end":69,"column_start":1,"column_end":60}},{"value":"/         yield frame;","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16367627,"byte_end":16367651,"line_start":70,"line_end":70,"column_start":1,"column_end":25}},{"value":"/     }","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16367652,"byte_end":16367661,"line_start":71,"line_end":71,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16367662,"byte_end":16367667,"line_start":72,"line_end":72,"column_start":1,"column_end":6}},{"value":"/ # }}","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16367668,"byte_end":16367676,"line_start":73,"line_end":73,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16367677,"byte_end":16367684,"line_start":74,"line_end":74,"column_start":1,"column_end":8}},{"value":"/ The example above uses `yield` whenever the `Stream` produces an item.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16367685,"byte_end":16367759,"line_start":75,"line_end":75,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16367760,"byte_end":16367763,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ ## Example decoder","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16367764,"byte_end":16367786,"line_start":77,"line_end":77,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16367787,"byte_end":16367790,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ As an example, consider a protocol that can be used to send strings where","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16367791,"byte_end":16367868,"line_start":79,"line_end":79,"column_start":1,"column_end":78}},{"value":"/ each frame is a four byte integer that contains the length of the frame,","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16367869,"byte_end":16367945,"line_start":80,"line_end":80,"column_start":1,"column_end":77}},{"value":"/ followed by that many bytes of string data. The decoder fails with an error","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16367946,"byte_end":16368025,"line_start":81,"line_end":81,"column_start":1,"column_end":80}},{"value":"/ if the string data is not valid utf-8 or too long.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16368026,"byte_end":16368080,"line_start":82,"line_end":82,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16368081,"byte_end":16368084,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ Such a decoder can be written like this:","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16368085,"byte_end":16368129,"line_start":84,"line_end":84,"column_start":1,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16368130,"byte_end":16368137,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::codec::Decoder;","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16368138,"byte_end":16368173,"line_start":86,"line_end":86,"column_start":1,"column_end":36}},{"value":"/ use bytes::{BytesMut, Buf};","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16368174,"byte_end":16368205,"line_start":87,"line_end":87,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16368206,"byte_end":16368209,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ struct MyStringDecoder {}","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16368210,"byte_end":16368239,"line_start":89,"line_end":89,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16368240,"byte_end":16368243,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ const MAX: usize = 8 * 1024 * 1024;","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16368244,"byte_end":16368283,"line_start":91,"line_end":91,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16368284,"byte_end":16368287,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ impl Decoder for MyStringDecoder {","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16368288,"byte_end":16368326,"line_start":93,"line_end":93,"column_start":1,"column_end":39}},{"value":"/     type Item = String;","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16368327,"byte_end":16368354,"line_start":94,"line_end":94,"column_start":1,"column_end":28}},{"value":"/     type Error = std::io::Error;","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16368355,"byte_end":16368391,"line_start":95,"line_end":95,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16368392,"byte_end":16368395,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/     fn decode(","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16368396,"byte_end":16368414,"line_start":97,"line_end":97,"column_start":1,"column_end":19}},{"value":"/         &mut self,","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16368415,"byte_end":16368437,"line_start":98,"line_end":98,"column_start":1,"column_end":23}},{"value":"/         src: &mut BytesMut","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16368438,"byte_end":16368468,"line_start":99,"line_end":99,"column_start":1,"column_end":31}},{"value":"/     ) -> Result<Option<Self::Item>, Self::Error> {","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16368469,"byte_end":16368523,"line_start":100,"line_end":100,"column_start":1,"column_end":55}},{"value":"/         if src.len() < 4 {","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16368524,"byte_end":16368554,"line_start":101,"line_end":101,"column_start":1,"column_end":31}},{"value":"/             // Not enough data to read length marker.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16368555,"byte_end":16368612,"line_start":102,"line_end":102,"column_start":1,"column_end":58}},{"value":"/             return Ok(None);","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16368613,"byte_end":16368645,"line_start":103,"line_end":103,"column_start":1,"column_end":33}},{"value":"/         }","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16368646,"byte_end":16368659,"line_start":104,"line_end":104,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16368660,"byte_end":16368663,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/         // Read length marker.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16368664,"byte_end":16368698,"line_start":106,"line_end":106,"column_start":1,"column_end":35}},{"value":"/         let mut length_bytes = [0u8; 4];","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16368699,"byte_end":16368743,"line_start":107,"line_end":107,"column_start":1,"column_end":45}},{"value":"/         length_bytes.copy_from_slice(&src[..4]);","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16368744,"byte_end":16368796,"line_start":108,"line_end":108,"column_start":1,"column_end":53}},{"value":"/         let length = u32::from_le_bytes(length_bytes) as usize;","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16368797,"byte_end":16368864,"line_start":109,"line_end":109,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16368865,"byte_end":16368868,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/         // Check that the length is not too large to avoid a denial of","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16368869,"byte_end":16368943,"line_start":111,"line_end":111,"column_start":1,"column_end":75}},{"value":"/         // service attack where the server runs out of memory.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16368944,"byte_end":16369010,"line_start":112,"line_end":112,"column_start":1,"column_end":67}},{"value":"/         if length > MAX {","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16369011,"byte_end":16369040,"line_start":113,"line_end":113,"column_start":1,"column_end":30}},{"value":"/             return Err(std::io::Error::new(","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16369041,"byte_end":16369088,"line_start":114,"line_end":114,"column_start":1,"column_end":48}},{"value":"/                 std::io::ErrorKind::InvalidData,","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16369089,"byte_end":16369141,"line_start":115,"line_end":115,"column_start":1,"column_end":53}},{"value":"/                 format!(\"Frame of length {} is too large.\", length)","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16369142,"byte_end":16369213,"line_start":116,"line_end":116,"column_start":1,"column_end":72}},{"value":"/             ));","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16369214,"byte_end":16369233,"line_start":117,"line_end":117,"column_start":1,"column_end":20}},{"value":"/         }","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16369234,"byte_end":16369247,"line_start":118,"line_end":118,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16369248,"byte_end":16369251,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/         if src.len() < 4 + length {","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16369252,"byte_end":16369291,"line_start":120,"line_end":120,"column_start":1,"column_end":40}},{"value":"/             // The full string has not yet arrived.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16369292,"byte_end":16369347,"line_start":121,"line_end":121,"column_start":1,"column_end":56}},{"value":"/             //","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16369348,"byte_end":16369366,"line_start":122,"line_end":122,"column_start":1,"column_end":19}},{"value":"/             // We reserve more space in the buffer. This is not strictly","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16369367,"byte_end":16369443,"line_start":123,"line_end":123,"column_start":1,"column_end":77}},{"value":"/             // necessary, but is a good idea performance-wise.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16369444,"byte_end":16369510,"line_start":124,"line_end":124,"column_start":1,"column_end":67}},{"value":"/             src.reserve(4 + length - src.len());","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16369511,"byte_end":16369563,"line_start":125,"line_end":125,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16369564,"byte_end":16369567,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/             // We inform the Framed that we need more bytes to form the next","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16369568,"byte_end":16369648,"line_start":127,"line_end":127,"column_start":1,"column_end":81}},{"value":"/             // frame.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16369649,"byte_end":16369674,"line_start":128,"line_end":128,"column_start":1,"column_end":26}},{"value":"/             return Ok(None);","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16369675,"byte_end":16369707,"line_start":129,"line_end":129,"column_start":1,"column_end":33}},{"value":"/         }","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16369708,"byte_end":16369721,"line_start":130,"line_end":130,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16369722,"byte_end":16369725,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/         // Use advance to modify src such that it no longer contains","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16369726,"byte_end":16369798,"line_start":132,"line_end":132,"column_start":1,"column_end":73}},{"value":"/         // this frame.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16369799,"byte_end":16369825,"line_start":133,"line_end":133,"column_start":1,"column_end":27}},{"value":"/         let data = src[4..4 + length].to_vec();","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16369826,"byte_end":16369877,"line_start":134,"line_end":134,"column_start":1,"column_end":52}},{"value":"/         src.advance(4 + length);","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16369878,"byte_end":16369914,"line_start":135,"line_end":135,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16369915,"byte_end":16369918,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/         // Convert the data to a string, or fail if it is not valid utf-8.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16369919,"byte_end":16369997,"line_start":137,"line_end":137,"column_start":1,"column_end":79}},{"value":"/         match String::from_utf8(data) {","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16369998,"byte_end":16370041,"line_start":138,"line_end":138,"column_start":1,"column_end":44}},{"value":"/             Ok(string) => Ok(Some(string)),","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16370042,"byte_end":16370089,"line_start":139,"line_end":139,"column_start":1,"column_end":48}},{"value":"/             Err(utf8_error) => {","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16370090,"byte_end":16370126,"line_start":140,"line_end":140,"column_start":1,"column_end":37}},{"value":"/                 Err(std::io::Error::new(","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16370127,"byte_end":16370171,"line_start":141,"line_end":141,"column_start":1,"column_end":45}},{"value":"/                     std::io::ErrorKind::InvalidData,","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16370172,"byte_end":16370228,"line_start":142,"line_end":142,"column_start":1,"column_end":57}},{"value":"/                     utf8_error.utf8_error(),","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16370229,"byte_end":16370277,"line_start":143,"line_end":143,"column_start":1,"column_end":49}},{"value":"/                 ))","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16370278,"byte_end":16370300,"line_start":144,"line_end":144,"column_start":1,"column_end":23}},{"value":"/             },","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16370301,"byte_end":16370319,"line_start":145,"line_end":145,"column_start":1,"column_end":19}},{"value":"/         }","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16370320,"byte_end":16370333,"line_start":146,"line_end":146,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16370334,"byte_end":16370343,"line_start":147,"line_end":147,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16370344,"byte_end":16370349,"line_start":148,"line_end":148,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16370350,"byte_end":16370357,"line_start":149,"line_end":149,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16370358,"byte_end":16370361,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ # The Encoder trait","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16370362,"byte_end":16370385,"line_start":151,"line_end":151,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16370386,"byte_end":16370389,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ An [`Encoder`] is used together with [`FramedWrite`] or [`Framed`] to turn","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16370390,"byte_end":16370468,"line_start":153,"line_end":153,"column_start":1,"column_end":79}},{"value":"/ an [`AsyncWrite`] into a [`Sink`]. The job of the encoder trait is to","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16370469,"byte_end":16370542,"line_start":154,"line_end":154,"column_start":1,"column_end":74}},{"value":"/ specify how frames are turned into a sequences of bytes.  The job of the","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16370543,"byte_end":16370619,"line_start":155,"line_end":155,"column_start":1,"column_end":77}},{"value":"/ `FramedWrite` is to take the resulting sequence of bytes and write it to the","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16370620,"byte_end":16370700,"line_start":156,"line_end":156,"column_start":1,"column_end":81}},{"value":"/ IO resource.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16370701,"byte_end":16370717,"line_start":157,"line_end":157,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16370718,"byte_end":16370721,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ The main method on the `Encoder` trait is the [`encode`] method. This method","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16370722,"byte_end":16370802,"line_start":159,"line_end":159,"column_start":1,"column_end":81}},{"value":"/ takes an item that is being written, and a buffer to write the item to. The","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16370803,"byte_end":16370882,"line_start":160,"line_end":160,"column_start":1,"column_end":80}},{"value":"/ buffer may already contain data, and in this case, the encoder should append","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16370883,"byte_end":16370963,"line_start":161,"line_end":161,"column_start":1,"column_end":81}},{"value":"/ the new frame the to buffer rather than overwrite the existing data.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16370964,"byte_end":16371036,"line_start":162,"line_end":162,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16371037,"byte_end":16371040,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ It is guaranteed that, from one call to `encode` to another, the provided","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16371041,"byte_end":16371118,"line_start":164,"line_end":164,"column_start":1,"column_end":78}},{"value":"/ buffer will contain the exact same data as before, except that some of the","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16371119,"byte_end":16371197,"line_start":165,"line_end":165,"column_start":1,"column_end":79}},{"value":"/ data may have been removed from the front of the buffer. Writing to a","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16371198,"byte_end":16371271,"line_start":166,"line_end":166,"column_start":1,"column_end":74}},{"value":"/ `FramedWrite` is essentially equivalent to the following loop:","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16371272,"byte_end":16371338,"line_start":167,"line_end":167,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16371339,"byte_end":16371342,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16371343,"byte_end":16371356,"line_start":169,"line_end":169,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::AsyncWriteExt;","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16371357,"byte_end":16371390,"line_start":170,"line_end":170,"column_start":1,"column_end":34}},{"value":"/ use bytes::Buf; // for advance","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16371391,"byte_end":16371425,"line_start":171,"line_end":171,"column_start":1,"column_end":35}},{"value":"/ # use tokio_util::codec::Encoder;","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16371426,"byte_end":16371463,"line_start":172,"line_end":172,"column_start":1,"column_end":38}},{"value":"/ # async fn next_frame() -> bytes::Bytes { bytes::Bytes::new() }","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16371464,"byte_end":16371531,"line_start":173,"line_end":173,"column_start":1,"column_end":68}},{"value":"/ # async fn no_more_frames() { }","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16371532,"byte_end":16371567,"line_start":174,"line_end":174,"column_start":1,"column_end":36}},{"value":"/ # #[tokio::main] async fn main() -> std::io::Result<()> {","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16371568,"byte_end":16371629,"line_start":175,"line_end":175,"column_start":1,"column_end":62}},{"value":"/ # let mut io_resource = tokio::io::sink();","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16371630,"byte_end":16371676,"line_start":176,"line_end":176,"column_start":1,"column_end":47}},{"value":"/ # let mut encoder = tokio_util::codec::BytesCodec::new();","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16371677,"byte_end":16371738,"line_start":177,"line_end":177,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16371739,"byte_end":16371742,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/ const MAX: usize = 8192;","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16371743,"byte_end":16371771,"line_start":179,"line_end":179,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16371772,"byte_end":16371775,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ let mut buf = bytes::BytesMut::new();","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16371776,"byte_end":16371817,"line_start":181,"line_end":181,"column_start":1,"column_end":42}},{"value":"/ loop {","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16371818,"byte_end":16371828,"line_start":182,"line_end":182,"column_start":1,"column_end":11}},{"value":"/     tokio::select! {","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16371829,"byte_end":16371853,"line_start":183,"line_end":183,"column_start":1,"column_end":25}},{"value":"/         num_written = io_resource.write(&buf), if !buf.is_empty() => {","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16371854,"byte_end":16371928,"line_start":184,"line_end":184,"column_start":1,"column_end":75}},{"value":"/             buf.advance(num_written?);","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16371929,"byte_end":16371971,"line_start":185,"line_end":185,"column_start":1,"column_end":43}},{"value":"/         },","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16371972,"byte_end":16371986,"line_start":186,"line_end":186,"column_start":1,"column_end":15}},{"value":"/         frame = next_frame(), if buf.len() < MAX => {","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16371987,"byte_end":16372044,"line_start":187,"line_end":187,"column_start":1,"column_end":58}},{"value":"/             encoder.encode(frame, &mut buf)?;","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16372045,"byte_end":16372094,"line_start":188,"line_end":188,"column_start":1,"column_end":50}},{"value":"/         },","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16372095,"byte_end":16372109,"line_start":189,"line_end":189,"column_start":1,"column_end":15}},{"value":"/         _ = no_more_frames() => {","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16372110,"byte_end":16372147,"line_start":190,"line_end":190,"column_start":1,"column_end":38}},{"value":"/             io_resource.write_all(&buf).await?;","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16372148,"byte_end":16372199,"line_start":191,"line_end":191,"column_start":1,"column_end":52}},{"value":"/             io_resource.shutdown().await?;","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16372200,"byte_end":16372246,"line_start":192,"line_end":192,"column_start":1,"column_end":47}},{"value":"/             return Ok(());","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16372247,"byte_end":16372277,"line_start":193,"line_end":193,"column_start":1,"column_end":31}},{"value":"/         },","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16372278,"byte_end":16372292,"line_start":194,"line_end":194,"column_start":1,"column_end":15}},{"value":"/     }","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16372293,"byte_end":16372302,"line_start":195,"line_end":195,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16372303,"byte_end":16372308,"line_start":196,"line_end":196,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16372309,"byte_end":16372316,"line_start":197,"line_end":197,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16372317,"byte_end":16372324,"line_start":198,"line_end":198,"column_start":1,"column_end":8}},{"value":"/ Here the `next_frame` method corresponds to any frames you write to the","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16372325,"byte_end":16372400,"line_start":199,"line_end":199,"column_start":1,"column_end":76}},{"value":"/ `FramedWrite`. The `no_more_frames` method corresponds to closing the","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16372401,"byte_end":16372474,"line_start":200,"line_end":200,"column_start":1,"column_end":74}},{"value":"/ `FramedWrite` with [`SinkExt::close`].","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16372475,"byte_end":16372517,"line_start":201,"line_end":201,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16372518,"byte_end":16372521,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/ ## Example encoder","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16372522,"byte_end":16372544,"line_start":203,"line_end":203,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16372545,"byte_end":16372548,"line_start":204,"line_end":204,"column_start":1,"column_end":4}},{"value":"/ As an example, consider a protocol that can be used to send strings where","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16372549,"byte_end":16372626,"line_start":205,"line_end":205,"column_start":1,"column_end":78}},{"value":"/ each frame is a four byte integer that contains the length of the frame,","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16372627,"byte_end":16372703,"line_start":206,"line_end":206,"column_start":1,"column_end":77}},{"value":"/ followed by that many bytes of string data. The encoder will fail if the","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16372704,"byte_end":16372780,"line_start":207,"line_end":207,"column_start":1,"column_end":77}},{"value":"/ string is too long.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16372781,"byte_end":16372804,"line_start":208,"line_end":208,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16372805,"byte_end":16372808,"line_start":209,"line_end":209,"column_start":1,"column_end":4}},{"value":"/ Such an encoder can be written like this:","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16372809,"byte_end":16372854,"line_start":210,"line_end":210,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16372855,"byte_end":16372862,"line_start":211,"line_end":211,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::codec::Encoder;","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16372863,"byte_end":16372898,"line_start":212,"line_end":212,"column_start":1,"column_end":36}},{"value":"/ use bytes::BytesMut;","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16372899,"byte_end":16372923,"line_start":213,"line_end":213,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16372924,"byte_end":16372927,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ struct MyStringEncoder {}","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16372928,"byte_end":16372957,"line_start":215,"line_end":215,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16372958,"byte_end":16372961,"line_start":216,"line_end":216,"column_start":1,"column_end":4}},{"value":"/ const MAX: usize = 8 * 1024 * 1024;","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16372962,"byte_end":16373001,"line_start":217,"line_end":217,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16373002,"byte_end":16373005,"line_start":218,"line_end":218,"column_start":1,"column_end":4}},{"value":"/ impl Encoder<String> for MyStringEncoder {","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16373006,"byte_end":16373052,"line_start":219,"line_end":219,"column_start":1,"column_end":47}},{"value":"/     type Error = std::io::Error;","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16373053,"byte_end":16373089,"line_start":220,"line_end":220,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16373090,"byte_end":16373093,"line_start":221,"line_end":221,"column_start":1,"column_end":4}},{"value":"/     fn encode(&mut self, item: String, dst: &mut BytesMut) -> Result<(), Self::Error> {","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16373094,"byte_end":16373185,"line_start":222,"line_end":222,"column_start":1,"column_end":92}},{"value":"/         // Don't send a string if it is longer than the other end will","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16373186,"byte_end":16373260,"line_start":223,"line_end":223,"column_start":1,"column_end":75}},{"value":"/         // accept.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16373261,"byte_end":16373283,"line_start":224,"line_end":224,"column_start":1,"column_end":23}},{"value":"/         if item.len() > MAX {","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16373284,"byte_end":16373317,"line_start":225,"line_end":225,"column_start":1,"column_end":34}},{"value":"/             return Err(std::io::Error::new(","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16373318,"byte_end":16373365,"line_start":226,"line_end":226,"column_start":1,"column_end":48}},{"value":"/                 std::io::ErrorKind::InvalidData,","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16373366,"byte_end":16373418,"line_start":227,"line_end":227,"column_start":1,"column_end":53}},{"value":"/                 format!(\"Frame of length {} is too large.\", item.len())","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16373419,"byte_end":16373494,"line_start":228,"line_end":228,"column_start":1,"column_end":76}},{"value":"/             ));","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16373495,"byte_end":16373514,"line_start":229,"line_end":229,"column_start":1,"column_end":20}},{"value":"/         }","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16373515,"byte_end":16373528,"line_start":230,"line_end":230,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16373529,"byte_end":16373532,"line_start":231,"line_end":231,"column_start":1,"column_end":4}},{"value":"/         // Convert the length into a byte array.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16373533,"byte_end":16373585,"line_start":232,"line_end":232,"column_start":1,"column_end":53}},{"value":"/         // The cast to u32 cannot overflow due to the length check above.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16373586,"byte_end":16373663,"line_start":233,"line_end":233,"column_start":1,"column_end":78}},{"value":"/         let len_slice = u32::to_le_bytes(item.len() as u32);","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16373664,"byte_end":16373728,"line_start":234,"line_end":234,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16373729,"byte_end":16373732,"line_start":235,"line_end":235,"column_start":1,"column_end":4}},{"value":"/         // Reserve space in the buffer.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16373733,"byte_end":16373776,"line_start":236,"line_end":236,"column_start":1,"column_end":44}},{"value":"/         dst.reserve(4 + item.len());","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16373777,"byte_end":16373817,"line_start":237,"line_end":237,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16373818,"byte_end":16373821,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/         // Write the length and string to the buffer.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16373822,"byte_end":16373879,"line_start":239,"line_end":239,"column_start":1,"column_end":58}},{"value":"/         dst.extend_from_slice(&len_slice);","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16373880,"byte_end":16373926,"line_start":240,"line_end":240,"column_start":1,"column_end":47}},{"value":"/         dst.extend_from_slice(item.as_bytes());","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16373927,"byte_end":16373978,"line_start":241,"line_end":241,"column_start":1,"column_end":52}},{"value":"/         Ok(())","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16373979,"byte_end":16373997,"line_start":242,"line_end":242,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16373998,"byte_end":16374007,"line_start":243,"line_end":243,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16374008,"byte_end":16374013,"line_start":244,"line_end":244,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16374014,"byte_end":16374021,"line_start":245,"line_end":245,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16374022,"byte_end":16374025,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: tokio::io::AsyncRead","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16374026,"byte_end":16374065,"line_start":247,"line_end":247,"column_start":1,"column_end":40}},{"value":"/ [`AsyncWrite`]: tokio::io::AsyncWrite","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16374066,"byte_end":16374107,"line_start":248,"line_end":248,"column_start":1,"column_end":42}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16374108,"byte_end":16374144,"line_start":249,"line_end":249,"column_start":1,"column_end":37}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16374145,"byte_end":16374177,"line_start":250,"line_end":250,"column_start":1,"column_end":33}},{"value":"/ [`SinkExt::close`]: https://docs.rs/futures/0.3/futures/sink/trait.SinkExt.html#method.close","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16374178,"byte_end":16374274,"line_start":251,"line_end":251,"column_start":1,"column_end":97}},{"value":"/ [`FramedRead`]: struct@crate::codec::FramedRead","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16374275,"byte_end":16374326,"line_start":252,"line_end":252,"column_start":1,"column_end":52}},{"value":"/ [`FramedWrite`]: struct@crate::codec::FramedWrite","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16374327,"byte_end":16374380,"line_start":253,"line_end":253,"column_start":1,"column_end":54}},{"value":"/ [`Framed`]: struct@crate::codec::Framed","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16374381,"byte_end":16374424,"line_start":254,"line_end":254,"column_start":1,"column_end":44}},{"value":"/ [`Decoder`]: trait@crate::codec::Decoder","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16374425,"byte_end":16374469,"line_start":255,"line_end":255,"column_start":1,"column_end":45}},{"value":"/ [`decode`]: fn@crate::codec::Decoder::decode","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16374470,"byte_end":16374518,"line_start":256,"line_end":256,"column_start":1,"column_end":49}},{"value":"/ [`encode`]: fn@crate::codec::Encoder::encode","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16374519,"byte_end":16374567,"line_start":257,"line_end":257,"column_start":1,"column_end":49}},{"value":"/ [`split_to`]: fn@bytes::BytesMut::split_to","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16374568,"byte_end":16374614,"line_start":258,"line_end":258,"column_start":1,"column_end":47}},{"value":"/ [`advance`]: fn@bytes::Buf::advance","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16374615,"byte_end":16374654,"line_start":259,"line_end":259,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":1165},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16376678,"byte_end":16376688,"line_start":45,"line_end":45,"column_start":12,"column_end":22},"name":"BytesCodec","qualname":"::codec::bytes_codec::BytesCodec","value":"","parent":null,"children":[],"decl_id":null,"docs":" A simple [`Decoder`] and [`Encoder`] implementation that just ships bytes around.","sig":null,"attributes":[{"value":"/ A simple [`Decoder`] and [`Encoder`] implementation that just ships bytes around.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16375521,"byte_end":16375606,"line_start":7,"line_end":7,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16375607,"byte_end":16375610,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16375611,"byte_end":16375649,"line_start":9,"line_end":9,"column_start":1,"column_end":39}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16375650,"byte_end":16375688,"line_start":10,"line_end":10,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16375689,"byte_end":16375692,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16375693,"byte_end":16375706,"line_start":12,"line_end":12,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16375707,"byte_end":16375710,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Turn an [`AsyncRead`] into a stream of `Result<`[`BytesMut`]`, `[`Error`]`>`.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16375711,"byte_end":16375792,"line_start":14,"line_end":14,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16375793,"byte_end":16375796,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: tokio::io::AsyncRead","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16375797,"byte_end":16375836,"line_start":16,"line_end":16,"column_start":1,"column_end":40}},{"value":"/ [`BytesMut`]: bytes::BytesMut","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16375837,"byte_end":16375870,"line_start":17,"line_end":17,"column_start":1,"column_end":34}},{"value":"/ [`Error`]: std::io::Error","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16375871,"byte_end":16375900,"line_start":18,"line_end":18,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16375901,"byte_end":16375904,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16375905,"byte_end":16375912,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ # mod hidden {","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16375913,"byte_end":16375931,"line_start":21,"line_end":21,"column_start":1,"column_end":19}},{"value":"/ # #[allow(unused_imports)]","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16375932,"byte_end":16375962,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16375963,"byte_end":16375987,"line_start":23,"line_end":23,"column_start":1,"column_end":25}},{"value":"/ # }","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16375988,"byte_end":16375995,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::AsyncRead;","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16375996,"byte_end":16376025,"line_start":25,"line_end":25,"column_start":1,"column_end":30}},{"value":"/ use tokio_util::codec::{FramedRead, BytesCodec};","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16376026,"byte_end":16376078,"line_start":26,"line_end":26,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16376079,"byte_end":16376082,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # enum File {}","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16376083,"byte_end":16376101,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"/ # impl File {","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16376102,"byte_end":16376119,"line_start":29,"line_end":29,"column_start":1,"column_end":18}},{"value":"/ #     async fn open(_name: &str) -> Result<impl AsyncRead, std::io::Error> {","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16376120,"byte_end":16376200,"line_start":30,"line_end":30,"column_start":1,"column_end":81}},{"value":"/ #         use std::io::Cursor;","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16376201,"byte_end":16376235,"line_start":31,"line_end":31,"column_start":1,"column_end":35}},{"value":"/ #         Ok(Cursor::new(vec![0, 1, 2, 3, 4, 5]))","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16376236,"byte_end":16376289,"line_start":32,"line_end":32,"column_start":1,"column_end":54}},{"value":"/ #     }","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16376290,"byte_end":16376301,"line_start":33,"line_end":33,"column_start":1,"column_end":12}},{"value":"/ # }","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16376302,"byte_end":16376309,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16376310,"byte_end":16376315,"line_start":35,"line_end":35,"column_start":1,"column_end":6}},{"value":"/ # #[tokio::main(flavor = \"current_thread\")]","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16376316,"byte_end":16376363,"line_start":36,"line_end":36,"column_start":1,"column_end":48}},{"value":"/ # async fn main() -> Result<(), std::io::Error> {","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16376364,"byte_end":16376417,"line_start":37,"line_end":37,"column_start":1,"column_end":54}},{"value":"/ let my_async_read = File::open(\"filename.txt\").await?;","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16376418,"byte_end":16376476,"line_start":38,"line_end":38,"column_start":1,"column_end":59}},{"value":"/ let my_stream_of_bytes = FramedRead::new(my_async_read, BytesCodec::new());","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16376477,"byte_end":16376556,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"/ # Ok(())","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16376557,"byte_end":16376569,"line_start":40,"line_end":40,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16376570,"byte_end":16376577,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16376578,"byte_end":16376585,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16376586,"byte_end":16376589,"line_start":43,"line_end":43,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":480},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16376790,"byte_end":16376793,"line_start":49,"line_end":49,"column_start":12,"column_end":15},"name":"new","qualname":"<BytesCodec>::new","value":"fn new() -> BytesCodec","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BytesCodec` for shipping around raw bytes.\n","sig":null,"attributes":[{"value":"/ Creates a new `BytesCodec` for shipping around raw bytes.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16376717,"byte_end":16376778,"line_start":48,"line_end":48,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":484},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16376936,"byte_end":16376942,"line_start":58,"line_end":58,"column_start":8,"column_end":14},"name":"decode","qualname":"<BytesCodec as codec::decoder::Decoder>::decode","value":"fn decode<'_, '_>(&'_ mut Self, &'_ mut BytesMut)\n-> Result<Option<BytesMut>, io::Error>","parent":{"krate":0,"index":511},"children":[],"decl_id":{"krate":0,"index":514},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":487},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16377247,"byte_end":16377253,"line_start":71,"line_end":71,"column_start":8,"column_end":14},"name":"encode","qualname":"<BytesCodec as codec::encoder::Encoder>::encode","value":"fn encode<'_, '_>(&'_ mut Self, Bytes, &'_ mut BytesMut)\n-> Result<(), io::Error>","parent":{"krate":0,"index":528},"children":[],"decl_id":{"krate":0,"index":531},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":490},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16377481,"byte_end":16377487,"line_start":81,"line_end":81,"column_start":8,"column_end":14},"name":"encode","qualname":"<BytesCodec as codec::encoder::Encoder>::encode","value":"fn encode<'_, '_>(&'_ mut Self, BytesMut, &'_ mut BytesMut)\n-> Result<(), io::Error>","parent":{"krate":0,"index":528},"children":[],"decl_id":{"krate":0,"index":531},"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":511},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16379030,"byte_end":16379037,"line_start":35,"line_end":35,"column_start":11,"column_end":18},"name":"Decoder","qualname":"::codec::decoder::Decoder","value":"Decoder","parent":null,"children":[{"krate":0,"index":512},{"krate":0,"index":513},{"krate":0,"index":514},{"krate":0,"index":515},{"krate":0,"index":516}],"decl_id":null,"docs":" Decoding of frames via buffers.","sig":null,"attributes":[{"value":"/ Decoding of frames via buffers.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16377745,"byte_end":16377780,"line_start":8,"line_end":8,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16377781,"byte_end":16377784,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This trait is used when constructing an instance of [`Framed`] or","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16377785,"byte_end":16377854,"line_start":10,"line_end":10,"column_start":1,"column_end":70}},{"value":"/ [`FramedRead`]. An implementation of `Decoder` takes a byte stream that has","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16377855,"byte_end":16377934,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ already been buffered in `src` and decodes the data into a stream of","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16377935,"byte_end":16378007,"line_start":12,"line_end":12,"column_start":1,"column_end":73}},{"value":"/ `Self::Item` frames.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16378008,"byte_end":16378032,"line_start":13,"line_end":13,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16378033,"byte_end":16378036,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Implementations are able to track state on `self`, which enables","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16378037,"byte_end":16378105,"line_start":15,"line_end":15,"column_start":1,"column_end":69}},{"value":"/ implementing stateful streaming parsers. In many cases, though, this type","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16378106,"byte_end":16378183,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ will simply be a unit struct (e.g. `struct HttpDecoder`).","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16378184,"byte_end":16378245,"line_start":17,"line_end":17,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16378246,"byte_end":16378249,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ For some underlying data-sources, namely files and FIFOs,","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16378250,"byte_end":16378311,"line_start":19,"line_end":19,"column_start":1,"column_end":62}},{"value":"/ it's possible to temporarily read 0 bytes by reaching EOF.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16378312,"byte_end":16378374,"line_start":20,"line_end":20,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16378375,"byte_end":16378378,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ In these cases `decode_eof` will be called until it signals","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16378379,"byte_end":16378442,"line_start":22,"line_end":22,"column_start":1,"column_end":64}},{"value":"/ fulfillment of all closing frames by returning `Ok(None)`.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16378443,"byte_end":16378505,"line_start":23,"line_end":23,"column_start":1,"column_end":63}},{"value":"/ After that, repeated attempts to read from the [`Framed`] or [`FramedRead`]","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16378506,"byte_end":16378585,"line_start":24,"line_end":24,"column_start":1,"column_end":80}},{"value":"/ will not invoke `decode` or `decode_eof` again, until data can be read","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16378586,"byte_end":16378660,"line_start":25,"line_end":25,"column_start":1,"column_end":75}},{"value":"/ during a retry.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16378661,"byte_end":16378680,"line_start":26,"line_end":26,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16378681,"byte_end":16378684,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ It is up to the Decoder to keep track of a restart after an EOF,","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16378685,"byte_end":16378753,"line_start":28,"line_end":28,"column_start":1,"column_end":69}},{"value":"/ and to decide how to handle such an event by, for example,","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16378754,"byte_end":16378816,"line_start":29,"line_end":29,"column_start":1,"column_end":63}},{"value":"/ allowing frames to cross EOF boundaries, re-emitting opening frames, or","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16378817,"byte_end":16378892,"line_start":30,"line_end":30,"column_start":1,"column_end":76}},{"value":"/ resetting the entire internal state.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16378893,"byte_end":16378933,"line_start":31,"line_end":31,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16378934,"byte_end":16378937,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16378938,"byte_end":16378974,"line_start":33,"line_end":33,"column_start":1,"column_end":37}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16378975,"byte_end":16379019,"line_start":34,"line_end":34,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":512},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16379085,"byte_end":16379089,"line_start":37,"line_end":37,"column_start":10,"column_end":14},"name":"Item","qualname":"::codec::decoder::Decoder::Item","value":"type Item;","parent":{"krate":0,"index":511},"children":[],"decl_id":null,"docs":" The type of decoded frames.\n","sig":null,"attributes":[{"value":"/ The type of decoded frames.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16379044,"byte_end":16379075,"line_start":36,"line_end":36,"column_start":5,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":513},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16379855,"byte_end":16379860,"line_start":54,"line_end":54,"column_start":10,"column_end":15},"name":"Error","qualname":"::codec::decoder::Decoder::Error","value":"type Error: From<io::Error>;","parent":{"krate":0,"index":511},"children":[],"decl_id":null,"docs":" The type of unrecoverable frame decoding errors.","sig":null,"attributes":[{"value":"/ The type of unrecoverable frame decoding errors.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16379096,"byte_end":16379148,"line_start":39,"line_end":39,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16379153,"byte_end":16379156,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ If an individual message is ill-formed but can be ignored without","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16379161,"byte_end":16379230,"line_start":41,"line_end":41,"column_start":5,"column_end":74}},{"value":"/ interfering with the processing of future messages, it may be more","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16379235,"byte_end":16379305,"line_start":42,"line_end":42,"column_start":5,"column_end":75}},{"value":"/ useful to report the failure as an `Item`.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16379310,"byte_end":16379356,"line_start":43,"line_end":43,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16379361,"byte_end":16379364,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ `From<io::Error>` is required in the interest of making `Error` suitable","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16379369,"byte_end":16379445,"line_start":45,"line_end":45,"column_start":5,"column_end":81}},{"value":"/ for returning directly from a [`FramedRead`], and to enable the default","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16379450,"byte_end":16379525,"line_start":46,"line_end":46,"column_start":5,"column_end":80}},{"value":"/ implementation of `decode_eof` to yield an `io::Error` when the decoder","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16379530,"byte_end":16379605,"line_start":47,"line_end":47,"column_start":5,"column_end":80}},{"value":"/ fails to consume all available data.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16379610,"byte_end":16379650,"line_start":48,"line_end":48,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16379655,"byte_end":16379658,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ Note that implementors of this trait can simply indicate `type Error =","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16379663,"byte_end":16379737,"line_start":50,"line_end":50,"column_start":5,"column_end":79}},{"value":"/ io::Error` to use I/O errors as this type.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16379742,"byte_end":16379788,"line_start":51,"line_end":51,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16379793,"byte_end":16379796,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16379801,"byte_end":16379845,"line_start":53,"line_end":53,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":514},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16382796,"byte_end":16382802,"line_start":124,"line_end":124,"column_start":8,"column_end":14},"name":"decode","qualname":"::codec::decoder::Decoder::decode","value":"fn decode<'_, '_>(&'_ mut Self, &'_ mut BytesMut)\n-> Result<Option<Self::Item>, Self::Error>","parent":{"krate":0,"index":511},"children":[],"decl_id":null,"docs":" Attempts to decode a frame from the provided buffer of bytes.","sig":null,"attributes":[{"value":"/ Attempts to decode a frame from the provided buffer of bytes.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16379884,"byte_end":16379949,"line_start":56,"line_end":56,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16379954,"byte_end":16379957,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ This method is called by [`FramedRead`] whenever bytes are ready to be","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16379962,"byte_end":16380036,"line_start":58,"line_end":58,"column_start":5,"column_end":79}},{"value":"/ parsed. The provided buffer of bytes is what's been read so far, and","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16380041,"byte_end":16380113,"line_start":59,"line_end":59,"column_start":5,"column_end":77}},{"value":"/ this instance of `Decode` can determine whether an entire frame is in","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16380118,"byte_end":16380191,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/ the buffer and is ready to be returned.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16380196,"byte_end":16380239,"line_start":61,"line_end":61,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16380244,"byte_end":16380247,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ If an entire frame is available, then this instance will remove those","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16380252,"byte_end":16380325,"line_start":63,"line_end":63,"column_start":5,"column_end":78}},{"value":"/ bytes from the buffer provided and return them as a decoded","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16380330,"byte_end":16380393,"line_start":64,"line_end":64,"column_start":5,"column_end":68}},{"value":"/ frame. Note that removing bytes from the provided buffer doesn't always","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16380398,"byte_end":16380473,"line_start":65,"line_end":65,"column_start":5,"column_end":80}},{"value":"/ necessarily copy the bytes, so this should be an efficient operation in","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16380478,"byte_end":16380553,"line_start":66,"line_end":66,"column_start":5,"column_end":80}},{"value":"/ most circumstances.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16380558,"byte_end":16380581,"line_start":67,"line_end":67,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16380586,"byte_end":16380589,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ If the bytes look valid, but a frame isn't fully available yet, then","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16380594,"byte_end":16380666,"line_start":69,"line_end":69,"column_start":5,"column_end":77}},{"value":"/ `Ok(None)` is returned. This indicates to the [`Framed`] instance that","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16380671,"byte_end":16380745,"line_start":70,"line_end":70,"column_start":5,"column_end":79}},{"value":"/ it needs to read some more bytes before calling this method again.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16380750,"byte_end":16380820,"line_start":71,"line_end":71,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16380825,"byte_end":16380828,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ Note that the bytes provided may be empty. If a previous call to","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16380833,"byte_end":16380901,"line_start":73,"line_end":73,"column_start":5,"column_end":73}},{"value":"/ `decode` consumed all the bytes in the buffer then `decode` will be","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16380906,"byte_end":16380977,"line_start":74,"line_end":74,"column_start":5,"column_end":76}},{"value":"/ called again until it returns `Ok(None)`, indicating that more bytes need to","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16380982,"byte_end":16381062,"line_start":75,"line_end":75,"column_start":5,"column_end":85}},{"value":"/ be read.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16381067,"byte_end":16381079,"line_start":76,"line_end":76,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16381084,"byte_end":16381087,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ Finally, if the bytes in the buffer are malformed then an error is","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16381092,"byte_end":16381162,"line_start":78,"line_end":78,"column_start":5,"column_end":75}},{"value":"/ returned indicating why. This informs [`Framed`] that the stream is now","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16381167,"byte_end":16381242,"line_start":79,"line_end":79,"column_start":5,"column_end":80}},{"value":"/ corrupt and should be terminated.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16381247,"byte_end":16381284,"line_start":80,"line_end":80,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16381289,"byte_end":16381292,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16381297,"byte_end":16381333,"line_start":82,"line_end":82,"column_start":5,"column_end":41}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16381338,"byte_end":16381382,"line_start":83,"line_end":83,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16381387,"byte_end":16381390,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ # Buffer management","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16381395,"byte_end":16381418,"line_start":85,"line_end":85,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16381423,"byte_end":16381426,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ Before returning from the function, implementations should ensure that","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16381431,"byte_end":16381505,"line_start":87,"line_end":87,"column_start":5,"column_end":79}},{"value":"/ the buffer has appropriate capacity in anticipation of future calls to","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16381510,"byte_end":16381584,"line_start":88,"line_end":88,"column_start":5,"column_end":79}},{"value":"/ `decode`. Failing to do so leads to inefficiency.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16381589,"byte_end":16381642,"line_start":89,"line_end":89,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16381647,"byte_end":16381650,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ For example, if frames have a fixed length, or if the length of the","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16381655,"byte_end":16381726,"line_start":91,"line_end":91,"column_start":5,"column_end":76}},{"value":"/ current frame is known from a header, a possible buffer management","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16381731,"byte_end":16381801,"line_start":92,"line_end":92,"column_start":5,"column_end":75}},{"value":"/ strategy is:","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16381806,"byte_end":16381822,"line_start":93,"line_end":93,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16381827,"byte_end":16381830,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16381835,"byte_end":16381848,"line_start":95,"line_end":95,"column_start":5,"column_end":18}},{"value":"/ # use std::io;","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16381853,"byte_end":16381871,"line_start":96,"line_end":96,"column_start":5,"column_end":23}},{"value":"/ #","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16381876,"byte_end":16381881,"line_start":97,"line_end":97,"column_start":5,"column_end":10}},{"value":"/ # use bytes::BytesMut;","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16381886,"byte_end":16381912,"line_start":98,"line_end":98,"column_start":5,"column_end":31}},{"value":"/ # use tokio_util::codec::Decoder;","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16381917,"byte_end":16381954,"line_start":99,"line_end":99,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16381959,"byte_end":16381964,"line_start":100,"line_end":100,"column_start":5,"column_end":10}},{"value":"/ # struct MyCodec;","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16381969,"byte_end":16381990,"line_start":101,"line_end":101,"column_start":5,"column_end":26}},{"value":"/ #","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16381995,"byte_end":16382000,"line_start":102,"line_end":102,"column_start":5,"column_end":10}},{"value":"/ impl Decoder for MyCodec {","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16382005,"byte_end":16382035,"line_start":103,"line_end":103,"column_start":5,"column_end":35}},{"value":"/     // ...","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16382040,"byte_end":16382054,"line_start":104,"line_end":104,"column_start":5,"column_end":19}},{"value":"/     # type Item = BytesMut;","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16382059,"byte_end":16382090,"line_start":105,"line_end":105,"column_start":5,"column_end":36}},{"value":"/     # type Error = io::Error;","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16382095,"byte_end":16382128,"line_start":106,"line_end":106,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16382133,"byte_end":16382136,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/     fn decode(&mut self, src: &mut BytesMut) -> Result<Option<Self::Item>, Self::Error> {","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16382141,"byte_end":16382234,"line_start":108,"line_end":108,"column_start":5,"column_end":98}},{"value":"/         // ...","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16382239,"byte_end":16382257,"line_start":109,"line_end":109,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16382262,"byte_end":16382265,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/         // Reserve enough to complete decoding of the current frame.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16382270,"byte_end":16382342,"line_start":111,"line_end":111,"column_start":5,"column_end":77}},{"value":"/         let current_frame_len: usize = 1000; // Example.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16382347,"byte_end":16382407,"line_start":112,"line_end":112,"column_start":5,"column_end":65}},{"value":"/         // And to start decoding the next frame.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16382412,"byte_end":16382464,"line_start":113,"line_end":113,"column_start":5,"column_end":57}},{"value":"/         let next_frame_header_len: usize = 10; // Example.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16382469,"byte_end":16382531,"line_start":114,"line_end":114,"column_start":5,"column_end":67}},{"value":"/         src.reserve(current_frame_len + next_frame_header_len);","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16382536,"byte_end":16382603,"line_start":115,"line_end":115,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16382608,"byte_end":16382611,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/         return Ok(None);","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16382616,"byte_end":16382644,"line_start":117,"line_end":117,"column_start":5,"column_end":33}},{"value":"/     }","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16382649,"byte_end":16382658,"line_start":118,"line_end":118,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16382663,"byte_end":16382668,"line_start":119,"line_end":119,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16382673,"byte_end":16382680,"line_start":120,"line_end":120,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16382685,"byte_end":16382688,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ An optimal buffer management strategy minimizes reallocations and","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16382693,"byte_end":16382762,"line_start":122,"line_end":122,"column_start":5,"column_end":74}},{"value":"/ over-allocations.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16382767,"byte_end":16382788,"line_start":123,"line_end":123,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":515},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16383968,"byte_end":16383978,"line_start":144,"line_end":144,"column_start":8,"column_end":18},"name":"decode_eof","qualname":"::codec::decoder::Decoder::decode_eof","value":"fn decode_eof<'_, '_>(&'_ mut Self, &'_ mut BytesMut)\n-> Result<Option<Self::Item>, Self::Error>","parent":{"krate":0,"index":511},"children":[],"decl_id":null,"docs":" A default method available to be called when there are no more bytes\n available to be read from the underlying I/O.","sig":null,"attributes":[{"value":"/ A default method available to be called when there are no more bytes","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16382883,"byte_end":16382955,"line_start":126,"line_end":126,"column_start":5,"column_end":77}},{"value":"/ available to be read from the underlying I/O.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16382960,"byte_end":16383009,"line_start":127,"line_end":127,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16383014,"byte_end":16383017,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ This method defaults to calling `decode` and returns an error if","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16383022,"byte_end":16383090,"line_start":129,"line_end":129,"column_start":5,"column_end":73}},{"value":"/ `Ok(None)` is returned while there is unconsumed data in `buf`.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16383095,"byte_end":16383162,"line_start":130,"line_end":130,"column_start":5,"column_end":72}},{"value":"/ Typically this doesn't need to be implemented unless the framing","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16383167,"byte_end":16383235,"line_start":131,"line_end":131,"column_start":5,"column_end":73}},{"value":"/ protocol differs near the end of the stream, or if you need to construct","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16383240,"byte_end":16383316,"line_start":132,"line_end":132,"column_start":5,"column_end":81}},{"value":"/ frames _across_ eof boundaries on sources that can be resumed.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16383321,"byte_end":16383387,"line_start":133,"line_end":133,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16383392,"byte_end":16383395,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ Note that the `buf` argument may be empty. If a previous call to","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16383400,"byte_end":16383468,"line_start":135,"line_end":135,"column_start":5,"column_end":73}},{"value":"/ `decode_eof` consumed all the bytes in the buffer, `decode_eof` will be","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16383473,"byte_end":16383548,"line_start":136,"line_end":136,"column_start":5,"column_end":80}},{"value":"/ called again until it returns `None`, indicating that there are no more","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16383553,"byte_end":16383628,"line_start":137,"line_end":137,"column_start":5,"column_end":80}},{"value":"/ frames to yield. This behavior enables returning finalization frames","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16383633,"byte_end":16383705,"line_start":138,"line_end":138,"column_start":5,"column_end":77}},{"value":"/ that may not be based on inbound data.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16383710,"byte_end":16383752,"line_start":139,"line_end":139,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16383757,"byte_end":16383760,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ Once `None` has been returned, `decode_eof` won't be called again until","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16383765,"byte_end":16383840,"line_start":141,"line_end":141,"column_start":5,"column_end":80}},{"value":"/ an attempt to resume the stream has been made, where the underlying stream","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16383845,"byte_end":16383923,"line_start":142,"line_end":142,"column_start":5,"column_end":83}},{"value":"/ actually returned more data.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16383928,"byte_end":16383960,"line_start":143,"line_end":143,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":516},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16385586,"byte_end":16385592,"line_start":178,"line_end":178,"column_start":8,"column_end":14},"name":"framed","qualname":"::codec::decoder::Decoder::framed","value":"fn framed<T>(Self, T) -> Framed<T, Self> where T: AsyncRead + AsyncWrite +\nSized, Self: Sized","parent":{"krate":0,"index":511},"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n `Io` object, using `Decode` and `Encode` to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16384396,"byte_end":16384476,"line_start":157,"line_end":157,"column_start":5,"column_end":85}},{"value":"/ `Io` object, using `Decode` and `Encode` to read and write the raw data.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16384481,"byte_end":16384557,"line_start":158,"line_end":158,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16384562,"byte_end":16384565,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16384570,"byte_end":16384645,"line_start":160,"line_end":160,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16384650,"byte_end":16384720,"line_start":161,"line_end":161,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the `Codec`","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16384725,"byte_end":16384796,"line_start":162,"line_end":162,"column_start":5,"column_end":76}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16384801,"byte_end":16384873,"line_start":163,"line_end":163,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16384878,"byte_end":16384936,"line_start":164,"line_end":164,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16384941,"byte_end":16384944,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both `Stream` and","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16384949,"byte_end":16385018,"line_start":166,"line_end":166,"column_start":5,"column_end":74}},{"value":"/ `Sink`; grouping this into a single object is often useful for layering","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16385023,"byte_end":16385098,"line_start":167,"line_end":167,"column_start":5,"column_end":80}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16385103,"byte_end":16385179,"line_start":168,"line_end":168,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16385184,"byte_end":16385206,"line_start":169,"line_end":169,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16385211,"byte_end":16385214,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16385219,"byte_end":16385292,"line_start":171,"line_end":171,"column_start":5,"column_end":78}},{"value":"/ calling `split` on the [`Framed`] returned by this method, which will","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16385297,"byte_end":16385370,"line_start":172,"line_end":172,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16385375,"byte_end":16385451,"line_start":173,"line_end":173,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16385456,"byte_end":16385459,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16385464,"byte_end":16385500,"line_start":175,"line_end":175,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16385505,"byte_end":16385537,"line_start":176,"line_end":176,"column_start":5,"column_end":37}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16385542,"byte_end":16385578,"line_start":177,"line_end":177,"column_start":5,"column_end":41}}]},{"kind":"Trait","id":{"krate":0,"index":528},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/encoder.rs","byte_start":16385926,"byte_end":16385933,"line_start":8,"line_end":8,"column_start":11,"column_end":18},"name":"Encoder","qualname":"::codec::encoder::Encoder","value":"Encoder<Item>","parent":null,"children":[{"krate":0,"index":530},{"krate":0,"index":531}],"decl_id":null,"docs":" Trait of helper objects to write out messages as bytes, for use with\n [`FramedWrite`].","sig":null,"attributes":[{"value":"/ Trait of helper objects to write out messages as bytes, for use with","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/encoder.rs","byte_start":16385771,"byte_end":16385843,"line_start":4,"line_end":4,"column_start":1,"column_end":73}},{"value":"/ [`FramedWrite`].","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/encoder.rs","byte_start":16385844,"byte_end":16385864,"line_start":5,"line_end":5,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/encoder.rs","byte_start":16385865,"byte_end":16385868,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/encoder.rs","byte_start":16385869,"byte_end":16385915,"line_start":7,"line_end":7,"column_start":1,"column_end":47}}]},{"kind":"Type","id":{"krate":0,"index":530},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/encoder.rs","byte_start":16386198,"byte_end":16386203,"line_start":15,"line_end":15,"column_start":10,"column_end":15},"name":"Error","qualname":"::codec::encoder::Encoder::Error","value":"type Error: From<io::Error>;","parent":{"krate":0,"index":528},"children":[],"decl_id":null,"docs":" The type of encoding errors.","sig":null,"attributes":[{"value":"/ The type of encoding errors.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/encoder.rs","byte_start":16385946,"byte_end":16385978,"line_start":9,"line_end":9,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/encoder.rs","byte_start":16385983,"byte_end":16385986,"line_start":10,"line_end":10,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`] requires `Encoder`s errors to implement `From<io::Error>`","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/encoder.rs","byte_start":16385991,"byte_end":16386068,"line_start":11,"line_end":11,"column_start":5,"column_end":82}},{"value":"/ in the interest letting it return `Error`s directly.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/encoder.rs","byte_start":16386073,"byte_end":16386129,"line_start":12,"line_end":12,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/encoder.rs","byte_start":16386134,"byte_end":16386137,"line_start":13,"line_end":13,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/encoder.rs","byte_start":16386142,"byte_end":16386188,"line_start":14,"line_end":14,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":531},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/encoder.rs","byte_start":16386554,"byte_end":16386560,"line_start":24,"line_end":24,"column_start":8,"column_end":14},"name":"encode","qualname":"::codec::encoder::Encoder::encode","value":"fn encode<'_, '_>(&'_ mut Self, Item, &'_ mut BytesMut)\n-> Result<(), Self::Error>","parent":{"krate":0,"index":528},"children":[],"decl_id":null,"docs":" Encodes a frame into the buffer provided.","sig":null,"attributes":[{"value":"/ Encodes a frame into the buffer provided.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/encoder.rs","byte_start":16386227,"byte_end":16386272,"line_start":17,"line_end":17,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/encoder.rs","byte_start":16386277,"byte_end":16386280,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ This method will encode `item` into the byte buffer provided by `dst`.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/encoder.rs","byte_start":16386285,"byte_end":16386359,"line_start":19,"line_end":19,"column_start":5,"column_end":79}},{"value":"/ The `dst` provided is an internal buffer of the [`FramedWrite`] instance and","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/encoder.rs","byte_start":16386364,"byte_end":16386444,"line_start":20,"line_end":20,"column_start":5,"column_end":85}},{"value":"/ will be written out when possible.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/encoder.rs","byte_start":16386449,"byte_end":16386487,"line_start":21,"line_end":21,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/encoder.rs","byte_start":16386492,"byte_end":16386495,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/encoder.rs","byte_start":16386500,"byte_end":16386546,"line_start":23,"line_end":23,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":1475},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16400200,"byte_end":16400206,"line_start":27,"line_end":27,"column_start":16,"column_end":22},"name":"Framed","qualname":"::codec::framed::Framed","value":"Framed {  }","parent":null,"children":[{"krate":0,"index":1478}],"decl_id":null,"docs":" A unified [`Stream`] and [`Sink`] interface to an underlying I/O object, using\n the `Encoder` and `Decoder` traits to encode and decode frames.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":703},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16401979,"byte_end":16401982,"line_start":65,"line_end":65,"column_start":12,"column_end":15},"name":"new","qualname":"<Framed<T, U>>::new","value":"fn new(T, U) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16400348,"byte_end":16400428,"line_start":37,"line_end":37,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16400433,"byte_end":16400514,"line_start":38,"line_end":38,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16400519,"byte_end":16400522,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16400527,"byte_end":16400602,"line_start":40,"line_end":40,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16400607,"byte_end":16400677,"line_start":41,"line_end":41,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the codec","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16400682,"byte_end":16400751,"line_start":42,"line_end":42,"column_start":5,"column_end":74}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16400756,"byte_end":16400828,"line_start":43,"line_end":43,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16400833,"byte_end":16400891,"line_start":44,"line_end":44,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16400896,"byte_end":16400899,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16400904,"byte_end":16400975,"line_start":46,"line_end":46,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16400980,"byte_end":16401057,"line_start":47,"line_end":47,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16401062,"byte_end":16401138,"line_start":48,"line_end":48,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16401143,"byte_end":16401165,"line_start":49,"line_end":49,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16401170,"byte_end":16401173,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16401178,"byte_end":16401251,"line_start":51,"line_end":51,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16401256,"byte_end":16401329,"line_start":52,"line_end":52,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16401334,"byte_end":16401410,"line_start":53,"line_end":53,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16401415,"byte_end":16401418,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Note that, for some byte sources, the stream can be resumed after an EOF","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16401423,"byte_end":16401499,"line_start":55,"line_end":55,"column_start":5,"column_end":81}},{"value":"/ by reading from it, even after it has returned `None`. Repeated attempts","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16401504,"byte_end":16401580,"line_start":56,"line_end":56,"column_start":5,"column_end":81}},{"value":"/ to do so, without new data available, continue to return `None` without","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16401585,"byte_end":16401660,"line_start":57,"line_end":57,"column_start":5,"column_end":80}},{"value":"/ creating more (closing) frames.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16401665,"byte_end":16401700,"line_start":58,"line_end":58,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16401705,"byte_end":16401708,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16401713,"byte_end":16401749,"line_start":60,"line_end":60,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16401754,"byte_end":16401786,"line_start":61,"line_end":61,"column_start":5,"column_end":37}},{"value":"/ [`Decode`]: crate::codec::Decoder","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16401791,"byte_end":16401828,"line_start":62,"line_end":62,"column_start":5,"column_end":42}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16401833,"byte_end":16401871,"line_start":63,"line_end":63,"column_start":5,"column_end":43}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16401876,"byte_end":16401967,"line_start":64,"line_end":64,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":704},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16403590,"byte_end":16403603,"line_start":99,"line_end":99,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<Framed<T, U>>::with_capacity","value":"fn with_capacity(T, U, usize) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data,\n with a specific read buffer initial capacity.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16402195,"byte_end":16402275,"line_start":75,"line_end":75,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data,","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16402280,"byte_end":16402361,"line_start":76,"line_end":76,"column_start":5,"column_end":86}},{"value":"/ with a specific read buffer initial capacity.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16402366,"byte_end":16402415,"line_start":77,"line_end":77,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16402420,"byte_end":16402423,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16402428,"byte_end":16402503,"line_start":79,"line_end":79,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16402508,"byte_end":16402578,"line_start":80,"line_end":80,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the codec","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16402583,"byte_end":16402652,"line_start":81,"line_end":81,"column_start":5,"column_end":74}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16402657,"byte_end":16402729,"line_start":82,"line_end":82,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16402734,"byte_end":16402792,"line_start":83,"line_end":83,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16402797,"byte_end":16402800,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16402805,"byte_end":16402876,"line_start":85,"line_end":85,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16402881,"byte_end":16402958,"line_start":86,"line_end":86,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16402963,"byte_end":16403039,"line_start":87,"line_end":87,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16403044,"byte_end":16403066,"line_start":88,"line_end":88,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16403071,"byte_end":16403074,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16403079,"byte_end":16403152,"line_start":90,"line_end":90,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16403157,"byte_end":16403230,"line_start":91,"line_end":91,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16403235,"byte_end":16403311,"line_start":92,"line_end":92,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16403316,"byte_end":16403319,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16403324,"byte_end":16403360,"line_start":94,"line_end":94,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16403365,"byte_end":16403397,"line_start":95,"line_end":95,"column_start":5,"column_end":37}},{"value":"/ [`Decode`]: crate::codec::Decoder","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16403402,"byte_end":16403439,"line_start":96,"line_end":96,"column_start":5,"column_end":42}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16403444,"byte_end":16403482,"line_start":97,"line_end":97,"column_start":5,"column_end":43}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16403487,"byte_end":16403578,"line_start":98,"line_end":98,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":708},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16405750,"byte_end":16405760,"line_start":146,"line_end":146,"column_start":12,"column_end":22},"name":"from_parts","qualname":"<Framed<T, U>>::from_parts","value":"fn from_parts(FramedParts<T, U>) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16404173,"byte_end":16404253,"line_start":119,"line_end":119,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16404258,"byte_end":16404339,"line_start":120,"line_end":120,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16404344,"byte_end":16404347,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16404352,"byte_end":16404427,"line_start":122,"line_end":122,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16404432,"byte_end":16404502,"line_start":123,"line_end":123,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the `Codec`","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16404507,"byte_end":16404578,"line_start":124,"line_end":124,"column_start":5,"column_end":76}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16404583,"byte_end":16404655,"line_start":125,"line_end":125,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16404660,"byte_end":16404718,"line_start":126,"line_end":126,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16404723,"byte_end":16404726,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16404731,"byte_end":16404802,"line_start":128,"line_end":128,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16404807,"byte_end":16404884,"line_start":129,"line_end":129,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16404889,"byte_end":16404965,"line_start":130,"line_end":130,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16404970,"byte_end":16404992,"line_start":131,"line_end":131,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16404997,"byte_end":16405000,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ This objects takes a stream and a readbuffer and a writebuffer. These field","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16405005,"byte_end":16405084,"line_start":133,"line_end":133,"column_start":5,"column_end":84}},{"value":"/ can be obtained from an existing `Framed` with the [`into_parts`] method.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16405089,"byte_end":16405166,"line_start":134,"line_end":134,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16405171,"byte_end":16405174,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16405179,"byte_end":16405252,"line_start":136,"line_end":136,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16405257,"byte_end":16405330,"line_start":137,"line_end":137,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16405335,"byte_end":16405411,"line_start":138,"line_end":138,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16405416,"byte_end":16405419,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16405424,"byte_end":16405460,"line_start":140,"line_end":140,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16405465,"byte_end":16405497,"line_start":141,"line_end":141,"column_start":5,"column_end":37}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16405502,"byte_end":16405540,"line_start":142,"line_end":142,"column_start":5,"column_end":43}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16405545,"byte_end":16405583,"line_start":143,"line_end":143,"column_start":5,"column_end":43}},{"value":"/ [`into_parts`]: crate::codec::Framed::into_parts()","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16405588,"byte_end":16405642,"line_start":144,"line_end":144,"column_start":5,"column_end":59}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16405647,"byte_end":16405738,"line_start":145,"line_end":145,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":709},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16406395,"byte_end":16406402,"line_start":165,"line_end":165,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Framed<T, U>>::get_ref","value":"fn get_ref<'_>(&'_ Self) -> &'_ T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16406112,"byte_end":16406175,"line_start":159,"line_end":159,"column_start":5,"column_end":68}},{"value":"/ `Framed`.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16406180,"byte_end":16406193,"line_start":160,"line_end":160,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16406198,"byte_end":16406201,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16406206,"byte_end":16406281,"line_start":162,"line_end":162,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16406286,"byte_end":16406356,"line_start":163,"line_end":163,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16406361,"byte_end":16406383,"line_start":164,"line_end":164,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":710},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16406746,"byte_end":16406753,"line_start":175,"line_end":175,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Framed<T, U>>::get_mut","value":"fn get_mut<'_>(&'_ mut Self) -> &'_ mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16406455,"byte_end":16406526,"line_start":169,"line_end":169,"column_start":5,"column_end":76}},{"value":"/ `Framed`.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16406531,"byte_end":16406544,"line_start":170,"line_end":170,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16406549,"byte_end":16406552,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16406557,"byte_end":16406632,"line_start":172,"line_end":172,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16406637,"byte_end":16406707,"line_start":173,"line_end":173,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16406712,"byte_end":16406734,"line_start":174,"line_end":174,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":711},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16407116,"byte_end":16407127,"line_start":185,"line_end":185,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Framed<T, U>>::get_pin_mut","value":"fn get_pin_mut<'_>(Pin<&'_ mut Self>) -> Pin<&'_ mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a pinned mutable reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a pinned mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16406818,"byte_end":16406896,"line_start":179,"line_end":179,"column_start":5,"column_end":83}},{"value":"/ `Framed`.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16406901,"byte_end":16406914,"line_start":180,"line_end":180,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16406919,"byte_end":16406922,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16406927,"byte_end":16407002,"line_start":182,"line_end":182,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16407007,"byte_end":16407077,"line_start":183,"line_end":183,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16407082,"byte_end":16407104,"line_start":184,"line_end":184,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":712},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16407474,"byte_end":16407479,"line_start":194,"line_end":194,"column_start":12,"column_end":17},"name":"codec","qualname":"<Framed<T, U>>::codec","value":"fn codec<'_>(&'_ Self) -> &'_ U","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying codec wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying codec wrapped by","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16407223,"byte_end":16407281,"line_start":189,"line_end":189,"column_start":5,"column_end":63}},{"value":"/ `Framed`.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16407286,"byte_end":16407299,"line_start":190,"line_end":190,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16407304,"byte_end":16407307,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16407312,"byte_end":16407386,"line_start":192,"line_end":192,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16407391,"byte_end":16407462,"line_start":193,"line_end":193,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":713},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16407791,"byte_end":16407800,"line_start":203,"line_end":203,"column_start":12,"column_end":21},"name":"codec_mut","qualname":"<Framed<T, U>>::codec_mut","value":"fn codec_mut<'_>(&'_ mut Self) -> &'_ mut U","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying codec wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying codec wrapped by","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16407532,"byte_end":16407598,"line_start":198,"line_end":198,"column_start":5,"column_end":71}},{"value":"/ `Framed`.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16407603,"byte_end":16407616,"line_start":199,"line_end":199,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16407621,"byte_end":16407624,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16407629,"byte_end":16407703,"line_start":201,"line_end":201,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16407708,"byte_end":16407779,"line_start":202,"line_end":202,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":714},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16408137,"byte_end":16408146,"line_start":212,"line_end":212,"column_start":12,"column_end":21},"name":"map_codec","qualname":"<Framed<T, U>>::map_codec","value":"fn map_codec<C, F>(Self, F) -> Framed<T, C> where F: FnOnce(U) -> C","parent":null,"children":[],"decl_id":null,"docs":" Maps the codec `U` to `C`, preserving the read and write buffers\n wrapped by `Framed`.","sig":null,"attributes":[{"value":"/ Maps the codec `U` to `C`, preserving the read and write buffers","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16407865,"byte_end":16407933,"line_start":207,"line_end":207,"column_start":5,"column_end":73}},{"value":"/ wrapped by `Framed`.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16407938,"byte_end":16407962,"line_start":208,"line_end":208,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16407967,"byte_end":16407970,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16407975,"byte_end":16408049,"line_start":210,"line_end":210,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16408054,"byte_end":16408125,"line_start":211,"line_end":211,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":717},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16408837,"byte_end":16408850,"line_start":232,"line_end":232,"column_start":12,"column_end":25},"name":"codec_pin_mut","qualname":"<Framed<T, U>>::codec_pin_mut","value":"fn codec_pin_mut<'_>(Pin<&'_ mut Self>) -> &'_ mut U","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying codec wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying codec wrapped by","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16408578,"byte_end":16408644,"line_start":227,"line_end":227,"column_start":5,"column_end":71}},{"value":"/ `Framed`.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16408649,"byte_end":16408662,"line_start":228,"line_end":228,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16408667,"byte_end":16408670,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16408675,"byte_end":16408749,"line_start":230,"line_end":230,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16408754,"byte_end":16408825,"line_start":231,"line_end":231,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":718},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16408996,"byte_end":16409007,"line_start":237,"line_end":237,"column_start":12,"column_end":23},"name":"read_buffer","qualname":"<Framed<T, U>>::read_buffer","value":"fn read_buffer<'_>(&'_ Self) -> &'_ BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the read buffer.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16408941,"byte_end":16408984,"line_start":236,"line_end":236,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":719},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16409142,"byte_end":16409157,"line_start":242,"line_end":242,"column_start":12,"column_end":27},"name":"read_buffer_mut","qualname":"<Framed<T, U>>::read_buffer_mut","value":"fn read_buffer_mut<'_>(&'_ mut Self) -> &'_ mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the read buffer.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16409079,"byte_end":16409130,"line_start":241,"line_end":241,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":720},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16409297,"byte_end":16409309,"line_start":247,"line_end":247,"column_start":12,"column_end":24},"name":"write_buffer","qualname":"<Framed<T, U>>::write_buffer","value":"fn write_buffer<'_>(&'_ Self) -> &'_ BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the write buffer.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16409241,"byte_end":16409285,"line_start":246,"line_end":246,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":721},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16409446,"byte_end":16409462,"line_start":252,"line_end":252,"column_start":12,"column_end":28},"name":"write_buffer_mut","qualname":"<Framed<T, U>>::write_buffer_mut","value":"fn write_buffer_mut<'_>(&'_ mut Self) -> &'_ mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the write buffer.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16409382,"byte_end":16409434,"line_start":251,"line_end":251,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":722},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16409812,"byte_end":16409822,"line_start":261,"line_end":261,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Framed<T, U>>::into_inner","value":"fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Framed`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `Framed`, returning its underlying I/O stream.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16409547,"byte_end":16409610,"line_start":256,"line_end":256,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16409615,"byte_end":16409618,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16409623,"byte_end":16409698,"line_start":258,"line_end":258,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16409703,"byte_end":16409773,"line_start":259,"line_end":259,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16409778,"byte_end":16409800,"line_start":260,"line_end":260,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":723},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16410194,"byte_end":16410204,"line_start":271,"line_end":271,"column_start":12,"column_end":22},"name":"into_parts","qualname":"<Framed<T, U>>::into_parts","value":"fn into_parts(Self) -> FramedParts<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Framed`, returning its underlying I/O stream, the buffer\n with unprocessed data, and the codec.","sig":null,"attributes":[{"value":"/ Consumes the `Framed`, returning its underlying I/O stream, the buffer","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16409872,"byte_end":16409946,"line_start":265,"line_end":265,"column_start":5,"column_end":79}},{"value":"/ with unprocessed data, and the codec.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16409951,"byte_end":16409992,"line_start":266,"line_end":266,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16409997,"byte_end":16410000,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16410005,"byte_end":16410080,"line_start":268,"line_end":268,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16410085,"byte_end":16410155,"line_start":269,"line_end":269,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16410160,"byte_end":16410182,"line_start":270,"line_end":270,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":728},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16410657,"byte_end":16410666,"line_start":290,"line_end":290,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Framed<T, U> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":30,"index":96},"children":[],"decl_id":{"krate":30,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":734},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16410998,"byte_end":16411008,"line_start":304,"line_end":304,"column_start":8,"column_end":18},"name":"poll_ready","qualname":"<Framed<T, U> as futures_sink::Sink>::poll_ready","value":"fn poll_ready<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Result<(), Self::Error>>","parent":{"krate":21,"index":17},"children":[],"decl_id":{"krate":21,"index":20},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":735},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16411146,"byte_end":16411156,"line_start":308,"line_end":308,"column_start":8,"column_end":18},"name":"start_send","qualname":"<Framed<T, U> as futures_sink::Sink>::start_send","value":"fn start_send<'_>(Pin<&'_ mut Self>, I) -> Result<(), Self::Error>","parent":{"krate":21,"index":17},"children":[],"decl_id":{"krate":21,"index":21},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":736},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16411277,"byte_end":16411287,"line_start":312,"line_end":312,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"<Framed<T, U> as futures_sink::Sink>::poll_flush","value":"fn poll_flush<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Result<(), Self::Error>>","parent":{"krate":21,"index":17},"children":[],"decl_id":{"krate":21,"index":22},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":737},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16411425,"byte_end":16411435,"line_start":316,"line_end":316,"column_start":8,"column_end":18},"name":"poll_close","qualname":"<Framed<T, U> as futures_sink::Sink>::poll_close","value":"fn poll_close<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Result<(), Self::Error>>","parent":{"krate":21,"index":17},"children":[],"decl_id":{"krate":21,"index":23},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":741},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16411660,"byte_end":16411663,"line_start":326,"line_end":326,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Framed<T, U> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10286},"children":[],"decl_id":{"krate":2,"index":10287},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1201},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16412178,"byte_end":16412189,"line_start":341,"line_end":341,"column_start":12,"column_end":23},"name":"FramedParts","qualname":"::codec::framed::FramedParts","value":"FramedParts { io, codec, read_buf, write_buf }","parent":null,"children":[{"krate":0,"index":1204},{"krate":0,"index":1205},{"krate":0,"index":1206},{"krate":0,"index":1207},{"krate":0,"index":1208}],"decl_id":null,"docs":" `FramedParts` contains an export of the data of a Framed transport.\n It can be used to construct a new [`Framed`] with a different codec.\n It contains all current buffers and the inner transport.","sig":null,"attributes":[{"value":"/ `FramedParts` contains an export of the data of a Framed transport.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16411863,"byte_end":16411934,"line_start":334,"line_end":334,"column_start":1,"column_end":72}},{"value":"/ It can be used to construct a new [`Framed`] with a different codec.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16411935,"byte_end":16412007,"line_start":335,"line_end":335,"column_start":1,"column_end":73}},{"value":"/ It contains all current buffers and the inner transport.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16412008,"byte_end":16412068,"line_start":336,"line_end":336,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16412069,"byte_end":16412072,"line_start":337,"line_end":337,"column_start":1,"column_end":4}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16412073,"byte_end":16412109,"line_start":338,"line_end":338,"column_start":1,"column_end":37}},{"value":"allow(clippy :: manual_non_exhaustive)","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16412127,"byte_end":16412166,"line_start":340,"line_end":340,"column_start":1,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":1204},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16412275,"byte_end":16412277,"line_start":343,"line_end":343,"column_start":9,"column_end":11},"name":"io","qualname":"::codec::framed::FramedParts::io","value":"T","parent":{"krate":0,"index":1201},"children":[],"decl_id":null,"docs":" The inner transport used to read bytes to and write bytes to\n","sig":null,"attributes":[{"value":"/ The inner transport used to read bytes to and write bytes to","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16412202,"byte_end":16412266,"line_start":342,"line_end":342,"column_start":5,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":1205},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16412309,"byte_end":16412314,"line_start":346,"line_end":346,"column_start":9,"column_end":14},"name":"codec","qualname":"::codec::framed::FramedParts::codec","value":"U","parent":{"krate":0,"index":1201},"children":[],"decl_id":null,"docs":" The codec\n","sig":null,"attributes":[{"value":"/ The codec","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16412287,"byte_end":16412300,"line_start":345,"line_end":345,"column_start":5,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":1206},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16412379,"byte_end":16412387,"line_start":349,"line_end":349,"column_start":9,"column_end":17},"name":"read_buf","qualname":"::codec::framed::FramedParts::read_buf","value":"bytes::BytesMut","parent":{"krate":0,"index":1201},"children":[],"decl_id":null,"docs":" The buffer with read but unprocessed data.\n","sig":null,"attributes":[{"value":"/ The buffer with read but unprocessed data.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16412324,"byte_end":16412370,"line_start":348,"line_end":348,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":1207},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16412474,"byte_end":16412483,"line_start":352,"line_end":352,"column_start":9,"column_end":18},"name":"write_buf","qualname":"::codec::framed::FramedParts::write_buf","value":"bytes::BytesMut","parent":{"krate":0,"index":1201},"children":[],"decl_id":null,"docs":" A buffer with unprocessed data which are not written yet.\n","sig":null,"attributes":[{"value":"/ A buffer with unprocessed data which are not written yet.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16412404,"byte_end":16412465,"line_start":351,"line_end":351,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":745},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16412716,"byte_end":16412719,"line_start":361,"line_end":361,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedParts<T, U>>::new","value":"fn new<I>(T, U) -> FramedParts<T, U> where U: Encoder<I>","parent":null,"children":[],"decl_id":null,"docs":" Create a new, default, `FramedParts`\n","sig":null,"attributes":[{"value":"/ Create a new, default, `FramedParts`","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16412664,"byte_end":16412704,"line_start":360,"line_end":360,"column_start":5,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":1434},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16413448,"byte_end":16413458,"line_start":19,"line_end":19,"column_start":16,"column_end":26},"name":"FramedRead","qualname":"::codec::framed_read::FramedRead","value":"FramedRead {  }","parent":null,"children":[{"krate":0,"index":1437}],"decl_id":null,"docs":" A [`Stream`] of messages decoded from an [`AsyncRead`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":796},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16413709,"byte_end":16413712,"line_start":33,"line_end":33,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedRead<T, D>>::new","value":"fn new(T, D) -> FramedRead<T, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedRead` with the given `decoder`.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedRead` with the given `decoder`.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16413641,"byte_end":16413697,"line_start":32,"line_end":32,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":797},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16414060,"byte_end":16414073,"line_start":45,"line_end":45,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<FramedRead<T, D>>::with_capacity","value":"fn with_capacity(T, D, usize) -> FramedRead<T, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedRead` with the given `decoder` and a buffer of `capacity`\n initial size.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedRead` with the given `decoder` and a buffer of `capacity`","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16413944,"byte_end":16414026,"line_start":43,"line_end":43,"column_start":5,"column_end":87}},{"value":"/ initial size.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16414031,"byte_end":16414048,"line_start":44,"line_end":44,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":801},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16414827,"byte_end":16414834,"line_start":68,"line_end":68,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<FramedRead<T, D>>::get_ref","value":"fn get_ref<'_>(&'_ Self) -> &'_ T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16414540,"byte_end":16414603,"line_start":62,"line_end":62,"column_start":5,"column_end":68}},{"value":"/ `FramedRead`.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16414608,"byte_end":16414625,"line_start":63,"line_end":63,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16414630,"byte_end":16414633,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16414638,"byte_end":16414713,"line_start":65,"line_end":65,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16414718,"byte_end":16414788,"line_start":66,"line_end":66,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16414793,"byte_end":16414815,"line_start":67,"line_end":67,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":802},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16415182,"byte_end":16415189,"line_start":78,"line_end":78,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<FramedRead<T, D>>::get_mut","value":"fn get_mut<'_>(&'_ mut Self) -> &'_ mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16414887,"byte_end":16414958,"line_start":72,"line_end":72,"column_start":5,"column_end":76}},{"value":"/ `FramedRead`.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16414963,"byte_end":16414980,"line_start":73,"line_end":73,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16414985,"byte_end":16414988,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16414993,"byte_end":16415068,"line_start":75,"line_end":75,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16415073,"byte_end":16415143,"line_start":76,"line_end":76,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16415148,"byte_end":16415170,"line_start":77,"line_end":77,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":803},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16415556,"byte_end":16415567,"line_start":88,"line_end":88,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<FramedRead<T, D>>::get_pin_mut","value":"fn get_pin_mut<'_>(Pin<&'_ mut Self>) -> Pin<&'_ mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a pinned mutable reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a pinned mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16415254,"byte_end":16415332,"line_start":82,"line_end":82,"column_start":5,"column_end":83}},{"value":"/ `FramedRead`.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16415337,"byte_end":16415354,"line_start":83,"line_end":83,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16415359,"byte_end":16415362,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16415367,"byte_end":16415442,"line_start":85,"line_end":85,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16415447,"byte_end":16415517,"line_start":86,"line_end":86,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16415522,"byte_end":16415544,"line_start":87,"line_end":87,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":804},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16415932,"byte_end":16415942,"line_start":97,"line_end":97,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FramedRead<T, D>>::into_inner","value":"fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `FramedRead`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `FramedRead`, returning its underlying I/O stream.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16415663,"byte_end":16415730,"line_start":92,"line_end":92,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16415735,"byte_end":16415738,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16415743,"byte_end":16415818,"line_start":94,"line_end":94,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16415823,"byte_end":16415893,"line_start":95,"line_end":95,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16415898,"byte_end":16415920,"line_start":96,"line_end":96,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":805},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16416054,"byte_end":16416061,"line_start":102,"line_end":102,"column_start":12,"column_end":19},"name":"decoder","qualname":"<FramedRead<T, D>>::decoder","value":"fn decoder<'_>(&'_ Self) -> &'_ D","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying decoder.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16415992,"byte_end":16416042,"line_start":101,"line_end":101,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":806},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16416184,"byte_end":16416195,"line_start":107,"line_end":107,"column_start":12,"column_end":23},"name":"decoder_mut","qualname":"<FramedRead<T, D>>::decoder_mut","value":"fn decoder_mut<'_>(&'_ mut Self) -> &'_ mut D","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying decoder.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16416114,"byte_end":16416172,"line_start":106,"line_end":106,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":807},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16416360,"byte_end":16416371,"line_start":113,"line_end":113,"column_start":12,"column_end":23},"name":"map_decoder","qualname":"<FramedRead<T, D>>::map_decoder","value":"fn map_decoder<C, F>(Self, F) -> FramedRead<T, C> where F: FnOnce(D) -> C","parent":null,"children":[],"decl_id":null,"docs":" Maps the decoder `D` to `C`, preserving the read buffer\n wrapped by `Framed`.\n","sig":null,"attributes":[{"value":"/ Maps the decoder `D` to `C`, preserving the read buffer","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16416260,"byte_end":16416319,"line_start":111,"line_end":111,"column_start":5,"column_end":64}},{"value":"/ wrapped by `Framed`.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16416324,"byte_end":16416348,"line_start":112,"line_end":112,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":810},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16416887,"byte_end":16416902,"line_start":133,"line_end":133,"column_start":12,"column_end":27},"name":"decoder_pin_mut","qualname":"<FramedRead<T, D>>::decoder_pin_mut","value":"fn decoder_pin_mut<'_>(Pin<&'_ mut Self>) -> &'_ mut D","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying decoder.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16416817,"byte_end":16416875,"line_start":132,"line_end":132,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":811},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16417048,"byte_end":16417059,"line_start":138,"line_end":138,"column_start":12,"column_end":23},"name":"read_buffer","qualname":"<FramedRead<T, D>>::read_buffer","value":"fn read_buffer<'_>(&'_ Self) -> &'_ BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the read buffer.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16416993,"byte_end":16417036,"line_start":137,"line_end":137,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":812},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16417189,"byte_end":16417204,"line_start":143,"line_end":143,"column_start":12,"column_end":27},"name":"read_buffer_mut","qualname":"<FramedRead<T, D>>::read_buffer_mut","value":"fn read_buffer_mut<'_>(&'_ mut Self) -> &'_ mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the read buffer.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16417126,"byte_end":16417177,"line_start":142,"line_end":142,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":817},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16417467,"byte_end":16417476,"line_start":156,"line_end":156,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<FramedRead<T, D> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":30,"index":96},"children":[],"decl_id":{"krate":30,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":823},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16417756,"byte_end":16417766,"line_start":168,"line_end":168,"column_start":8,"column_end":18},"name":"poll_ready","qualname":"<FramedRead<T, D> as futures_sink::Sink>::poll_ready","value":"fn poll_ready<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Result<(), Self::Error>>","parent":{"krate":21,"index":17},"children":[],"decl_id":{"krate":21,"index":20},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":824},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16417920,"byte_end":16417930,"line_start":172,"line_end":172,"column_start":8,"column_end":18},"name":"start_send","qualname":"<FramedRead<T, D> as futures_sink::Sink>::start_send","value":"fn start_send<'_>(Pin<&'_ mut Self>, I) -> Result<(), Self::Error>","parent":{"krate":21,"index":17},"children":[],"decl_id":{"krate":21,"index":21},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":825},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16418067,"byte_end":16418077,"line_start":176,"line_end":176,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"<FramedRead<T, D> as futures_sink::Sink>::poll_flush","value":"fn poll_flush<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Result<(), Self::Error>>","parent":{"krate":21,"index":17},"children":[],"decl_id":{"krate":21,"index":22},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":826},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16418231,"byte_end":16418241,"line_start":180,"line_end":180,"column_start":8,"column_end":18},"name":"poll_close","qualname":"<FramedRead<T, D> as futures_sink::Sink>::poll_close","value":"fn poll_close<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Result<(), Self::Error>>","parent":{"krate":21,"index":17},"children":[],"decl_id":{"krate":21,"index":23},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":830},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16418486,"byte_end":16418489,"line_start":190,"line_end":190,"column_start":8,"column_end":11},"name":"fmt","qualname":"<FramedRead<T, D> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10286},"children":[],"decl_id":{"krate":2,"index":10287},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1393},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16419305,"byte_end":16419316,"line_start":19,"line_end":19,"column_start":16,"column_end":27},"name":"FramedWrite","qualname":"::codec::framed_write::FramedWrite","value":"FramedWrite {  }","parent":null,"children":[{"krate":0,"index":1396}],"decl_id":null,"docs":" A [`Sink`] of frames encoded to an `AsyncWrite`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":879},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16419523,"byte_end":16419526,"line_start":30,"line_end":30,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedWrite<T, E>>::new","value":"fn new(T, E) -> FramedWrite<T, E>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedWrite` with the given `encoder`.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedWrite` with the given `encoder`.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16419454,"byte_end":16419511,"line_start":29,"line_end":29,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":883},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16420084,"byte_end":16420091,"line_start":48,"line_end":48,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<FramedWrite<T, E>>::get_ref","value":"fn get_ref<'_>(&'_ Self) -> &'_ T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16419796,"byte_end":16419859,"line_start":42,"line_end":42,"column_start":5,"column_end":68}},{"value":"/ `FramedWrite`.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16419864,"byte_end":16419882,"line_start":43,"line_end":43,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16419887,"byte_end":16419890,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16419895,"byte_end":16419970,"line_start":45,"line_end":45,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16419975,"byte_end":16420045,"line_start":46,"line_end":46,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16420050,"byte_end":16420072,"line_start":47,"line_end":47,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":884},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16420440,"byte_end":16420447,"line_start":58,"line_end":58,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<FramedWrite<T, E>>::get_mut","value":"fn get_mut<'_>(&'_ mut Self) -> &'_ mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16420144,"byte_end":16420215,"line_start":52,"line_end":52,"column_start":5,"column_end":76}},{"value":"/ `FramedWrite`.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16420220,"byte_end":16420238,"line_start":53,"line_end":53,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16420243,"byte_end":16420246,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16420251,"byte_end":16420326,"line_start":55,"line_end":55,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16420331,"byte_end":16420401,"line_start":56,"line_end":56,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16420406,"byte_end":16420428,"line_start":57,"line_end":57,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":885},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16420815,"byte_end":16420826,"line_start":68,"line_end":68,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<FramedWrite<T, E>>::get_pin_mut","value":"fn get_pin_mut<'_>(Pin<&'_ mut Self>) -> Pin<&'_ mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a pinned mutable reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a pinned mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16420512,"byte_end":16420590,"line_start":62,"line_end":62,"column_start":5,"column_end":83}},{"value":"/ `FramedWrite`.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16420595,"byte_end":16420613,"line_start":63,"line_end":63,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16420618,"byte_end":16420621,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16420626,"byte_end":16420701,"line_start":65,"line_end":65,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16420706,"byte_end":16420776,"line_start":66,"line_end":66,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16420781,"byte_end":16420803,"line_start":67,"line_end":67,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":886},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16421192,"byte_end":16421202,"line_start":77,"line_end":77,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FramedWrite<T, E>>::into_inner","value":"fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `FramedWrite`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `FramedWrite`, returning its underlying I/O stream.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16420922,"byte_end":16420990,"line_start":72,"line_end":72,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16420995,"byte_end":16420998,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16421003,"byte_end":16421078,"line_start":74,"line_end":74,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16421083,"byte_end":16421153,"line_start":75,"line_end":75,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16421158,"byte_end":16421180,"line_start":76,"line_end":76,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":887},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16421314,"byte_end":16421321,"line_start":82,"line_end":82,"column_start":12,"column_end":19},"name":"encoder","qualname":"<FramedWrite<T, E>>::encoder","value":"fn encoder<'_>(&'_ Self) -> &'_ E","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying encoder.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying encoder.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16421252,"byte_end":16421302,"line_start":81,"line_end":81,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":888},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16421444,"byte_end":16421455,"line_start":87,"line_end":87,"column_start":12,"column_end":23},"name":"encoder_mut","qualname":"<FramedWrite<T, E>>::encoder_mut","value":"fn encoder_mut<'_>(&'_ mut Self) -> &'_ mut E","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying encoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying encoder.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16421374,"byte_end":16421432,"line_start":86,"line_end":86,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":889},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16421621,"byte_end":16421632,"line_start":93,"line_end":93,"column_start":12,"column_end":23},"name":"map_encoder","qualname":"<FramedWrite<T, E>>::map_encoder","value":"fn map_encoder<C, F>(Self, F) -> FramedWrite<T, C> where F: FnOnce(E) -> C","parent":null,"children":[],"decl_id":null,"docs":" Maps the encoder `E` to `C`, preserving the write buffer\n wrapped by `Framed`.\n","sig":null,"attributes":[{"value":"/ Maps the encoder `E` to `C`, preserving the write buffer","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16421520,"byte_end":16421580,"line_start":91,"line_end":91,"column_start":5,"column_end":65}},{"value":"/ wrapped by `Framed`.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16421585,"byte_end":16421609,"line_start":92,"line_end":92,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":892},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16422150,"byte_end":16422165,"line_start":113,"line_end":113,"column_start":12,"column_end":27},"name":"encoder_pin_mut","qualname":"<FramedWrite<T, E>>::encoder_pin_mut","value":"fn encoder_pin_mut<'_>(Pin<&'_ mut Self>) -> &'_ mut E","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying encoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying encoder.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16422080,"byte_end":16422138,"line_start":112,"line_end":112,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":893},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16422312,"byte_end":16422324,"line_start":118,"line_end":118,"column_start":12,"column_end":24},"name":"write_buffer","qualname":"<FramedWrite<T, E>>::write_buffer","value":"fn write_buffer<'_>(&'_ Self) -> &'_ BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the write buffer.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16422256,"byte_end":16422300,"line_start":117,"line_end":117,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":894},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16422455,"byte_end":16422471,"line_start":123,"line_end":123,"column_start":12,"column_end":28},"name":"write_buffer_mut","qualname":"<FramedWrite<T, E>>::write_buffer_mut","value":"fn write_buffer_mut<'_>(&'_ mut Self) -> &'_ mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the write buffer.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16422391,"byte_end":16422443,"line_start":122,"line_end":122,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":900},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16422758,"byte_end":16422768,"line_start":137,"line_end":137,"column_start":8,"column_end":18},"name":"poll_ready","qualname":"<FramedWrite<T, E> as futures_sink::Sink>::poll_ready","value":"fn poll_ready<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Result<(), Self::Error>>","parent":{"krate":21,"index":17},"children":[],"decl_id":{"krate":21,"index":20},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":901},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16422906,"byte_end":16422916,"line_start":141,"line_end":141,"column_start":8,"column_end":18},"name":"start_send","qualname":"<FramedWrite<T, E> as futures_sink::Sink>::start_send","value":"fn start_send<'_>(Pin<&'_ mut Self>, I) -> Result<(), Self::Error>","parent":{"krate":21,"index":17},"children":[],"decl_id":{"krate":21,"index":21},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":902},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16423037,"byte_end":16423047,"line_start":145,"line_end":145,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"<FramedWrite<T, E> as futures_sink::Sink>::poll_flush","value":"fn poll_flush<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Result<(), Self::Error>>","parent":{"krate":21,"index":17},"children":[],"decl_id":{"krate":21,"index":22},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":903},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16423185,"byte_end":16423195,"line_start":149,"line_end":149,"column_start":8,"column_end":18},"name":"poll_close","qualname":"<FramedWrite<T, E> as futures_sink::Sink>::poll_close","value":"fn poll_close<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Result<(), Self::Error>>","parent":{"krate":21,"index":17},"children":[],"decl_id":{"krate":21,"index":23},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":908},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16423477,"byte_end":16423486,"line_start":161,"line_end":161,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<FramedWrite<T, D> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":30,"index":96},"children":[],"decl_id":{"krate":30,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":912},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16423726,"byte_end":16423729,"line_start":171,"line_end":171,"column_start":8,"column_end":11},"name":"fmt","qualname":"<FramedWrite<T, U> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10286},"children":[],"decl_id":{"krate":2,"index":10287},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":916},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"length_delimited","qualname":"::codec::length_delimited","value":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","parent":null,"children":[{"krate":0,"index":917},{"krate":0,"index":918},{"krate":0,"index":921},{"krate":0,"index":924},{"krate":0,"index":927},{"krate":0,"index":930},{"krate":0,"index":933},{"krate":0,"index":934},{"krate":0,"index":937},{"krate":0,"index":940},{"krate":0,"index":941},{"krate":0,"index":944},{"krate":0,"index":947},{"krate":0,"index":950},{"krate":0,"index":953},{"krate":0,"index":956},{"krate":0,"index":957},{"krate":0,"index":960},{"krate":0,"index":963},{"krate":0,"index":964},{"krate":0,"index":967},{"krate":0,"index":970},{"krate":0,"index":1213},{"krate":0,"index":1220},{"krate":0,"index":1222},{"krate":0,"index":1224},{"krate":0,"index":973},{"krate":0,"index":1225},{"krate":0,"index":1228},{"krate":0,"index":1230},{"krate":0,"index":1232},{"krate":0,"index":1238},{"krate":0,"index":1240},{"krate":0,"index":1242},{"krate":0,"index":975},{"krate":0,"index":982},{"krate":0,"index":986},{"krate":0,"index":990},{"krate":0,"index":992},{"krate":0,"index":999},{"krate":0,"index":1020},{"krate":0,"index":1022},{"krate":0,"index":1024},{"krate":0,"index":1026}],"decl_id":null,"docs":" Frame a stream of bytes based on a length prefix","sig":null,"attributes":[{"value":"/ Frame a stream of bytes based on a length prefix","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16423998,"byte_end":16424050,"line_start":1,"line_end":1,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16424051,"byte_end":16424054,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Many protocols delimit their frames by prefacing frame data with a","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16424055,"byte_end":16424125,"line_start":3,"line_end":3,"column_start":1,"column_end":71}},{"value":"/ frame head that specifies the length of the frame. The","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16424126,"byte_end":16424184,"line_start":4,"line_end":4,"column_start":1,"column_end":59}},{"value":"/ `length_delimited` module provides utilities for handling the length","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16424185,"byte_end":16424257,"line_start":5,"line_end":5,"column_start":1,"column_end":73}},{"value":"/ based framing. This allows the consumer to work with entire frames","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16424258,"byte_end":16424328,"line_start":6,"line_end":6,"column_start":1,"column_end":71}},{"value":"/ without having to worry about buffering or other framing logic.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16424329,"byte_end":16424396,"line_start":7,"line_end":7,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16424397,"byte_end":16424400,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Getting started","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16424401,"byte_end":16424422,"line_start":9,"line_end":9,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16424423,"byte_end":16424426,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ If implementing a protocol from scratch, using length delimited framing","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16424427,"byte_end":16424502,"line_start":11,"line_end":11,"column_start":1,"column_end":76}},{"value":"/ is an easy way to get started. [`LengthDelimitedCodec::new()`] will","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16424503,"byte_end":16424574,"line_start":12,"line_end":12,"column_start":1,"column_end":72}},{"value":"/ return a length delimited codec using default configuration values.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16424575,"byte_end":16424646,"line_start":13,"line_end":13,"column_start":1,"column_end":72}},{"value":"/ This can then be used to construct a framer to adapt a full-duplex","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16424647,"byte_end":16424717,"line_start":14,"line_end":14,"column_start":1,"column_end":71}},{"value":"/ byte stream into a stream of frames.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16424718,"byte_end":16424758,"line_start":15,"line_end":15,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16424759,"byte_end":16424762,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16424763,"byte_end":16424770,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16424771,"byte_end":16424814,"line_start":18,"line_end":18,"column_start":1,"column_end":44}},{"value":"/ use tokio_util::codec::{Framed, LengthDelimitedCodec};","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16424815,"byte_end":16424873,"line_start":19,"line_end":19,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16424874,"byte_end":16424877,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ fn bind_transport<T: AsyncRead + AsyncWrite>(io: T)","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16424878,"byte_end":16424933,"line_start":21,"line_end":21,"column_start":1,"column_end":56}},{"value":"/     -> Framed<T, LengthDelimitedCodec>","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16424934,"byte_end":16424976,"line_start":22,"line_end":22,"column_start":1,"column_end":43}},{"value":"/ {","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16424977,"byte_end":16424982,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"/     Framed::new(io, LengthDelimitedCodec::new())","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16424983,"byte_end":16425035,"line_start":24,"line_end":24,"column_start":1,"column_end":53}},{"value":"/ }","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16425036,"byte_end":16425041,"line_start":25,"line_end":25,"column_start":1,"column_end":6}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16425042,"byte_end":16425064,"line_start":26,"line_end":26,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16425065,"byte_end":16425072,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16425073,"byte_end":16425076,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ The returned transport implements `Sink + Stream` for `BytesMut`. It","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16425077,"byte_end":16425149,"line_start":29,"line_end":29,"column_start":1,"column_end":73}},{"value":"/ encodes the frame with a big-endian `u32` header denoting the frame","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16425150,"byte_end":16425221,"line_start":30,"line_end":30,"column_start":1,"column_end":72}},{"value":"/ payload length:","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16425222,"byte_end":16425241,"line_start":31,"line_end":31,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16425242,"byte_end":16425245,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16425246,"byte_end":16425257,"line_start":33,"line_end":33,"column_start":1,"column_end":12}},{"value":"/ +----------+--------------------------------+","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16425258,"byte_end":16425307,"line_start":34,"line_end":34,"column_start":1,"column_end":50}},{"value":"/ | len: u32 |          frame payload         |","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16425308,"byte_end":16425357,"line_start":35,"line_end":35,"column_start":1,"column_end":50}},{"value":"/ +----------+--------------------------------+","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16425358,"byte_end":16425407,"line_start":36,"line_end":36,"column_start":1,"column_end":50}},{"value":"/ ```","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16425408,"byte_end":16425415,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16425416,"byte_end":16425419,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Specifically, given the following:","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16425420,"byte_end":16425458,"line_start":39,"line_end":39,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16425459,"byte_end":16425462,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16425463,"byte_end":16425470,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16425471,"byte_end":16425514,"line_start":42,"line_end":42,"column_start":1,"column_end":44}},{"value":"/ use tokio_util::codec::{Framed, LengthDelimitedCodec};","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16425515,"byte_end":16425573,"line_start":43,"line_end":43,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16425574,"byte_end":16425577,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ use futures::SinkExt;","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16425578,"byte_end":16425603,"line_start":45,"line_end":45,"column_start":1,"column_end":26}},{"value":"/ use bytes::Bytes;","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16425604,"byte_end":16425625,"line_start":46,"line_end":46,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16425626,"byte_end":16425629,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ async fn write_frame<T>(io: T) -> Result<(), Box<dyn std::error::Error>>","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16425630,"byte_end":16425706,"line_start":48,"line_end":48,"column_start":1,"column_end":77}},{"value":"/ where","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16425707,"byte_end":16425716,"line_start":49,"line_end":49,"column_start":1,"column_end":10}},{"value":"/     T: AsyncRead + AsyncWrite + Unpin,","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16425717,"byte_end":16425759,"line_start":50,"line_end":50,"column_start":1,"column_end":43}},{"value":"/ {","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16425760,"byte_end":16425765,"line_start":51,"line_end":51,"column_start":1,"column_end":6}},{"value":"/     let mut transport = Framed::new(io, LengthDelimitedCodec::new());","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16425766,"byte_end":16425839,"line_start":52,"line_end":52,"column_start":1,"column_end":74}},{"value":"/     let frame = Bytes::from(\"hello world\");","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16425840,"byte_end":16425887,"line_start":53,"line_end":53,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16425888,"byte_end":16425891,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/     transport.send(frame).await?;","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16425892,"byte_end":16425929,"line_start":55,"line_end":55,"column_start":1,"column_end":38}},{"value":"/     Ok(())","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16425930,"byte_end":16425944,"line_start":56,"line_end":56,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16425945,"byte_end":16425950,"line_start":57,"line_end":57,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16425951,"byte_end":16425958,"line_start":58,"line_end":58,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16425959,"byte_end":16425962,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ The encoded frame will look like this:","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16425963,"byte_end":16426005,"line_start":60,"line_end":60,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16426006,"byte_end":16426009,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16426010,"byte_end":16426021,"line_start":62,"line_end":62,"column_start":1,"column_end":12}},{"value":"/ +---- len: u32 ----+---- data ----+","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16426022,"byte_end":16426061,"line_start":63,"line_end":63,"column_start":1,"column_end":40}},{"value":"/ | \\x00\\x00\\x00\\x0b |  hello world |","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16426062,"byte_end":16426101,"line_start":64,"line_end":64,"column_start":1,"column_end":40}},{"value":"/ +------------------+--------------+","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16426102,"byte_end":16426141,"line_start":65,"line_end":65,"column_start":1,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16426142,"byte_end":16426149,"line_start":66,"line_end":66,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16426150,"byte_end":16426153,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ # Decoding","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16426154,"byte_end":16426168,"line_start":68,"line_end":68,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16426169,"byte_end":16426172,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ [`FramedRead`] adapts an [`AsyncRead`] into a `Stream` of [`BytesMut`],","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16426173,"byte_end":16426248,"line_start":70,"line_end":70,"column_start":1,"column_end":76}},{"value":"/ such that each yielded [`BytesMut`] value contains the contents of an","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16426249,"byte_end":16426322,"line_start":71,"line_end":71,"column_start":1,"column_end":74}},{"value":"/ entire frame. There are many configuration parameters enabling","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16426323,"byte_end":16426389,"line_start":72,"line_end":72,"column_start":1,"column_end":67}},{"value":"/ [`FramedRead`] to handle a wide range of protocols. Here are some","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16426390,"byte_end":16426459,"line_start":73,"line_end":73,"column_start":1,"column_end":70}},{"value":"/ examples that will cover the various options at a high level.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16426460,"byte_end":16426525,"line_start":74,"line_end":74,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16426526,"byte_end":16426529,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ ## Example 1","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16426530,"byte_end":16426546,"line_start":76,"line_end":76,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16426547,"byte_end":16426550,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, including the","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16426551,"byte_end":16426627,"line_start":78,"line_end":78,"column_start":1,"column_end":77}},{"value":"/ frame head in the yielded `BytesMut`.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16426628,"byte_end":16426669,"line_start":79,"line_end":79,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16426670,"byte_end":16426673,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16426674,"byte_end":16426681,"line_start":81,"line_end":81,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16426682,"byte_end":16426713,"line_start":82,"line_end":82,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16426714,"byte_end":16426764,"line_start":83,"line_end":83,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16426765,"byte_end":16426806,"line_start":84,"line_end":84,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16426807,"byte_end":16426842,"line_start":85,"line_end":85,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16426843,"byte_end":16426891,"line_start":86,"line_end":86,"column_start":1,"column_end":49}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16426892,"byte_end":16426927,"line_start":87,"line_end":87,"column_start":1,"column_end":36}},{"value":"/     .length_adjustment(0)   // default value","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16426928,"byte_end":16426976,"line_start":88,"line_end":88,"column_start":1,"column_end":49}},{"value":"/     .num_skip(0) // Do not strip frame header","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16426977,"byte_end":16427026,"line_start":89,"line_end":89,"column_start":1,"column_end":50}},{"value":"/     .new_read(io);","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16427027,"byte_end":16427049,"line_start":90,"line_end":90,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16427050,"byte_end":16427057,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16427058,"byte_end":16427080,"line_start":92,"line_end":92,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16427081,"byte_end":16427088,"line_start":93,"line_end":93,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16427089,"byte_end":16427092,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16427093,"byte_end":16427141,"line_start":95,"line_end":95,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16427142,"byte_end":16427145,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16427146,"byte_end":16427157,"line_start":97,"line_end":97,"column_start":1,"column_end":12}},{"value":"/          INPUT                           DECODED","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16427158,"byte_end":16427210,"line_start":98,"line_end":98,"column_start":1,"column_end":53}},{"value":"/ +-- len ---+--- Payload ---+     +-- len ---+--- Payload ---+","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16427211,"byte_end":16427276,"line_start":99,"line_end":99,"column_start":1,"column_end":66}},{"value":"/ | \\x00\\x0B |  Hello world  | --> | \\x00\\x0B |  Hello world  |","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16427277,"byte_end":16427342,"line_start":100,"line_end":100,"column_start":1,"column_end":66}},{"value":"/ +----------+---------------+     +----------+---------------+","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16427343,"byte_end":16427408,"line_start":101,"line_end":101,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16427409,"byte_end":16427416,"line_start":102,"line_end":102,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16427417,"byte_end":16427420,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ The value of the length field is 11 (`\\x0B`) which represents the length","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16427421,"byte_end":16427497,"line_start":104,"line_end":104,"column_start":1,"column_end":77}},{"value":"/ of the payload, `hello world`. By default, [`FramedRead`] assumes that","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16427498,"byte_end":16427572,"line_start":105,"line_end":105,"column_start":1,"column_end":75}},{"value":"/ the length field represents the number of bytes that **follows** the","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16427573,"byte_end":16427645,"line_start":106,"line_end":106,"column_start":1,"column_end":73}},{"value":"/ length field. Thus, the entire frame has a length of 13: 2 bytes for the","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16427646,"byte_end":16427722,"line_start":107,"line_end":107,"column_start":1,"column_end":77}},{"value":"/ frame head + 11 bytes for the payload.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16427723,"byte_end":16427765,"line_start":108,"line_end":108,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16427766,"byte_end":16427769,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ ## Example 2","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16427770,"byte_end":16427786,"line_start":110,"line_end":110,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16427787,"byte_end":16427790,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, omitting the","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16427791,"byte_end":16427866,"line_start":112,"line_end":112,"column_start":1,"column_end":76}},{"value":"/ frame head in the yielded `BytesMut`.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16427867,"byte_end":16427908,"line_start":113,"line_end":113,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16427909,"byte_end":16427912,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16427913,"byte_end":16427920,"line_start":115,"line_end":115,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16427921,"byte_end":16427952,"line_start":116,"line_end":116,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16427953,"byte_end":16428003,"line_start":117,"line_end":117,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16428004,"byte_end":16428045,"line_start":118,"line_end":118,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16428046,"byte_end":16428081,"line_start":119,"line_end":119,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16428082,"byte_end":16428130,"line_start":120,"line_end":120,"column_start":1,"column_end":49}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16428131,"byte_end":16428166,"line_start":121,"line_end":121,"column_start":1,"column_end":36}},{"value":"/     .length_adjustment(0)   // default value","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16428167,"byte_end":16428215,"line_start":122,"line_end":122,"column_start":1,"column_end":49}},{"value":"/     // `num_skip` is not needed, the default is to skip","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16428216,"byte_end":16428275,"line_start":123,"line_end":123,"column_start":1,"column_end":60}},{"value":"/     .new_read(io);","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16428276,"byte_end":16428298,"line_start":124,"line_end":124,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16428299,"byte_end":16428306,"line_start":125,"line_end":125,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16428307,"byte_end":16428329,"line_start":126,"line_end":126,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16428330,"byte_end":16428337,"line_start":127,"line_end":127,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16428338,"byte_end":16428341,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16428342,"byte_end":16428390,"line_start":129,"line_end":129,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16428391,"byte_end":16428394,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16428395,"byte_end":16428406,"line_start":131,"line_end":131,"column_start":1,"column_end":12}},{"value":"/          INPUT                        DECODED","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16428407,"byte_end":16428456,"line_start":132,"line_end":132,"column_start":1,"column_end":50}},{"value":"/ +-- len ---+--- Payload ---+     +--- Payload ---+","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16428457,"byte_end":16428511,"line_start":133,"line_end":133,"column_start":1,"column_end":55}},{"value":"/ | \\x00\\x0B |  Hello world  | --> |  Hello world  |","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16428512,"byte_end":16428566,"line_start":134,"line_end":134,"column_start":1,"column_end":55}},{"value":"/ +----------+---------------+     +---------------+","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16428567,"byte_end":16428621,"line_start":135,"line_end":135,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16428622,"byte_end":16428629,"line_start":136,"line_end":136,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16428630,"byte_end":16428633,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ This is similar to the first example, the only difference is that the","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16428634,"byte_end":16428707,"line_start":138,"line_end":138,"column_start":1,"column_end":74}},{"value":"/ frame head is **not** included in the yielded `BytesMut` value.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16428708,"byte_end":16428775,"line_start":139,"line_end":139,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16428776,"byte_end":16428779,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ ## Example 3","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16428780,"byte_end":16428796,"line_start":141,"line_end":141,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16428797,"byte_end":16428800,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, including the","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16428801,"byte_end":16428877,"line_start":143,"line_end":143,"column_start":1,"column_end":77}},{"value":"/ frame head in the yielded `BytesMut`. In this case, the length field","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16428878,"byte_end":16428950,"line_start":144,"line_end":144,"column_start":1,"column_end":73}},{"value":"/ **includes** the frame head length.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16428951,"byte_end":16428990,"line_start":145,"line_end":145,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16428991,"byte_end":16428994,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16428995,"byte_end":16429002,"line_start":147,"line_end":147,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16429003,"byte_end":16429034,"line_start":148,"line_end":148,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16429035,"byte_end":16429085,"line_start":149,"line_end":149,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16429086,"byte_end":16429127,"line_start":150,"line_end":150,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16429128,"byte_end":16429163,"line_start":151,"line_end":151,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16429164,"byte_end":16429212,"line_start":152,"line_end":152,"column_start":1,"column_end":49}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16429213,"byte_end":16429248,"line_start":153,"line_end":153,"column_start":1,"column_end":36}},{"value":"/     .length_adjustment(-2)  // size of head","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16429249,"byte_end":16429296,"line_start":154,"line_end":154,"column_start":1,"column_end":48}},{"value":"/     .num_skip(0)","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16429297,"byte_end":16429317,"line_start":155,"line_end":155,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16429318,"byte_end":16429340,"line_start":156,"line_end":156,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16429341,"byte_end":16429348,"line_start":157,"line_end":157,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16429349,"byte_end":16429371,"line_start":158,"line_end":158,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16429372,"byte_end":16429379,"line_start":159,"line_end":159,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16429380,"byte_end":16429383,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16429384,"byte_end":16429432,"line_start":161,"line_end":161,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16429433,"byte_end":16429436,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16429437,"byte_end":16429448,"line_start":163,"line_end":163,"column_start":1,"column_end":12}},{"value":"/          INPUT                           DECODED","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16429449,"byte_end":16429501,"line_start":164,"line_end":164,"column_start":1,"column_end":53}},{"value":"/ +-- len ---+--- Payload ---+     +-- len ---+--- Payload ---+","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16429502,"byte_end":16429567,"line_start":165,"line_end":165,"column_start":1,"column_end":66}},{"value":"/ | \\x00\\x0D |  Hello world  | --> | \\x00\\x0D |  Hello world  |","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16429568,"byte_end":16429633,"line_start":166,"line_end":166,"column_start":1,"column_end":66}},{"value":"/ +----------+---------------+     +----------+---------------+","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16429634,"byte_end":16429699,"line_start":167,"line_end":167,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16429700,"byte_end":16429707,"line_start":168,"line_end":168,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16429708,"byte_end":16429711,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ In most cases, the length field represents the length of the payload","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16429712,"byte_end":16429784,"line_start":170,"line_end":170,"column_start":1,"column_end":73}},{"value":"/ only, as shown in the previous examples. However, in some protocols the","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16429785,"byte_end":16429860,"line_start":171,"line_end":171,"column_start":1,"column_end":76}},{"value":"/ length field represents the length of the whole frame, including the","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16429861,"byte_end":16429933,"line_start":172,"line_end":172,"column_start":1,"column_end":73}},{"value":"/ head. In such cases, we specify a negative `length_adjustment` to adjust","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16429934,"byte_end":16430010,"line_start":173,"line_end":173,"column_start":1,"column_end":77}},{"value":"/ the value provided in the frame head to represent the payload length.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16430011,"byte_end":16430084,"line_start":174,"line_end":174,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16430085,"byte_end":16430088,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ ## Example 4","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16430089,"byte_end":16430105,"line_start":176,"line_end":176,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16430106,"byte_end":16430109,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"/ The following will parse a 3 byte length field at offset 0 in a 5 byte","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16430110,"byte_end":16430184,"line_start":178,"line_end":178,"column_start":1,"column_end":75}},{"value":"/ frame head, including the frame head in the yielded `BytesMut`.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16430185,"byte_end":16430252,"line_start":179,"line_end":179,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16430253,"byte_end":16430256,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16430257,"byte_end":16430264,"line_start":181,"line_end":181,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16430265,"byte_end":16430296,"line_start":182,"line_end":182,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16430297,"byte_end":16430347,"line_start":183,"line_end":183,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16430348,"byte_end":16430389,"line_start":184,"line_end":184,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16430390,"byte_end":16430425,"line_start":185,"line_end":185,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16430426,"byte_end":16430474,"line_start":186,"line_end":186,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(3)","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16430475,"byte_end":16430506,"line_start":187,"line_end":187,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(2)  // remaining head","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16430507,"byte_end":16430555,"line_start":188,"line_end":188,"column_start":1,"column_end":49}},{"value":"/     .num_skip(0)","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16430556,"byte_end":16430576,"line_start":189,"line_end":189,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16430577,"byte_end":16430599,"line_start":190,"line_end":190,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16430600,"byte_end":16430607,"line_start":191,"line_end":191,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16430608,"byte_end":16430630,"line_start":192,"line_end":192,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16430631,"byte_end":16430638,"line_start":193,"line_end":193,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16430639,"byte_end":16430642,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16430643,"byte_end":16430691,"line_start":195,"line_end":195,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16430692,"byte_end":16430695,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16430696,"byte_end":16430707,"line_start":197,"line_end":197,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16430708,"byte_end":16430734,"line_start":198,"line_end":198,"column_start":1,"column_end":27}},{"value":"/ +---- len -----+- head -+--- Payload ---+","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16430735,"byte_end":16430780,"line_start":199,"line_end":199,"column_start":1,"column_end":46}},{"value":"/ | \\x00\\x00\\x0B | \\xCAFE |  Hello world  |","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16430781,"byte_end":16430826,"line_start":200,"line_end":200,"column_start":1,"column_end":46}},{"value":"/ +--------------+--------+---------------+","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16430827,"byte_end":16430872,"line_start":201,"line_end":201,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16430873,"byte_end":16430876,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/                  DECODED","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16430877,"byte_end":16430905,"line_start":203,"line_end":203,"column_start":1,"column_end":29}},{"value":"/ +---- len -----+- head -+--- Payload ---+","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16430906,"byte_end":16430951,"line_start":204,"line_end":204,"column_start":1,"column_end":46}},{"value":"/ | \\x00\\x00\\x0B | \\xCAFE |  Hello world  |","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16430952,"byte_end":16430997,"line_start":205,"line_end":205,"column_start":1,"column_end":46}},{"value":"/ +--------------+--------+---------------+","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16430998,"byte_end":16431043,"line_start":206,"line_end":206,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16431044,"byte_end":16431051,"line_start":207,"line_end":207,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16431052,"byte_end":16431055,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"/ A more advanced example that shows a case where there is extra frame","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16431056,"byte_end":16431128,"line_start":209,"line_end":209,"column_start":1,"column_end":73}},{"value":"/ head data between the length field and the payload. In such cases, it is","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16431129,"byte_end":16431205,"line_start":210,"line_end":210,"column_start":1,"column_end":77}},{"value":"/ usually desirable to include the frame head as part of the yielded","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16431206,"byte_end":16431276,"line_start":211,"line_end":211,"column_start":1,"column_end":71}},{"value":"/ `BytesMut`. This lets consumers of the length delimited framer to","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16431277,"byte_end":16431346,"line_start":212,"line_end":212,"column_start":1,"column_end":70}},{"value":"/ process the frame head as needed.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16431347,"byte_end":16431384,"line_start":213,"line_end":213,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16431385,"byte_end":16431388,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ The positive `length_adjustment` value lets `FramedRead` factor in the","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16431389,"byte_end":16431463,"line_start":215,"line_end":215,"column_start":1,"column_end":75}},{"value":"/ additional head into the frame length calculation.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16431464,"byte_end":16431518,"line_start":216,"line_end":216,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16431519,"byte_end":16431522,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/ ## Example 5","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16431523,"byte_end":16431539,"line_start":218,"line_end":218,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16431540,"byte_end":16431543,"line_start":219,"line_end":219,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 1 of a 4 byte","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16431544,"byte_end":16431617,"line_start":220,"line_end":220,"column_start":1,"column_end":74}},{"value":"/ frame head. The first byte and the length field will be omitted from the","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16431618,"byte_end":16431694,"line_start":221,"line_end":221,"column_start":1,"column_end":77}},{"value":"/ yielded `BytesMut`, but the trailing 2 bytes of the frame head will be","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16431695,"byte_end":16431769,"line_start":222,"line_end":222,"column_start":1,"column_end":75}},{"value":"/ included.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16431770,"byte_end":16431783,"line_start":223,"line_end":223,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16431784,"byte_end":16431787,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16431788,"byte_end":16431795,"line_start":225,"line_end":225,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16431796,"byte_end":16431827,"line_start":226,"line_end":226,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16431828,"byte_end":16431878,"line_start":227,"line_end":227,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16431879,"byte_end":16431920,"line_start":228,"line_end":228,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16431921,"byte_end":16431956,"line_start":229,"line_end":229,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(1) // length of hdr1","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16431957,"byte_end":16432006,"line_start":230,"line_end":230,"column_start":1,"column_end":50}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16432007,"byte_end":16432042,"line_start":231,"line_end":231,"column_start":1,"column_end":36}},{"value":"/     .length_adjustment(1)  // length of hdr2","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16432043,"byte_end":16432091,"line_start":232,"line_end":232,"column_start":1,"column_end":49}},{"value":"/     .num_skip(3) // length of hdr1 + LEN","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16432092,"byte_end":16432136,"line_start":233,"line_end":233,"column_start":1,"column_end":45}},{"value":"/     .new_read(io);","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16432137,"byte_end":16432159,"line_start":234,"line_end":234,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16432160,"byte_end":16432167,"line_start":235,"line_end":235,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16432168,"byte_end":16432190,"line_start":236,"line_end":236,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16432191,"byte_end":16432198,"line_start":237,"line_end":237,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16432199,"byte_end":16432202,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16432203,"byte_end":16432251,"line_start":239,"line_end":239,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16432252,"byte_end":16432255,"line_start":240,"line_end":240,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16432256,"byte_end":16432267,"line_start":241,"line_end":241,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16432268,"byte_end":16432294,"line_start":242,"line_end":242,"column_start":1,"column_end":27}},{"value":"/ +- hdr1 -+-- len ---+- hdr2 -+--- Payload ---+","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16432295,"byte_end":16432345,"line_start":243,"line_end":243,"column_start":1,"column_end":51}},{"value":"/ |  \\xCA  | \\x00\\x0B |  \\xFE  |  Hello world  |","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16432346,"byte_end":16432396,"line_start":244,"line_end":244,"column_start":1,"column_end":51}},{"value":"/ +--------+----------+--------+---------------+","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16432397,"byte_end":16432447,"line_start":245,"line_end":245,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16432448,"byte_end":16432451,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/          DECODED","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16432452,"byte_end":16432472,"line_start":247,"line_end":247,"column_start":1,"column_end":21}},{"value":"/ +- hdr2 -+--- Payload ---+","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16432473,"byte_end":16432503,"line_start":248,"line_end":248,"column_start":1,"column_end":31}},{"value":"/ |  \\xFE  |  Hello world  |","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16432504,"byte_end":16432534,"line_start":249,"line_end":249,"column_start":1,"column_end":31}},{"value":"/ +--------+---------------+","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16432535,"byte_end":16432565,"line_start":250,"line_end":250,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16432566,"byte_end":16432573,"line_start":251,"line_end":251,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16432574,"byte_end":16432577,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"/ The length field is situated in the middle of the frame head. In this","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16432578,"byte_end":16432651,"line_start":253,"line_end":253,"column_start":1,"column_end":74}},{"value":"/ case, the first byte in the frame head could be a version or some other","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16432652,"byte_end":16432727,"line_start":254,"line_end":254,"column_start":1,"column_end":76}},{"value":"/ identifier that is not needed for processing. On the other hand, the","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16432728,"byte_end":16432800,"line_start":255,"line_end":255,"column_start":1,"column_end":73}},{"value":"/ second half of the head is needed.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16432801,"byte_end":16432839,"line_start":256,"line_end":256,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16432840,"byte_end":16432843,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"/ `length_field_offset` indicates how many bytes to skip before starting","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16432844,"byte_end":16432918,"line_start":258,"line_end":258,"column_start":1,"column_end":75}},{"value":"/ to read the length field.  `length_adjustment` is the number of bytes to","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16432919,"byte_end":16432995,"line_start":259,"line_end":259,"column_start":1,"column_end":77}},{"value":"/ skip starting at the end of the length field. In this case, it is the","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16432996,"byte_end":16433069,"line_start":260,"line_end":260,"column_start":1,"column_end":74}},{"value":"/ second half of the head.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16433070,"byte_end":16433098,"line_start":261,"line_end":261,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16433099,"byte_end":16433102,"line_start":262,"line_end":262,"column_start":1,"column_end":4}},{"value":"/ ## Example 6","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16433103,"byte_end":16433119,"line_start":263,"line_end":263,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16433120,"byte_end":16433123,"line_start":264,"line_end":264,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 1 of a 4 byte","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16433124,"byte_end":16433197,"line_start":265,"line_end":265,"column_start":1,"column_end":74}},{"value":"/ frame head. The first byte and the length field will be omitted from the","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16433198,"byte_end":16433274,"line_start":266,"line_end":266,"column_start":1,"column_end":77}},{"value":"/ yielded `BytesMut`, but the trailing 2 bytes of the frame head will be","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16433275,"byte_end":16433349,"line_start":267,"line_end":267,"column_start":1,"column_end":75}},{"value":"/ included. In this case, the length field **includes** the frame head","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16433350,"byte_end":16433422,"line_start":268,"line_end":268,"column_start":1,"column_end":73}},{"value":"/ length.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16433423,"byte_end":16433434,"line_start":269,"line_end":269,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16433435,"byte_end":16433438,"line_start":270,"line_end":270,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16433439,"byte_end":16433446,"line_start":271,"line_end":271,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16433447,"byte_end":16433478,"line_start":272,"line_end":272,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16433479,"byte_end":16433529,"line_start":273,"line_end":273,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16433530,"byte_end":16433571,"line_start":274,"line_end":274,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16433572,"byte_end":16433607,"line_start":275,"line_end":275,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(1) // length of hdr1","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16433608,"byte_end":16433657,"line_start":276,"line_end":276,"column_start":1,"column_end":50}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16433658,"byte_end":16433693,"line_start":277,"line_end":277,"column_start":1,"column_end":36}},{"value":"/     .length_adjustment(-3)  // length of hdr1 + LEN, negative","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16433694,"byte_end":16433759,"line_start":278,"line_end":278,"column_start":1,"column_end":66}},{"value":"/     .num_skip(3)","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16433760,"byte_end":16433780,"line_start":279,"line_end":279,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16433781,"byte_end":16433803,"line_start":280,"line_end":280,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16433804,"byte_end":16433811,"line_start":281,"line_end":281,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16433812,"byte_end":16433819,"line_start":282,"line_end":282,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16433820,"byte_end":16433823,"line_start":283,"line_end":283,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16433824,"byte_end":16433872,"line_start":284,"line_end":284,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16433873,"byte_end":16433876,"line_start":285,"line_end":285,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16433877,"byte_end":16433888,"line_start":286,"line_end":286,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16433889,"byte_end":16433915,"line_start":287,"line_end":287,"column_start":1,"column_end":27}},{"value":"/ +- hdr1 -+-- len ---+- hdr2 -+--- Payload ---+","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16433916,"byte_end":16433966,"line_start":288,"line_end":288,"column_start":1,"column_end":51}},{"value":"/ |  \\xCA  | \\x00\\x0F |  \\xFE  |  Hello world  |","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16433967,"byte_end":16434017,"line_start":289,"line_end":289,"column_start":1,"column_end":51}},{"value":"/ +--------+----------+--------+---------------+","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16434018,"byte_end":16434068,"line_start":290,"line_end":290,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16434069,"byte_end":16434072,"line_start":291,"line_end":291,"column_start":1,"column_end":4}},{"value":"/          DECODED","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16434073,"byte_end":16434093,"line_start":292,"line_end":292,"column_start":1,"column_end":21}},{"value":"/ +- hdr2 -+--- Payload ---+","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16434094,"byte_end":16434124,"line_start":293,"line_end":293,"column_start":1,"column_end":31}},{"value":"/ |  \\xFE  |  Hello world  |","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16434125,"byte_end":16434155,"line_start":294,"line_end":294,"column_start":1,"column_end":31}},{"value":"/ +--------+---------------+","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16434156,"byte_end":16434186,"line_start":295,"line_end":295,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16434187,"byte_end":16434194,"line_start":296,"line_end":296,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16434195,"byte_end":16434198,"line_start":297,"line_end":297,"column_start":1,"column_end":4}},{"value":"/ Similar to the example above, the difference is that the length field","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16434199,"byte_end":16434272,"line_start":298,"line_end":298,"column_start":1,"column_end":74}},{"value":"/ represents the length of the entire frame instead of just the payload.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16434273,"byte_end":16434347,"line_start":299,"line_end":299,"column_start":1,"column_end":75}},{"value":"/ The length of `hdr1` and `len` must be counted in `length_adjustment`.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16434348,"byte_end":16434422,"line_start":300,"line_end":300,"column_start":1,"column_end":75}},{"value":"/ Note that the length of `hdr2` does **not** need to be explicitly set","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16434423,"byte_end":16434496,"line_start":301,"line_end":301,"column_start":1,"column_end":74}},{"value":"/ anywhere because it already is factored into the total frame length that","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16434497,"byte_end":16434573,"line_start":302,"line_end":302,"column_start":1,"column_end":77}},{"value":"/ is read from the byte stream.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16434574,"byte_end":16434607,"line_start":303,"line_end":303,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16434608,"byte_end":16434611,"line_start":304,"line_end":304,"column_start":1,"column_end":4}},{"value":"/ ## Example 7","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16434612,"byte_end":16434628,"line_start":305,"line_end":305,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16434629,"byte_end":16434632,"line_start":306,"line_end":306,"column_start":1,"column_end":4}},{"value":"/ The following will parse a 3 byte length field at offset 0 in a 4 byte","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16434633,"byte_end":16434707,"line_start":307,"line_end":307,"column_start":1,"column_end":75}},{"value":"/ frame head, excluding the 4th byte from the yielded `BytesMut`.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16434708,"byte_end":16434775,"line_start":308,"line_end":308,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16434776,"byte_end":16434779,"line_start":309,"line_end":309,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16434780,"byte_end":16434787,"line_start":310,"line_end":310,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16434788,"byte_end":16434819,"line_start":311,"line_end":311,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16434820,"byte_end":16434870,"line_start":312,"line_end":312,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16434871,"byte_end":16434912,"line_start":313,"line_end":313,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16434913,"byte_end":16434948,"line_start":314,"line_end":314,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16434949,"byte_end":16434997,"line_start":315,"line_end":315,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(3)","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16434998,"byte_end":16435029,"line_start":316,"line_end":316,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(0)  // default value","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16435030,"byte_end":16435077,"line_start":317,"line_end":317,"column_start":1,"column_end":48}},{"value":"/     .num_skip(4) // skip the first 4 bytes","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16435078,"byte_end":16435124,"line_start":318,"line_end":318,"column_start":1,"column_end":47}},{"value":"/     .new_read(io);","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16435125,"byte_end":16435147,"line_start":319,"line_end":319,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16435148,"byte_end":16435155,"line_start":320,"line_end":320,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16435156,"byte_end":16435178,"line_start":321,"line_end":321,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16435179,"byte_end":16435186,"line_start":322,"line_end":322,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16435187,"byte_end":16435190,"line_start":323,"line_end":323,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16435191,"byte_end":16435239,"line_start":324,"line_end":324,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16435240,"byte_end":16435243,"line_start":325,"line_end":325,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16435244,"byte_end":16435255,"line_start":326,"line_end":326,"column_start":1,"column_end":12}},{"value":"/                  INPUT                       DECODED","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16435256,"byte_end":16435312,"line_start":327,"line_end":327,"column_start":1,"column_end":57}},{"value":"/ +------- len ------+--- Payload ---+    +--- Payload ---+","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16435313,"byte_end":16435374,"line_start":328,"line_end":328,"column_start":1,"column_end":62}},{"value":"/ | \\x00\\x00\\x0B\\xFF |  Hello world  | => |  Hello world  |","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16435375,"byte_end":16435436,"line_start":329,"line_end":329,"column_start":1,"column_end":62}},{"value":"/ +------------------+---------------+    +---------------+","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16435437,"byte_end":16435498,"line_start":330,"line_end":330,"column_start":1,"column_end":62}},{"value":"/ ```","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16435499,"byte_end":16435506,"line_start":331,"line_end":331,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16435507,"byte_end":16435510,"line_start":332,"line_end":332,"column_start":1,"column_end":4}},{"value":"/ A simple example where there are unused bytes between the length field","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16435511,"byte_end":16435585,"line_start":333,"line_end":333,"column_start":1,"column_end":75}},{"value":"/ and the payload.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16435586,"byte_end":16435606,"line_start":334,"line_end":334,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16435607,"byte_end":16435610,"line_start":335,"line_end":335,"column_start":1,"column_end":4}},{"value":"/ # Encoding","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16435611,"byte_end":16435625,"line_start":336,"line_end":336,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16435626,"byte_end":16435629,"line_start":337,"line_end":337,"column_start":1,"column_end":4}},{"value":"/ [`FramedWrite`] adapts an [`AsyncWrite`] into a `Sink` of [`BytesMut`],","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16435630,"byte_end":16435705,"line_start":338,"line_end":338,"column_start":1,"column_end":76}},{"value":"/ such that each submitted [`BytesMut`] is prefaced by a length field.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16435706,"byte_end":16435778,"line_start":339,"line_end":339,"column_start":1,"column_end":73}},{"value":"/ There are fewer configuration options than [`FramedRead`]. Given","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16435779,"byte_end":16435847,"line_start":340,"line_end":340,"column_start":1,"column_end":69}},{"value":"/ protocols that have more complex frame heads, an encoder should probably","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16435848,"byte_end":16435924,"line_start":341,"line_end":341,"column_start":1,"column_end":77}},{"value":"/ be written by hand using [`Encoder`].","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16435925,"byte_end":16435966,"line_start":342,"line_end":342,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16435967,"byte_end":16435970,"line_start":343,"line_end":343,"column_start":1,"column_end":4}},{"value":"/ Here is a simple example, given a `FramedWrite` with the following","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16435971,"byte_end":16436041,"line_start":344,"line_end":344,"column_start":1,"column_end":71}},{"value":"/ configuration:","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16436042,"byte_end":16436060,"line_start":345,"line_end":345,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16436061,"byte_end":16436064,"line_start":346,"line_end":346,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16436065,"byte_end":16436072,"line_start":347,"line_end":347,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncWrite;","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16436073,"byte_end":16436105,"line_start":348,"line_end":348,"column_start":1,"column_end":33}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16436106,"byte_end":16436156,"line_start":349,"line_end":349,"column_start":1,"column_end":51}},{"value":"/ # fn write_frame<T: AsyncWrite>(io: T) {","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16436157,"byte_end":16436201,"line_start":350,"line_end":350,"column_start":1,"column_end":45}},{"value":"/ # let _ =","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16436202,"byte_end":16436215,"line_start":351,"line_end":351,"column_start":1,"column_end":14}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16436216,"byte_end":16436251,"line_start":352,"line_end":352,"column_start":1,"column_end":36}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16436252,"byte_end":16436287,"line_start":353,"line_end":353,"column_start":1,"column_end":36}},{"value":"/     .new_write(io);","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16436288,"byte_end":16436311,"line_start":354,"line_end":354,"column_start":1,"column_end":24}},{"value":"/ # }","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16436312,"byte_end":16436319,"line_start":355,"line_end":355,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16436320,"byte_end":16436342,"line_start":356,"line_end":356,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16436343,"byte_end":16436350,"line_start":357,"line_end":357,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16436351,"byte_end":16436354,"line_start":358,"line_end":358,"column_start":1,"column_end":4}},{"value":"/ A payload of `hello world` will be encoded as:","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16436355,"byte_end":16436405,"line_start":359,"line_end":359,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16436406,"byte_end":16436409,"line_start":360,"line_end":360,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16436410,"byte_end":16436421,"line_start":361,"line_end":361,"column_start":1,"column_end":12}},{"value":"/ +- len: u16 -+---- data ----+","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16436422,"byte_end":16436455,"line_start":362,"line_end":362,"column_start":1,"column_end":34}},{"value":"/ |  \\x00\\x0b  |  hello world |","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16436456,"byte_end":16436489,"line_start":363,"line_end":363,"column_start":1,"column_end":34}},{"value":"/ +------------+--------------+","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16436490,"byte_end":16436523,"line_start":364,"line_end":364,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16436524,"byte_end":16436531,"line_start":365,"line_end":365,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16436532,"byte_end":16436535,"line_start":366,"line_end":366,"column_start":1,"column_end":4}},{"value":"/ [`LengthDelimitedCodec::new()`]: method@LengthDelimitedCodec::new","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16436536,"byte_end":16436605,"line_start":367,"line_end":367,"column_start":1,"column_end":70}},{"value":"/ [`FramedRead`]: struct@FramedRead","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16436606,"byte_end":16436643,"line_start":368,"line_end":368,"column_start":1,"column_end":38}},{"value":"/ [`FramedWrite`]: struct@FramedWrite","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16436644,"byte_end":16436683,"line_start":369,"line_end":369,"column_start":1,"column_end":40}},{"value":"/ [`AsyncRead`]: trait@tokio::io::AsyncRead","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16436684,"byte_end":16436729,"line_start":370,"line_end":370,"column_start":1,"column_end":46}},{"value":"/ [`AsyncWrite`]: trait@tokio::io::AsyncWrite","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16436730,"byte_end":16436777,"line_start":371,"line_end":371,"column_start":1,"column_end":48}},{"value":"/ [`Encoder`]: trait@Encoder","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16436778,"byte_end":16436808,"line_start":372,"line_end":372,"column_start":1,"column_end":31}},{"value":"/ [`BytesMut`]: bytes::BytesMut","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16436809,"byte_end":16436842,"line_start":373,"line_end":373,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":1213},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16437409,"byte_end":16437416,"line_start":390,"line_end":390,"column_start":12,"column_end":19},"name":"Builder","qualname":"::codec::length_delimited::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":1214},{"krate":0,"index":1215},{"krate":0,"index":1216},{"krate":0,"index":1217},{"krate":0,"index":1218},{"krate":0,"index":1219}],"decl_id":null,"docs":" Configure length delimited `LengthDelimitedCodec`s.","sig":null,"attributes":[{"value":"/ Configure length delimited `LengthDelimitedCodec`s.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16437091,"byte_end":16437146,"line_start":384,"line_end":384,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16437147,"byte_end":16437150,"line_start":385,"line_end":385,"column_start":1,"column_end":4}},{"value":"/ `Builder` enables constructing configured length delimited codecs. Note","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16437151,"byte_end":16437226,"line_start":386,"line_end":386,"column_start":1,"column_end":76}},{"value":"/ that not all configuration settings apply to both encoding and decoding. See","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16437227,"byte_end":16437307,"line_start":387,"line_end":387,"column_start":1,"column_end":81}},{"value":"/ the documentation for specific methods for more detail.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16437308,"byte_end":16437367,"line_start":388,"line_end":388,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":973},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16438087,"byte_end":16438112,"line_start":412,"line_end":412,"column_start":12,"column_end":37},"name":"LengthDelimitedCodecError","qualname":"::codec::length_delimited::LengthDelimitedCodecError","value":"LengthDelimitedCodecError {  }","parent":null,"children":[{"krate":0,"index":974}],"decl_id":null,"docs":" An error when the number of bytes read is more than max frame length.\n","sig":null,"attributes":[{"value":"/ An error when the number of bytes read is more than max frame length.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16438002,"byte_end":16438075,"line_start":411,"line_end":411,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":1225},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16438464,"byte_end":16438484,"line_start":425,"line_end":425,"column_start":12,"column_end":32},"name":"LengthDelimitedCodec","qualname":"::codec::length_delimited::LengthDelimitedCodec","value":"LengthDelimitedCodec {  }","parent":null,"children":[{"krate":0,"index":1226},{"krate":0,"index":1227}],"decl_id":null,"docs":" A codec for frames delimited by a frame head specifying their lengths.","sig":null,"attributes":[{"value":"/ A codec for frames delimited by a frame head specifying their lengths.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16438133,"byte_end":16438207,"line_start":416,"line_end":416,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16438208,"byte_end":16438211,"line_start":417,"line_end":417,"column_start":1,"column_end":4}},{"value":"/ This allows the consumer to work with entire frames without having to worry","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16438212,"byte_end":16438291,"line_start":418,"line_end":418,"column_start":1,"column_end":80}},{"value":"/ about buffering or other framing logic.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16438292,"byte_end":16438335,"line_start":419,"line_end":419,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16438336,"byte_end":16438339,"line_start":420,"line_end":420,"column_start":1,"column_end":4}},{"value":"/ See [module level] documentation for more detail.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16438340,"byte_end":16438393,"line_start":421,"line_end":421,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16438394,"byte_end":16438397,"line_start":422,"line_end":422,"column_start":1,"column_end":4}},{"value":"/ [module level]: index.html","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16438398,"byte_end":16438428,"line_start":423,"line_end":423,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":976},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16438828,"byte_end":16438831,"line_start":443,"line_end":443,"column_start":12,"column_end":15},"name":"new","qualname":"<LengthDelimitedCodec>::new","value":"fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `LengthDelimitedCodec` with the default configuration values.\n","sig":null,"attributes":[{"value":"/ Creates a new `LengthDelimitedCodec` with the default configuration values.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16438737,"byte_end":16438816,"line_start":442,"line_end":442,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":977},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16439058,"byte_end":16439065,"line_start":452,"line_end":452,"column_start":12,"column_end":19},"name":"builder","qualname":"<LengthDelimitedCodec>::builder","value":"fn builder() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new length delimited codec builder with default configuration\n values.\n","sig":null,"attributes":[{"value":"/ Creates a new length delimited codec builder with default configuration","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16438955,"byte_end":16439030,"line_start":450,"line_end":450,"column_start":5,"column_end":80}},{"value":"/ values.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16439035,"byte_end":16439046,"line_start":451,"line_end":451,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":978},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16439287,"byte_end":16439303,"line_start":460,"line_end":460,"column_start":12,"column_end":28},"name":"max_frame_length","qualname":"<LengthDelimitedCodec>::max_frame_length","value":"fn max_frame_length<'_>(&'_ Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current max frame setting","sig":null,"attributes":[{"value":"/ Returns the current max frame setting","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16439115,"byte_end":16439156,"line_start":456,"line_end":456,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16439161,"byte_end":16439164,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ This is the largest size this codec will accept from the wire. Larger","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16439169,"byte_end":16439242,"line_start":458,"line_end":458,"column_start":5,"column_end":78}},{"value":"/ frames will be rejected.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16439247,"byte_end":16439275,"line_start":459,"line_end":459,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":979},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16439724,"byte_end":16439744,"line_start":470,"line_end":470,"column_start":12,"column_end":32},"name":"set_max_frame_length","qualname":"<LengthDelimitedCodec>::set_max_frame_length","value":"fn set_max_frame_length<'_>(&'_ mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Updates the max frame setting.","sig":null,"attributes":[{"value":"/ Updates the max frame setting.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16439368,"byte_end":16439402,"line_start":464,"line_end":464,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16439407,"byte_end":16439410,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ The change takes effect the next time a frame is decoded. In other","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16439415,"byte_end":16439485,"line_start":466,"line_end":466,"column_start":5,"column_end":75}},{"value":"/ words, if a frame is currently in process of being decoded with a frame","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16439490,"byte_end":16439565,"line_start":467,"line_end":467,"column_start":5,"column_end":80}},{"value":"/ size greater than `val` but less than the max frame length in effect","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16439570,"byte_end":16439642,"line_start":468,"line_end":468,"column_start":5,"column_end":77}},{"value":"/ before calling this function, then the frame will be allowed.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16439647,"byte_end":16439712,"line_start":469,"line_end":469,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":985},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16442149,"byte_end":16442155,"line_start":553,"line_end":553,"column_start":8,"column_end":14},"name":"decode","qualname":"<LengthDelimitedCodec as codec::decoder::Decoder>::decode","value":"fn decode<'_, '_>(&'_ mut Self, &'_ mut BytesMut)\n-> io::Result<Option<BytesMut>>","parent":{"krate":0,"index":511},"children":[],"decl_id":{"krate":0,"index":514},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":988},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16443029,"byte_end":16443035,"line_start":583,"line_end":583,"column_start":8,"column_end":14},"name":"encode","qualname":"<LengthDelimitedCodec as codec::encoder::Encoder>::encode","value":"fn encode<'_, '_>(&'_ mut Self, Bytes, &'_ mut BytesMut)\n-> Result<(), io::Error>","parent":{"krate":0,"index":528},"children":[],"decl_id":{"krate":0,"index":531},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":991},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16444361,"byte_end":16444368,"line_start":625,"line_end":625,"column_start":8,"column_end":15},"name":"default","qualname":"<LengthDelimitedCodec as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3241},"children":[],"decl_id":{"krate":2,"index":3242},"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":993},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16444533,"byte_end":16444548,"line_start":634,"line_end":634,"column_start":15,"column_end":30},"name":"LengthFieldType","qualname":"::codec::length_delimited::builder::LengthFieldType","value":"LengthFieldType","parent":null,"children":[],"decl_id":null,"docs":" Types that can be used with `Builder::length_field_type`.\n","sig":null,"attributes":[{"value":"/ Types that can be used with `Builder::length_field_type`.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16444457,"byte_end":16444518,"line_start":633,"line_end":633,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1000},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16445473,"byte_end":16445476,"line_start":670,"line_end":670,"column_start":12,"column_end":15},"name":"new","qualname":"<Builder>::new","value":"fn new() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new length delimited codec builder with default configuration\n values.","sig":null,"attributes":[{"value":"/ Creates a new length delimited codec builder with default configuration","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16444927,"byte_end":16445002,"line_start":651,"line_end":651,"column_start":5,"column_end":80}},{"value":"/ values.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16445007,"byte_end":16445018,"line_start":652,"line_end":652,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16445023,"byte_end":16445026,"line_start":653,"line_end":653,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16445031,"byte_end":16445045,"line_start":654,"line_end":654,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16445050,"byte_end":16445053,"line_start":655,"line_end":655,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16445058,"byte_end":16445065,"line_start":656,"line_end":656,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16445070,"byte_end":16445101,"line_start":657,"line_end":657,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16445106,"byte_end":16445154,"line_start":658,"line_end":658,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16445159,"byte_end":16445162,"line_start":659,"line_end":659,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16445167,"byte_end":16445208,"line_start":660,"line_end":660,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16445213,"byte_end":16445248,"line_start":661,"line_end":661,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16445253,"byte_end":16445284,"line_start":662,"line_end":662,"column_start":5,"column_end":36}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16445289,"byte_end":16445324,"line_start":663,"line_end":663,"column_start":5,"column_end":40}},{"value":"/     .length_adjustment(0)","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16445329,"byte_end":16445358,"line_start":664,"line_end":664,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16445363,"byte_end":16445383,"line_start":665,"line_end":665,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16445388,"byte_end":16445410,"line_start":666,"line_end":666,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16445415,"byte_end":16445422,"line_start":667,"line_end":667,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16445427,"byte_end":16445449,"line_start":668,"line_end":668,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16445454,"byte_end":16445461,"line_start":669,"line_end":669,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1001},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16446661,"byte_end":16446671,"line_start":711,"line_end":711,"column_start":12,"column_end":22},"name":"big_endian","qualname":"<Builder>::big_endian","value":"fn big_endian<'_>(&'_ mut Self) -> &'_ mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a big endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a big endian integer","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16446140,"byte_end":16446189,"line_start":692,"line_end":692,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16446194,"byte_end":16446197,"line_start":693,"line_end":693,"column_start":5,"column_end":8}},{"value":"/ This is the default setting.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16446202,"byte_end":16446234,"line_start":694,"line_end":694,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16446239,"byte_end":16446242,"line_start":695,"line_end":695,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16446247,"byte_end":16446315,"line_start":696,"line_end":696,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16446320,"byte_end":16446323,"line_start":697,"line_end":697,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16446328,"byte_end":16446342,"line_start":698,"line_end":698,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16446347,"byte_end":16446350,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16446355,"byte_end":16446362,"line_start":700,"line_end":700,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16446367,"byte_end":16446398,"line_start":701,"line_end":701,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16446403,"byte_end":16446451,"line_start":702,"line_end":702,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16446456,"byte_end":16446459,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16446464,"byte_end":16446505,"line_start":704,"line_end":704,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16446510,"byte_end":16446545,"line_start":705,"line_end":705,"column_start":5,"column_end":40}},{"value":"/     .big_endian()","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16446550,"byte_end":16446571,"line_start":706,"line_end":706,"column_start":5,"column_end":26}},{"value":"/     .new_read(io);","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16446576,"byte_end":16446598,"line_start":707,"line_end":707,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16446603,"byte_end":16446610,"line_start":708,"line_end":708,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16446615,"byte_end":16446637,"line_start":709,"line_end":709,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16446642,"byte_end":16446649,"line_start":710,"line_end":710,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1002},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16447303,"byte_end":16447316,"line_start":735,"line_end":735,"column_start":12,"column_end":25},"name":"little_endian","qualname":"<Builder>::little_endian","value":"fn little_endian<'_>(&'_ mut Self) -> &'_ mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a little endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a little endian integer","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16446770,"byte_end":16446822,"line_start":716,"line_end":716,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16446827,"byte_end":16446830,"line_start":717,"line_end":717,"column_start":5,"column_end":8}},{"value":"/ The default setting is big endian.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16446835,"byte_end":16446873,"line_start":718,"line_end":718,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16446878,"byte_end":16446881,"line_start":719,"line_end":719,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16446886,"byte_end":16446954,"line_start":720,"line_end":720,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16446959,"byte_end":16446962,"line_start":721,"line_end":721,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16446967,"byte_end":16446981,"line_start":722,"line_end":722,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16446986,"byte_end":16446989,"line_start":723,"line_end":723,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16446994,"byte_end":16447001,"line_start":724,"line_end":724,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16447006,"byte_end":16447037,"line_start":725,"line_end":725,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16447042,"byte_end":16447090,"line_start":726,"line_end":726,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16447095,"byte_end":16447098,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16447103,"byte_end":16447144,"line_start":728,"line_end":728,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16447149,"byte_end":16447184,"line_start":729,"line_end":729,"column_start":5,"column_end":40}},{"value":"/     .little_endian()","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16447189,"byte_end":16447213,"line_start":730,"line_end":730,"column_start":5,"column_end":29}},{"value":"/     .new_read(io);","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16447218,"byte_end":16447240,"line_start":731,"line_end":731,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16447245,"byte_end":16447252,"line_start":732,"line_end":732,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16447257,"byte_end":16447279,"line_start":733,"line_end":733,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16447284,"byte_end":16447291,"line_start":734,"line_end":734,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1003},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16447949,"byte_end":16447962,"line_start":759,"line_end":759,"column_start":12,"column_end":25},"name":"native_endian","qualname":"<Builder>::native_endian","value":"fn native_endian<'_>(&'_ mut Self) -> &'_ mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a native endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a native endian integer","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16447416,"byte_end":16447468,"line_start":740,"line_end":740,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16447473,"byte_end":16447476,"line_start":741,"line_end":741,"column_start":5,"column_end":8}},{"value":"/ The default setting is big endian.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16447481,"byte_end":16447519,"line_start":742,"line_end":742,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16447524,"byte_end":16447527,"line_start":743,"line_end":743,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16447532,"byte_end":16447600,"line_start":744,"line_end":744,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16447605,"byte_end":16447608,"line_start":745,"line_end":745,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16447613,"byte_end":16447627,"line_start":746,"line_end":746,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16447632,"byte_end":16447635,"line_start":747,"line_end":747,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16447640,"byte_end":16447647,"line_start":748,"line_end":748,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16447652,"byte_end":16447683,"line_start":749,"line_end":749,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16447688,"byte_end":16447736,"line_start":750,"line_end":750,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16447741,"byte_end":16447744,"line_start":751,"line_end":751,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16447749,"byte_end":16447790,"line_start":752,"line_end":752,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16447795,"byte_end":16447830,"line_start":753,"line_end":753,"column_start":5,"column_end":40}},{"value":"/     .native_endian()","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16447835,"byte_end":16447859,"line_start":754,"line_end":754,"column_start":5,"column_end":29}},{"value":"/     .new_read(io);","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16447864,"byte_end":16447886,"line_start":755,"line_end":755,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16447891,"byte_end":16447898,"line_start":756,"line_end":756,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16447903,"byte_end":16447925,"line_start":757,"line_end":757,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16447930,"byte_end":16447937,"line_start":758,"line_end":758,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1004},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16449059,"byte_end":16449075,"line_start":793,"line_end":793,"column_start":12,"column_end":28},"name":"max_frame_length","qualname":"<Builder>::max_frame_length","value":"fn max_frame_length<'_>(&'_ mut Self, usize) -> &'_ mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the max frame length in bytes","sig":null,"attributes":[{"value":"/ Sets the max frame length in bytes","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16448131,"byte_end":16448169,"line_start":767,"line_end":767,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16448174,"byte_end":16448177,"line_start":768,"line_end":768,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding. The","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16448182,"byte_end":16448254,"line_start":769,"line_end":769,"column_start":5,"column_end":77}},{"value":"/ default value is 8MB.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16448259,"byte_end":16448284,"line_start":770,"line_end":770,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16448289,"byte_end":16448292,"line_start":771,"line_end":771,"column_start":5,"column_end":8}},{"value":"/ When decoding, the length field read from the byte stream is checked","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16448297,"byte_end":16448369,"line_start":772,"line_end":772,"column_start":5,"column_end":77}},{"value":"/ against this setting **before** any adjustments are applied. When","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16448374,"byte_end":16448443,"line_start":773,"line_end":773,"column_start":5,"column_end":74}},{"value":"/ encoding, the length of the submitted payload is checked against this","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16448448,"byte_end":16448521,"line_start":774,"line_end":774,"column_start":5,"column_end":78}},{"value":"/ setting.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16448526,"byte_end":16448538,"line_start":775,"line_end":775,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16448543,"byte_end":16448546,"line_start":776,"line_end":776,"column_start":5,"column_end":8}},{"value":"/ When frames exceed the max length, an `io::Error` with the custom value","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16448551,"byte_end":16448626,"line_start":777,"line_end":777,"column_start":5,"column_end":80}},{"value":"/ of the `LengthDelimitedCodecError` type will be returned.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16448631,"byte_end":16448692,"line_start":778,"line_end":778,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16448697,"byte_end":16448700,"line_start":779,"line_end":779,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16448705,"byte_end":16448719,"line_start":780,"line_end":780,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16448724,"byte_end":16448727,"line_start":781,"line_end":781,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16448732,"byte_end":16448739,"line_start":782,"line_end":782,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16448744,"byte_end":16448775,"line_start":783,"line_end":783,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16448780,"byte_end":16448828,"line_start":784,"line_end":784,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16448833,"byte_end":16448836,"line_start":785,"line_end":785,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16448841,"byte_end":16448882,"line_start":786,"line_end":786,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16448887,"byte_end":16448922,"line_start":787,"line_end":787,"column_start":5,"column_end":40}},{"value":"/     .max_frame_length(8 * 1024 * 1024)","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16448927,"byte_end":16448969,"line_start":788,"line_end":788,"column_start":5,"column_end":47}},{"value":"/     .new_read(io);","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16448974,"byte_end":16448996,"line_start":789,"line_end":789,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16449001,"byte_end":16449008,"line_start":790,"line_end":790,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16449013,"byte_end":16449035,"line_start":791,"line_end":791,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16449040,"byte_end":16449047,"line_start":792,"line_end":792,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1005},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16450174,"byte_end":16450191,"line_start":830,"line_end":830,"column_start":12,"column_end":29},"name":"length_field_type","qualname":"<Builder>::length_field_type","value":"fn length_field_type<T, '_>(&'_ mut Self) -> &'_ mut Self where\nT: builder::LengthFieldType","parent":null,"children":[],"decl_id":null,"docs":" Sets the unsigned integer type used to represent the length field.","sig":null,"attributes":[{"value":"/ Sets the unsigned integer type used to represent the length field.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16449172,"byte_end":16449242,"line_start":798,"line_end":798,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16449247,"byte_end":16449250,"line_start":799,"line_end":799,"column_start":5,"column_end":8}},{"value":"/ The default type is [`u32`]. The max type is [`u64`] (or [`usize`] on","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16449255,"byte_end":16449328,"line_start":800,"line_end":800,"column_start":5,"column_end":78}},{"value":"/ 64-bit targets).","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16449333,"byte_end":16449353,"line_start":801,"line_end":801,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16449358,"byte_end":16449361,"line_start":802,"line_end":802,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16449366,"byte_end":16449380,"line_start":803,"line_end":803,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16449385,"byte_end":16449388,"line_start":804,"line_end":804,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16449393,"byte_end":16449400,"line_start":805,"line_end":805,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16449405,"byte_end":16449436,"line_start":806,"line_end":806,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16449441,"byte_end":16449489,"line_start":807,"line_end":807,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16449494,"byte_end":16449497,"line_start":808,"line_end":808,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16449502,"byte_end":16449543,"line_start":809,"line_end":809,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16449548,"byte_end":16449583,"line_start":810,"line_end":810,"column_start":5,"column_end":40}},{"value":"/     .length_field_type::<u32>()","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16449588,"byte_end":16449623,"line_start":811,"line_end":811,"column_start":5,"column_end":40}},{"value":"/     .new_read(io);","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16449628,"byte_end":16449650,"line_start":812,"line_end":812,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16449655,"byte_end":16449662,"line_start":813,"line_end":813,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16449667,"byte_end":16449689,"line_start":814,"line_end":814,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16449694,"byte_end":16449701,"line_start":815,"line_end":815,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16449706,"byte_end":16449709,"line_start":816,"line_end":816,"column_start":5,"column_end":8}},{"value":"/ Unlike [`Builder::length_field_length`], this does not fail at runtime","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16449714,"byte_end":16449788,"line_start":817,"line_end":817,"column_start":5,"column_end":79}},{"value":"/ and instead produces a compile error:","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16449793,"byte_end":16449834,"line_start":818,"line_end":818,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16449839,"byte_end":16449842,"line_start":819,"line_end":819,"column_start":5,"column_end":8}},{"value":"/ ```compile_fail","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16449847,"byte_end":16449866,"line_start":820,"line_end":820,"column_start":5,"column_end":24}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16449871,"byte_end":16449902,"line_start":821,"line_end":821,"column_start":5,"column_end":36}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16449907,"byte_end":16449957,"line_start":822,"line_end":822,"column_start":5,"column_end":55}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16449962,"byte_end":16450003,"line_start":823,"line_end":823,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16450008,"byte_end":16450043,"line_start":824,"line_end":824,"column_start":5,"column_end":40}},{"value":"/     .length_field_type::<u128>()","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16450048,"byte_end":16450084,"line_start":825,"line_end":825,"column_start":5,"column_end":41}},{"value":"/     .new_read(io);","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16450089,"byte_end":16450111,"line_start":826,"line_end":826,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16450116,"byte_end":16450123,"line_start":827,"line_end":827,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16450128,"byte_end":16450150,"line_start":828,"line_end":828,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16450155,"byte_end":16450162,"line_start":829,"line_end":829,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1007},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16450876,"byte_end":16450895,"line_start":853,"line_end":853,"column_start":12,"column_end":31},"name":"length_field_length","qualname":"<Builder>::length_field_length","value":"fn length_field_length<'_>(&'_ mut Self, usize) -> &'_ mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes used to represent the length field","sig":null,"attributes":[{"value":"/ Sets the number of bytes used to represent the length field","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16450312,"byte_end":16450375,"line_start":834,"line_end":834,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16450380,"byte_end":16450383,"line_start":835,"line_end":835,"column_start":5,"column_end":8}},{"value":"/ The default value is `4`. The max value is `8`.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16450388,"byte_end":16450439,"line_start":836,"line_end":836,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16450444,"byte_end":16450447,"line_start":837,"line_end":837,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16450452,"byte_end":16450520,"line_start":838,"line_end":838,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16450525,"byte_end":16450528,"line_start":839,"line_end":839,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16450533,"byte_end":16450547,"line_start":840,"line_end":840,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16450552,"byte_end":16450555,"line_start":841,"line_end":841,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16450560,"byte_end":16450567,"line_start":842,"line_end":842,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16450572,"byte_end":16450603,"line_start":843,"line_end":843,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16450608,"byte_end":16450656,"line_start":844,"line_end":844,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16450661,"byte_end":16450664,"line_start":845,"line_end":845,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16450669,"byte_end":16450710,"line_start":846,"line_end":846,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16450715,"byte_end":16450750,"line_start":847,"line_end":847,"column_start":5,"column_end":40}},{"value":"/     .length_field_length(4)","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16450755,"byte_end":16450786,"line_start":848,"line_end":848,"column_start":5,"column_end":36}},{"value":"/     .new_read(io);","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16450791,"byte_end":16450813,"line_start":849,"line_end":849,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16450818,"byte_end":16450825,"line_start":850,"line_end":850,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16450830,"byte_end":16450852,"line_start":851,"line_end":851,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16450857,"byte_end":16450864,"line_start":852,"line_end":852,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1008},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16451554,"byte_end":16451573,"line_start":876,"line_end":876,"column_start":12,"column_end":31},"name":"length_field_offset","qualname":"<Builder>::length_field_offset","value":"fn length_field_offset<'_>(&'_ mut Self, usize) -> &'_ mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes in the header before the length field","sig":null,"attributes":[{"value":"/ Sets the number of bytes in the header before the length field","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16451064,"byte_end":16451130,"line_start":859,"line_end":859,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16451135,"byte_end":16451138,"line_start":860,"line_end":860,"column_start":5,"column_end":8}},{"value":"/ This configuration option only applies to decoding.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16451143,"byte_end":16451198,"line_start":861,"line_end":861,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16451203,"byte_end":16451206,"line_start":862,"line_end":862,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16451211,"byte_end":16451225,"line_start":863,"line_end":863,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16451230,"byte_end":16451233,"line_start":864,"line_end":864,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16451238,"byte_end":16451245,"line_start":865,"line_end":865,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16451250,"byte_end":16451281,"line_start":866,"line_end":866,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16451286,"byte_end":16451334,"line_start":867,"line_end":867,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16451339,"byte_end":16451342,"line_start":868,"line_end":868,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16451347,"byte_end":16451388,"line_start":869,"line_end":869,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16451393,"byte_end":16451428,"line_start":870,"line_end":870,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(1)","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16451433,"byte_end":16451464,"line_start":871,"line_end":871,"column_start":5,"column_end":36}},{"value":"/     .new_read(io);","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16451469,"byte_end":16451491,"line_start":872,"line_end":872,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16451496,"byte_end":16451503,"line_start":873,"line_end":873,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16451508,"byte_end":16451530,"line_start":874,"line_end":874,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16451535,"byte_end":16451542,"line_start":875,"line_end":875,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1009},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16452127,"byte_end":16452144,"line_start":897,"line_end":897,"column_start":12,"column_end":29},"name":"length_adjustment","qualname":"<Builder>::length_adjustment","value":"fn length_adjustment<'_>(&'_ mut Self, isize) -> &'_ mut Self","parent":null,"children":[],"decl_id":null,"docs":" Delta between the payload length specified in the header and the real\n payload length","sig":null,"attributes":[{"value":"/ Delta between the payload length specified in the header and the real","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16451676,"byte_end":16451749,"line_start":881,"line_end":881,"column_start":5,"column_end":78}},{"value":"/ payload length","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16451754,"byte_end":16451772,"line_start":882,"line_end":882,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16451777,"byte_end":16451780,"line_start":883,"line_end":883,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16451785,"byte_end":16451799,"line_start":884,"line_end":884,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16451804,"byte_end":16451807,"line_start":885,"line_end":885,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16451812,"byte_end":16451819,"line_start":886,"line_end":886,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16451824,"byte_end":16451855,"line_start":887,"line_end":887,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16451860,"byte_end":16451908,"line_start":888,"line_end":888,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16451913,"byte_end":16451916,"line_start":889,"line_end":889,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16451921,"byte_end":16451962,"line_start":890,"line_end":890,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16451967,"byte_end":16452002,"line_start":891,"line_end":891,"column_start":5,"column_end":40}},{"value":"/     .length_adjustment(-2)","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16452007,"byte_end":16452037,"line_start":892,"line_end":892,"column_start":5,"column_end":35}},{"value":"/     .new_read(io);","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16452042,"byte_end":16452064,"line_start":893,"line_end":893,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16452069,"byte_end":16452076,"line_start":894,"line_end":894,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16452081,"byte_end":16452103,"line_start":895,"line_end":895,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16452108,"byte_end":16452115,"line_start":896,"line_end":896,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1010},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16452794,"byte_end":16452802,"line_start":921,"line_end":921,"column_start":12,"column_end":20},"name":"num_skip","qualname":"<Builder>::num_skip","value":"fn num_skip<'_>(&'_ mut Self, usize) -> &'_ mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes to skip before reading the payload","sig":null,"attributes":[{"value":"/ Sets the number of bytes to skip before reading the payload","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16452245,"byte_end":16452308,"line_start":902,"line_end":902,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16452313,"byte_end":16452316,"line_start":903,"line_end":903,"column_start":5,"column_end":8}},{"value":"/ Default value is `length_field_len + length_field_offset`","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16452321,"byte_end":16452382,"line_start":904,"line_end":904,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16452387,"byte_end":16452390,"line_start":905,"line_end":905,"column_start":5,"column_end":8}},{"value":"/ This configuration option only applies to decoding","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16452395,"byte_end":16452449,"line_start":906,"line_end":906,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16452454,"byte_end":16452457,"line_start":907,"line_end":907,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16452462,"byte_end":16452476,"line_start":908,"line_end":908,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16452481,"byte_end":16452484,"line_start":909,"line_end":909,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16452489,"byte_end":16452496,"line_start":910,"line_end":910,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16452501,"byte_end":16452532,"line_start":911,"line_end":911,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16452537,"byte_end":16452585,"line_start":912,"line_end":912,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16452590,"byte_end":16452593,"line_start":913,"line_end":913,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16452598,"byte_end":16452639,"line_start":914,"line_end":914,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16452644,"byte_end":16452679,"line_start":915,"line_end":915,"column_start":5,"column_end":40}},{"value":"/     .num_skip(4)","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16452684,"byte_end":16452704,"line_start":916,"line_end":916,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16452709,"byte_end":16452731,"line_start":917,"line_end":917,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16452736,"byte_end":16452743,"line_start":918,"line_end":918,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16452748,"byte_end":16452770,"line_start":919,"line_end":919,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16452775,"byte_end":16452782,"line_start":920,"line_end":920,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1011},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16453326,"byte_end":16453335,"line_start":941,"line_end":941,"column_start":12,"column_end":21},"name":"new_codec","qualname":"<Builder>::new_codec","value":"fn new_codec<'_>(&'_ Self) -> LengthDelimitedCodec","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `LengthDelimitedCodec`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `LengthDelimitedCodec`","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16452900,"byte_end":16452963,"line_start":926,"line_end":926,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16452968,"byte_end":16452971,"line_start":927,"line_end":927,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16452976,"byte_end":16452990,"line_start":928,"line_end":928,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16452995,"byte_end":16452998,"line_start":929,"line_end":929,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16453003,"byte_end":16453010,"line_start":930,"line_end":930,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16453015,"byte_end":16453063,"line_start":931,"line_end":931,"column_start":5,"column_end":53}},{"value":"/ # pub fn main() {","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16453068,"byte_end":16453089,"line_start":932,"line_end":932,"column_start":5,"column_end":26}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16453094,"byte_end":16453129,"line_start":933,"line_end":933,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16453134,"byte_end":16453165,"line_start":934,"line_end":934,"column_start":5,"column_end":36}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16453170,"byte_end":16453205,"line_start":935,"line_end":935,"column_start":5,"column_end":40}},{"value":"/     .length_adjustment(0)","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16453210,"byte_end":16453239,"line_start":936,"line_end":936,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16453244,"byte_end":16453264,"line_start":937,"line_end":937,"column_start":5,"column_end":25}},{"value":"/     .new_codec();","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16453269,"byte_end":16453290,"line_start":938,"line_end":938,"column_start":5,"column_end":26}},{"value":"/ # }","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16453295,"byte_end":16453302,"line_start":939,"line_end":939,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16453307,"byte_end":16453314,"line_start":940,"line_end":940,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1012},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16453995,"byte_end":16454003,"line_start":966,"line_end":966,"column_start":12,"column_end":20},"name":"new_read","qualname":"<Builder>::new_read","value":"fn new_read<T, '_>(&'_ Self, T) -> FramedRead<T, LengthDelimitedCodec> where\nT: AsyncRead","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `FramedRead`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `FramedRead`","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16453487,"byte_end":16453540,"line_start":948,"line_end":948,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16453545,"byte_end":16453548,"line_start":949,"line_end":949,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16453553,"byte_end":16453567,"line_start":950,"line_end":950,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16453572,"byte_end":16453575,"line_start":951,"line_end":951,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16453580,"byte_end":16453587,"line_start":952,"line_end":952,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16453592,"byte_end":16453623,"line_start":953,"line_end":953,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16453628,"byte_end":16453676,"line_start":954,"line_end":954,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16453681,"byte_end":16453684,"line_start":955,"line_end":955,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16453689,"byte_end":16453730,"line_start":956,"line_end":956,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16453735,"byte_end":16453770,"line_start":957,"line_end":957,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16453775,"byte_end":16453806,"line_start":958,"line_end":958,"column_start":5,"column_end":36}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16453811,"byte_end":16453846,"line_start":959,"line_end":959,"column_start":5,"column_end":40}},{"value":"/     .length_adjustment(0)","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16453851,"byte_end":16453880,"line_start":960,"line_end":960,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16453885,"byte_end":16453905,"line_start":961,"line_end":961,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16453910,"byte_end":16453932,"line_start":962,"line_end":962,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16453937,"byte_end":16453944,"line_start":963,"line_end":963,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16453949,"byte_end":16453971,"line_start":964,"line_end":964,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16453976,"byte_end":16453983,"line_start":965,"line_end":965,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1014},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16454580,"byte_end":16454589,"line_start":987,"line_end":987,"column_start":12,"column_end":21},"name":"new_write","qualname":"<Builder>::new_write","value":"fn new_write<T, '_>(&'_ Self, T) -> FramedWrite<T, LengthDelimitedCodec> where\nT: AsyncWrite","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `FramedWrite`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `FramedWrite`","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16454167,"byte_end":16454221,"line_start":973,"line_end":973,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16454226,"byte_end":16454229,"line_start":974,"line_end":974,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16454234,"byte_end":16454248,"line_start":975,"line_end":975,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16454253,"byte_end":16454256,"line_start":976,"line_end":976,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16454261,"byte_end":16454268,"line_start":977,"line_end":977,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncWrite;","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16454273,"byte_end":16454305,"line_start":978,"line_end":978,"column_start":5,"column_end":37}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16454310,"byte_end":16454360,"line_start":979,"line_end":979,"column_start":5,"column_end":55}},{"value":"/ # fn write_frame<T: AsyncWrite>(io: T) {","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16454365,"byte_end":16454409,"line_start":980,"line_end":980,"column_start":5,"column_end":49}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16454414,"byte_end":16454449,"line_start":981,"line_end":981,"column_start":5,"column_end":40}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16454454,"byte_end":16454489,"line_start":982,"line_end":982,"column_start":5,"column_end":40}},{"value":"/     .new_write(io);","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16454494,"byte_end":16454517,"line_start":983,"line_end":983,"column_start":5,"column_end":28}},{"value":"/ # }","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16454522,"byte_end":16454529,"line_start":984,"line_end":984,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16454534,"byte_end":16454556,"line_start":985,"line_end":985,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16454561,"byte_end":16454568,"line_start":986,"line_end":986,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1016},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16455202,"byte_end":16455212,"line_start":1009,"line_end":1009,"column_start":12,"column_end":22},"name":"new_framed","qualname":"<Builder>::new_framed","value":"fn new_framed<T, '_>(&'_ Self, T) -> Framed<T, LengthDelimitedCodec> where\nT: AsyncRead + AsyncWrite","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `Framed`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `Framed`","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16454750,"byte_end":16454799,"line_start":994,"line_end":994,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16454804,"byte_end":16454807,"line_start":995,"line_end":995,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16454812,"byte_end":16454826,"line_start":996,"line_end":996,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16454831,"byte_end":16454834,"line_start":997,"line_end":997,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16454839,"byte_end":16454846,"line_start":998,"line_end":998,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16454851,"byte_end":16454896,"line_start":999,"line_end":999,"column_start":5,"column_end":50}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16454901,"byte_end":16454951,"line_start":1000,"line_end":1000,"column_start":5,"column_end":55}},{"value":"/ # fn write_frame<T: AsyncRead + AsyncWrite>(io: T) {","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16454956,"byte_end":16455012,"line_start":1001,"line_end":1001,"column_start":5,"column_end":61}},{"value":"/ # let _ =","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16455017,"byte_end":16455030,"line_start":1002,"line_end":1002,"column_start":5,"column_end":18}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16455035,"byte_end":16455070,"line_start":1003,"line_end":1003,"column_start":5,"column_end":40}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16455075,"byte_end":16455110,"line_start":1004,"line_end":1004,"column_start":5,"column_end":40}},{"value":"/     .new_framed(io);","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16455115,"byte_end":16455139,"line_start":1005,"line_end":1005,"column_start":5,"column_end":29}},{"value":"/ # }","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16455144,"byte_end":16455151,"line_start":1006,"line_end":1006,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16455156,"byte_end":16455178,"line_start":1007,"line_end":1007,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16455183,"byte_end":16455190,"line_start":1008,"line_end":1008,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1021},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16455712,"byte_end":16455719,"line_start":1028,"line_end":1028,"column_start":8,"column_end":15},"name":"default","qualname":"<Builder as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3241},"children":[],"decl_id":{"krate":2,"index":3242},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1023},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16455863,"byte_end":16455866,"line_start":1036,"line_end":1036,"column_start":8,"column_end":11},"name":"fmt","qualname":"<LengthDelimitedCodecError as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10286},"children":[],"decl_id":{"krate":2,"index":10287},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1025},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16456046,"byte_end":16456049,"line_start":1042,"line_end":1042,"column_start":8,"column_end":11},"name":"fmt","qualname":"<LengthDelimitedCodecError as std::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10293},"children":[],"decl_id":{"krate":2,"index":10294},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1243},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16456591,"byte_end":16456601,"line_start":12,"line_end":12,"column_start":12,"column_end":22},"name":"LinesCodec","qualname":"::codec::lines_codec::LinesCodec","value":"LinesCodec {  }","parent":null,"children":[{"krate":0,"index":1244},{"krate":0,"index":1245},{"krate":0,"index":1246}],"decl_id":null,"docs":" A simple [`Decoder`] and [`Encoder`] implementation that splits up data into lines.","sig":null,"attributes":[{"value":"/ A simple [`Decoder`] and [`Encoder`] implementation that splits up data into lines.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16456348,"byte_end":16456435,"line_start":7,"line_end":7,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16456436,"byte_end":16456439,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16456440,"byte_end":16456478,"line_start":9,"line_end":9,"column_start":1,"column_end":39}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16456479,"byte_end":16456517,"line_start":10,"line_end":10,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1068},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16457701,"byte_end":16457704,"line_start":40,"line_end":40,"column_start":12,"column_end":15},"name":"new","qualname":"<LinesCodec>::new","value":"fn new() -> LinesCodec","parent":null,"children":[],"decl_id":null,"docs":" Returns a `LinesCodec` for splitting up data into lines.","sig":null,"attributes":[{"value":"/ Returns a `LinesCodec` for splitting up data into lines.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16457282,"byte_end":16457342,"line_start":31,"line_end":31,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16457347,"byte_end":16457350,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16457355,"byte_end":16457365,"line_start":33,"line_end":33,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16457370,"byte_end":16457373,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ The returned `LinesCodec` will not have an upper bound on the length","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16457378,"byte_end":16457450,"line_start":35,"line_end":35,"column_start":5,"column_end":77}},{"value":"/ of a buffered line. See the documentation for [`new_with_max_length`]","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16457455,"byte_end":16457528,"line_start":36,"line_end":36,"column_start":5,"column_end":78}},{"value":"/ for information on why this could be a potential security risk.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16457533,"byte_end":16457600,"line_start":37,"line_end":37,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16457605,"byte_end":16457608,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ [`new_with_max_length`]: crate::codec::LinesCodec::new_with_max_length()","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16457613,"byte_end":16457689,"line_start":39,"line_end":39,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":1069},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16458835,"byte_end":16458854,"line_start":66,"line_end":66,"column_start":12,"column_end":31},"name":"new_with_max_length","qualname":"<LinesCodec>::new_with_max_length","value":"fn new_with_max_length(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a `LinesCodec` with a maximum line length limit.","sig":null,"attributes":[{"value":"/ Returns a `LinesCodec` with a maximum line length limit.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16457862,"byte_end":16457922,"line_start":48,"line_end":48,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16457927,"byte_end":16457930,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ If this is set, calls to `LinesCodec::decode` will return a","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16457935,"byte_end":16457998,"line_start":50,"line_end":50,"column_start":5,"column_end":68}},{"value":"/ [`LinesCodecError`] when a line exceeds the length limit. Subsequent calls","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16458003,"byte_end":16458081,"line_start":51,"line_end":51,"column_start":5,"column_end":83}},{"value":"/ will discard up to `limit` bytes from that line until a newline","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16458086,"byte_end":16458153,"line_start":52,"line_end":52,"column_start":5,"column_end":72}},{"value":"/ character is reached, returning `None` until the line over the limit","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16458158,"byte_end":16458230,"line_start":53,"line_end":53,"column_start":5,"column_end":77}},{"value":"/ has been fully discarded. After that point, calls to `decode` will","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16458235,"byte_end":16458305,"line_start":54,"line_end":54,"column_start":5,"column_end":75}},{"value":"/ function as normal.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16458310,"byte_end":16458333,"line_start":55,"line_end":55,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16458338,"byte_end":16458341,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16458346,"byte_end":16458356,"line_start":57,"line_end":57,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16458361,"byte_end":16458364,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ Setting a length limit is highly recommended for any `LinesCodec` which","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16458369,"byte_end":16458444,"line_start":59,"line_end":59,"column_start":5,"column_end":80}},{"value":"/ will be exposed to untrusted input. Otherwise, the size of the buffer","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16458449,"byte_end":16458522,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/ that holds the line currently being read is unbounded. An attacker could","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16458527,"byte_end":16458603,"line_start":61,"line_end":61,"column_start":5,"column_end":81}},{"value":"/ exploit this unbounded buffer by sending an unbounded amount of input","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16458608,"byte_end":16458681,"line_start":62,"line_end":62,"column_start":5,"column_end":78}},{"value":"/ without any `\\n` characters, causing unbounded memory consumption.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16458686,"byte_end":16458756,"line_start":63,"line_end":63,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16458761,"byte_end":16458764,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ [`LinesCodecError`]: crate::codec::LinesCodecError","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16458769,"byte_end":16458823,"line_start":65,"line_end":65,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1070},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16459420,"byte_end":16459430,"line_start":88,"line_end":88,"column_start":12,"column_end":22},"name":"max_length","qualname":"<LinesCodec>::max_length","value":"fn max_length<'_>(&'_ Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum line length when decoding.","sig":null,"attributes":[{"value":"/ Returns the maximum line length when decoding.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16458982,"byte_end":16459032,"line_start":73,"line_end":73,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16459037,"byte_end":16459040,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16459045,"byte_end":16459052,"line_start":75,"line_end":75,"column_start":5,"column_end":12}},{"value":"/ use std::usize;","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16459057,"byte_end":16459076,"line_start":76,"line_end":76,"column_start":5,"column_end":24}},{"value":"/ use tokio_util::codec::LinesCodec;","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16459081,"byte_end":16459119,"line_start":77,"line_end":77,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16459124,"byte_end":16459127,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ let codec = LinesCodec::new();","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16459132,"byte_end":16459166,"line_start":79,"line_end":79,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(codec.max_length(), usize::MAX);","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16459171,"byte_end":16459218,"line_start":80,"line_end":80,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16459223,"byte_end":16459230,"line_start":81,"line_end":81,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16459235,"byte_end":16459242,"line_start":82,"line_end":82,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::LinesCodec;","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16459247,"byte_end":16459285,"line_start":83,"line_end":83,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16459290,"byte_end":16459293,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ let codec = LinesCodec::new_with_max_length(256);","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16459298,"byte_end":16459351,"line_start":85,"line_end":85,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(codec.max_length(), 256);","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16459356,"byte_end":16459396,"line_start":86,"line_end":86,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16459401,"byte_end":16459408,"line_start":87,"line_end":87,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1077},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16459896,"byte_end":16459902,"line_start":110,"line_end":110,"column_start":8,"column_end":14},"name":"decode","qualname":"<LinesCodec as codec::decoder::Decoder>::decode","value":"fn decode<'_, '_>(&'_ mut Self, &'_ mut BytesMut)\n-> Result<Option<String>, LinesCodecError>","parent":{"krate":0,"index":511},"children":[],"decl_id":{"krate":0,"index":514},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1079},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16462514,"byte_end":16462524,"line_start":166,"line_end":166,"column_start":8,"column_end":18},"name":"decode_eof","qualname":"<LinesCodec as codec::decoder::Decoder>::decode_eof","value":"fn decode_eof<'_, '_>(&'_ mut Self, &'_ mut BytesMut)\n-> Result<Option<String>, LinesCodecError>","parent":{"krate":0,"index":511},"children":[],"decl_id":{"krate":0,"index":515},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1083},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16463283,"byte_end":16463289,"line_start":191,"line_end":191,"column_start":8,"column_end":14},"name":"encode","qualname":"<LinesCodec as codec::encoder::Encoder>::encode","value":"fn encode<'_, '_>(&'_ mut Self, T, &'_ mut BytesMut)\n-> Result<(), LinesCodecError>","parent":{"krate":0,"index":528},"children":[],"decl_id":{"krate":0,"index":531},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1085},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16463556,"byte_end":16463563,"line_start":201,"line_end":201,"column_start":8,"column_end":15},"name":"default","qualname":"<LinesCodec as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3241},"children":[],"decl_id":{"krate":2,"index":3242},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1266},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16463756,"byte_end":16463777,"line_start":210,"line_end":210,"column_start":5,"column_end":26},"name":"MaxLineLengthExceeded","qualname":"::codec::lines_codec::LinesCodecError::MaxLineLengthExceeded","value":"LinesCodecError::MaxLineLengthExceeded","parent":{"krate":0,"index":1265},"children":[],"decl_id":null,"docs":" The maximum line length was exceeded.\n","sig":null,"attributes":[{"value":"/ The maximum line length was exceeded.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16463710,"byte_end":16463751,"line_start":209,"line_end":209,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1268},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16463813,"byte_end":16463815,"line_start":212,"line_end":212,"column_start":5,"column_end":7},"name":"Io","qualname":"::codec::lines_codec::LinesCodecError::Io","value":"LinesCodecError::Io(io::Error)","parent":{"krate":0,"index":1265},"children":[],"decl_id":null,"docs":" An IO error occurred.\n","sig":null,"attributes":[{"value":"/ An IO error occurred.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16463783,"byte_end":16463808,"line_start":211,"line_end":211,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":1270},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16463816,"byte_end":16463825,"line_start":212,"line_end":212,"column_start":8,"column_end":17},"name":"0","qualname":"::codec::lines_codec::LinesCodecError::Io::0","value":"std::io::Error","parent":{"krate":0,"index":1268},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1265},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16463688,"byte_end":16463703,"line_start":208,"line_end":208,"column_start":10,"column_end":25},"name":"LinesCodecError","qualname":"::codec::lines_codec::LinesCodecError","value":"enum LinesCodecError { MaxLineLengthExceeded, Io(io::Error), }","parent":null,"children":[{"krate":0,"index":1266},{"krate":0,"index":1268}],"decl_id":null,"docs":" An error occurred while encoding or decoding a line.\n","sig":null,"attributes":[{"value":"/ An error occurred while encoding or decoding a line.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16463605,"byte_end":16463661,"line_start":206,"line_end":206,"column_start":1,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1087},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16463878,"byte_end":16463881,"line_start":216,"line_end":216,"column_start":8,"column_end":11},"name":"fmt","qualname":"<LinesCodecError as std::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10293},"children":[],"decl_id":{"krate":2,"index":10294},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1089},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16464175,"byte_end":16464179,"line_start":225,"line_end":225,"column_start":8,"column_end":12},"name":"from","qualname":"<LinesCodecError as std::convert::From>::from","value":"fn from(io::Error) -> LinesCodecError","parent":{"krate":2,"index":3169},"children":[],"decl_id":{"krate":2,"index":3171},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1273},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16465737,"byte_end":16465754,"line_start":41,"line_end":41,"column_start":12,"column_end":29},"name":"AnyDelimiterCodec","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodec","value":"AnyDelimiterCodec {  }","parent":null,"children":[{"krate":0,"index":1274},{"krate":0,"index":1275},{"krate":0,"index":1276},{"krate":0,"index":1277},{"krate":0,"index":1278}],"decl_id":null,"docs":" A simple [`Decoder`] and [`Encoder`] implementation that splits up data into chunks based on any character in the given delimiter string.","sig":null,"attributes":[{"value":"/ A simple [`Decoder`] and [`Encoder`] implementation that splits up data into chunks based on any character in the given delimiter string.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16464551,"byte_end":16464692,"line_start":9,"line_end":9,"column_start":1,"column_end":142}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16464693,"byte_end":16464696,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16464697,"byte_end":16464735,"line_start":11,"line_end":11,"column_start":1,"column_end":39}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16464736,"byte_end":16464774,"line_start":12,"line_end":12,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16464775,"byte_end":16464778,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16464779,"byte_end":16464792,"line_start":14,"line_end":14,"column_start":1,"column_end":14}},{"value":"/ Decode string of bytes containing various different delimiters.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16464793,"byte_end":16464860,"line_start":15,"line_end":15,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16464861,"byte_end":16464864,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ [`BytesMut`]: bytes::BytesMut","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16464865,"byte_end":16464898,"line_start":17,"line_end":17,"column_start":1,"column_end":34}},{"value":"/ [`Error`]: std::io::Error","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16464899,"byte_end":16464928,"line_start":18,"line_end":18,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16464929,"byte_end":16464932,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16464933,"byte_end":16464940,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::codec::{AnyDelimiterCodec, Decoder};","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16464941,"byte_end":16464997,"line_start":21,"line_end":21,"column_start":1,"column_end":57}},{"value":"/ use bytes::{BufMut, BytesMut};","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16464998,"byte_end":16465032,"line_start":22,"line_end":22,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16465033,"byte_end":16465036,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ #","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16465037,"byte_end":16465042,"line_start":24,"line_end":24,"column_start":1,"column_end":6}},{"value":"/ # #[tokio::main(flavor = \"current_thread\")]","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16465043,"byte_end":16465090,"line_start":25,"line_end":25,"column_start":1,"column_end":48}},{"value":"/ # async fn main() -> Result<(), std::io::Error> {","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16465091,"byte_end":16465144,"line_start":26,"line_end":26,"column_start":1,"column_end":54}},{"value":"/ let mut codec = AnyDelimiterCodec::new(b\",;\\r\\n\".to_vec(),b\";\".to_vec());","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16465145,"byte_end":16465222,"line_start":27,"line_end":27,"column_start":1,"column_end":78}},{"value":"/ let buf = &mut BytesMut::new();","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16465223,"byte_end":16465258,"line_start":28,"line_end":28,"column_start":1,"column_end":36}},{"value":"/ buf.reserve(200);","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16465259,"byte_end":16465280,"line_start":29,"line_end":29,"column_start":1,"column_end":22}},{"value":"/ buf.put_slice(b\"chunk 1,chunk 2;chunk 3\\n\\r\");","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16465281,"byte_end":16465331,"line_start":30,"line_end":30,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(\"chunk 1\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16465332,"byte_end":16465395,"line_start":31,"line_end":31,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(\"chunk 2\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16465396,"byte_end":16465459,"line_start":32,"line_end":32,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(\"chunk 3\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16465460,"byte_end":16465523,"line_start":33,"line_end":33,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(\"\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16465524,"byte_end":16465580,"line_start":34,"line_end":34,"column_start":1,"column_end":57}},{"value":"/ assert_eq!(None, codec.decode(buf).unwrap());","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16465581,"byte_end":16465630,"line_start":35,"line_end":35,"column_start":1,"column_end":50}},{"value":"/ # Ok(())","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16465631,"byte_end":16465643,"line_start":36,"line_end":36,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16465644,"byte_end":16465651,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16465652,"byte_end":16465659,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16465660,"byte_end":16465663,"line_start":39,"line_end":39,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":1137},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16467089,"byte_end":16467092,"line_start":75,"line_end":75,"column_start":12,"column_end":15},"name":"new","qualname":"<AnyDelimiterCodec>::new","value":"fn new(Vec<u8>, Vec<u8>) -> AnyDelimiterCodec","parent":null,"children":[],"decl_id":null,"docs":" Returns a `AnyDelimiterCodec` for splitting up data into chunks.","sig":null,"attributes":[{"value":"/ Returns a `AnyDelimiterCodec` for splitting up data into chunks.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16466647,"byte_end":16466715,"line_start":66,"line_end":66,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16466720,"byte_end":16466723,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16466728,"byte_end":16466738,"line_start":68,"line_end":68,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16466743,"byte_end":16466746,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ The returned `AnyDelimiterCodec` will not have an upper bound on the length","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16466751,"byte_end":16466830,"line_start":70,"line_end":70,"column_start":5,"column_end":84}},{"value":"/ of a buffered chunk. See the documentation for [`new_with_max_length`]","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16466835,"byte_end":16466909,"line_start":71,"line_end":71,"column_start":5,"column_end":79}},{"value":"/ for information on why this could be a potential security risk.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16466914,"byte_end":16466981,"line_start":72,"line_end":72,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16466986,"byte_end":16466989,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ [`new_with_max_length`]: crate::codec::AnyDelimiterCodec::new_with_max_length()","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16466994,"byte_end":16467077,"line_start":74,"line_end":74,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1138},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16468403,"byte_end":16468422,"line_start":103,"line_end":103,"column_start":12,"column_end":31},"name":"new_with_max_length","qualname":"<AnyDelimiterCodec>::new_with_max_length","value":"fn new_with_max_length(Vec<u8>, Vec<u8>, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a `AnyDelimiterCodec` with a maximum chunk length limit.","sig":null,"attributes":[{"value":"/ Returns a `AnyDelimiterCodec` with a maximum chunk length limit.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16467372,"byte_end":16467440,"line_start":85,"line_end":85,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16467445,"byte_end":16467448,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ If this is set, calls to `AnyDelimiterCodec::decode` will return a","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16467453,"byte_end":16467523,"line_start":87,"line_end":87,"column_start":5,"column_end":75}},{"value":"/ [`AnyDelimiterCodecError`] when a chunk exceeds the length limit. Subsequent calls","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16467528,"byte_end":16467614,"line_start":88,"line_end":88,"column_start":5,"column_end":91}},{"value":"/ will discard up to `limit` bytes from that chunk until a delimiter","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16467619,"byte_end":16467689,"line_start":89,"line_end":89,"column_start":5,"column_end":75}},{"value":"/ character is reached, returning `None` until the delimiter over the limit","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16467694,"byte_end":16467771,"line_start":90,"line_end":90,"column_start":5,"column_end":82}},{"value":"/ has been fully discarded. After that point, calls to `decode` will","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16467776,"byte_end":16467846,"line_start":91,"line_end":91,"column_start":5,"column_end":75}},{"value":"/ function as normal.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16467851,"byte_end":16467874,"line_start":92,"line_end":92,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16467879,"byte_end":16467882,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16467887,"byte_end":16467897,"line_start":94,"line_end":94,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16467902,"byte_end":16467905,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ Setting a length limit is highly recommended for any `AnyDelimiterCodec` which","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16467910,"byte_end":16467992,"line_start":96,"line_end":96,"column_start":5,"column_end":87}},{"value":"/ will be exposed to untrusted input. Otherwise, the size of the buffer","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16467997,"byte_end":16468070,"line_start":97,"line_end":97,"column_start":5,"column_end":78}},{"value":"/ that holds the chunk currently being read is unbounded. An attacker could","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16468075,"byte_end":16468152,"line_start":98,"line_end":98,"column_start":5,"column_end":82}},{"value":"/ exploit this unbounded buffer by sending an unbounded amount of input","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16468157,"byte_end":16468230,"line_start":99,"line_end":99,"column_start":5,"column_end":78}},{"value":"/ without any delimiter characters, causing unbounded memory consumption.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16468235,"byte_end":16468310,"line_start":100,"line_end":100,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16468315,"byte_end":16468318,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ [`AnyDelimiterCodecError`]: crate::codec::AnyDelimiterCodecError","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16468323,"byte_end":16468391,"line_start":102,"line_end":102,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1139},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16469210,"byte_end":16469220,"line_start":129,"line_end":129,"column_start":12,"column_end":22},"name":"max_length","qualname":"<AnyDelimiterCodec>::max_length","value":"fn max_length<'_>(&'_ Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum chunk length when decoding.","sig":null,"attributes":[{"value":"/ Returns the maximum chunk length when decoding.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16468679,"byte_end":16468730,"line_start":114,"line_end":114,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16468735,"byte_end":16468738,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16468743,"byte_end":16468750,"line_start":116,"line_end":116,"column_start":5,"column_end":12}},{"value":"/ use std::usize;","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16468755,"byte_end":16468774,"line_start":117,"line_end":117,"column_start":5,"column_end":24}},{"value":"/ use tokio_util::codec::AnyDelimiterCodec;","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16468779,"byte_end":16468824,"line_start":118,"line_end":118,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16468829,"byte_end":16468832,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ let codec = AnyDelimiterCodec::new(b\",;\\n\".to_vec(), b\";\".to_vec());","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16468837,"byte_end":16468909,"line_start":120,"line_end":120,"column_start":5,"column_end":77}},{"value":"/ assert_eq!(codec.max_length(), usize::MAX);","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16468914,"byte_end":16468961,"line_start":121,"line_end":121,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16468966,"byte_end":16468973,"line_start":122,"line_end":122,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16468978,"byte_end":16468985,"line_start":123,"line_end":123,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::AnyDelimiterCodec;","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16468990,"byte_end":16469035,"line_start":124,"line_end":124,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16469040,"byte_end":16469043,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ let codec = AnyDelimiterCodec::new_with_max_length(b\",;\\n\".to_vec(), b\";\".to_vec(), 256);","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16469048,"byte_end":16469141,"line_start":126,"line_end":126,"column_start":5,"column_end":98}},{"value":"/ assert_eq!(codec.max_length(), 256);","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16469146,"byte_end":16469186,"line_start":127,"line_end":127,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16469191,"byte_end":16469198,"line_start":128,"line_end":128,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1143},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16469381,"byte_end":16469387,"line_start":138,"line_end":138,"column_start":8,"column_end":14},"name":"decode","qualname":"<AnyDelimiterCodec as codec::decoder::Decoder>::decode","value":"fn decode<'_, '_>(&'_ mut Self, &'_ mut BytesMut)\n-> Result<Option<Bytes>, AnyDelimiterCodecError>","parent":{"krate":0,"index":511},"children":[],"decl_id":{"krate":0,"index":514},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1146},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16472057,"byte_end":16472067,"line_start":195,"line_end":195,"column_start":8,"column_end":18},"name":"decode_eof","qualname":"<AnyDelimiterCodec as codec::decoder::Decoder>::decode_eof","value":"fn decode_eof<'_, '_>(&'_ mut Self, &'_ mut BytesMut)\n-> Result<Option<Bytes>, AnyDelimiterCodecError>","parent":{"krate":0,"index":511},"children":[],"decl_id":{"krate":0,"index":515},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1150},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16472692,"byte_end":16472698,"line_start":218,"line_end":218,"column_start":8,"column_end":14},"name":"encode","qualname":"<AnyDelimiterCodec as codec::encoder::Encoder>::encode","value":"fn encode<'_, '_>(&'_ mut Self, T, &'_ mut BytesMut)\n-> Result<(), AnyDelimiterCodecError>","parent":{"krate":0,"index":528},"children":[],"decl_id":{"krate":0,"index":531},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1152},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16473006,"byte_end":16473013,"line_start":229,"line_end":229,"column_start":8,"column_end":15},"name":"default","qualname":"<AnyDelimiterCodec as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3241},"children":[],"decl_id":{"krate":2,"index":3242},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1298},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16473316,"byte_end":16473338,"line_start":241,"line_end":241,"column_start":5,"column_end":27},"name":"MaxChunkLengthExceeded","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodecError::MaxChunkLengthExceeded","value":"AnyDelimiterCodecError::MaxChunkLengthExceeded","parent":{"krate":0,"index":1297},"children":[],"decl_id":null,"docs":" The maximum chunk length was exceeded.\n","sig":null,"attributes":[{"value":"/ The maximum chunk length was exceeded.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16473269,"byte_end":16473311,"line_start":240,"line_end":240,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1300},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16473374,"byte_end":16473376,"line_start":243,"line_end":243,"column_start":5,"column_end":7},"name":"Io","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodecError::Io","value":"AnyDelimiterCodecError::Io(io::Error)","parent":{"krate":0,"index":1297},"children":[],"decl_id":null,"docs":" An IO error occurred.\n","sig":null,"attributes":[{"value":"/ An IO error occurred.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16473344,"byte_end":16473369,"line_start":242,"line_end":242,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":1302},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16473377,"byte_end":16473386,"line_start":243,"line_end":243,"column_start":8,"column_end":17},"name":"0","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodecError::Io::0","value":"std::io::Error","parent":{"krate":0,"index":1300},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1297},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16473240,"byte_end":16473262,"line_start":239,"line_end":239,"column_start":10,"column_end":32},"name":"AnyDelimiterCodecError","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodecError","value":"enum AnyDelimiterCodecError { MaxChunkLengthExceeded, Io(io::Error), }","parent":null,"children":[{"krate":0,"index":1298},{"krate":0,"index":1300}],"decl_id":null,"docs":" An error occurred while encoding or decoding a chunk.\n","sig":null,"attributes":[{"value":"/ An error occurred while encoding or decoding a chunk.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16473156,"byte_end":16473213,"line_start":237,"line_end":237,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1154},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16473446,"byte_end":16473449,"line_start":247,"line_end":247,"column_start":8,"column_end":11},"name":"fmt","qualname":"<AnyDelimiterCodecError as std::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10293},"children":[],"decl_id":{"krate":2,"index":10294},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1156},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16473797,"byte_end":16473801,"line_start":258,"line_end":258,"column_start":8,"column_end":12},"name":"from","qualname":"<AnyDelimiterCodecError as std::convert::From>::from","value":"fn from(io::Error) -> AnyDelimiterCodecError","parent":{"krate":2,"index":3169},"children":[],"decl_id":{"krate":2,"index":3171},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":14},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sync","qualname":"::sync","value":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mod.rs","parent":null,"children":[{"krate":0,"index":15},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":109},{"krate":0,"index":112},{"krate":0,"index":115},{"krate":0,"index":179},{"krate":0,"index":180},{"krate":0,"index":183},{"krate":0,"index":186},{"krate":0,"index":246},{"krate":0,"index":249},{"krate":0,"index":337}],"decl_id":null,"docs":" Synchronization primitives\n","sig":null,"attributes":[{"value":"/ Synchronization primitives","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mod.rs","byte_start":7047,"byte_end":7077,"line_start":1,"line_end":1,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":1305},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token/guard.rs","byte_start":14516,"byte_end":14525,"line_start":6,"line_end":6,"column_start":12,"column_end":21},"name":"DropGuard","qualname":"::sync::cancellation_token::guard::DropGuard","value":"DropGuard {  }","parent":null,"children":[{"krate":0,"index":1306}],"decl_id":null,"docs":" A wrapper for cancellation token which automatically cancels\n it on drop. It is created using `drop_guard` method on the `CancellationToken`.\n","sig":null,"attributes":[{"value":"/ A wrapper for cancellation token which automatically cancels","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token/guard.rs","byte_start":14339,"byte_end":14403,"line_start":3,"line_end":3,"column_start":1,"column_end":65}},{"value":"/ it on drop. It is created using `drop_guard` method on the `CancellationToken`.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token/guard.rs","byte_start":14404,"byte_end":14487,"line_start":4,"line_end":4,"column_start":1,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":21},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token/guard.rs","byte_start":14788,"byte_end":14794,"line_start":14,"line_end":14,"column_start":12,"column_end":18},"name":"disarm","qualname":"<DropGuard>::disarm","value":"fn disarm(Self) -> CancellationToken","parent":null,"children":[],"decl_id":null,"docs":" Returns stored cancellation token and removes this drop guard instance\n (i.e. it will no longer cancel token). Other guards for this token\n are not affected.\n","sig":null,"attributes":[{"value":"/ Returns stored cancellation token and removes this drop guard instance","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token/guard.rs","byte_start":14601,"byte_end":14675,"line_start":11,"line_end":11,"column_start":5,"column_end":79}},{"value":"/ (i.e. it will no longer cancel token). Other guards for this token","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token/guard.rs","byte_start":14680,"byte_end":14750,"line_start":12,"line_end":12,"column_start":5,"column_end":75}},{"value":"/ are not affected.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token/guard.rs","byte_start":14755,"byte_end":14776,"line_start":13,"line_end":13,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":23},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token/guard.rs","byte_start":14973,"byte_end":14977,"line_start":22,"line_end":22,"column_start":8,"column_end":12},"name":"drop","qualname":"<DropGuard as std::ops::Drop>::drop","value":"fn drop<'_>(&'_ mut Self)","parent":{"krate":2,"index":3510},"children":[],"decl_id":{"krate":2,"index":3511},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":81},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":8927,"byte_end":8944,"line_start":54,"line_end":54,"column_start":12,"column_end":29},"name":"CancellationToken","qualname":"::sync::cancellation_token::CancellationToken","value":"CancellationToken {  }","parent":null,"children":[{"krate":0,"index":82}],"decl_id":null,"docs":" A token which can be used to signal a cancellation request to one or more\n tasks.","sig":null,"attributes":[{"value":"/ A token which can be used to signal a cancellation request to one or more","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":7705,"byte_end":7782,"line_start":14,"line_end":14,"column_start":1,"column_end":78}},{"value":"/ tasks.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":7783,"byte_end":7793,"line_start":15,"line_end":15,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":7794,"byte_end":7797,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Tasks can call [`CancellationToken::cancelled()`] in order to","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":7798,"byte_end":7863,"line_start":17,"line_end":17,"column_start":1,"column_end":66}},{"value":"/ obtain a Future which will be resolved when cancellation is requested.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":7864,"byte_end":7938,"line_start":18,"line_end":18,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":7939,"byte_end":7942,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Cancellation can be requested through the [`CancellationToken::cancel`] method.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":7943,"byte_end":8026,"line_start":20,"line_end":20,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":8027,"byte_end":8030,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":8031,"byte_end":8045,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":8046,"byte_end":8049,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":8050,"byte_end":8063,"line_start":24,"line_end":24,"column_start":1,"column_end":14}},{"value":"/ use tokio::select;","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":8064,"byte_end":8086,"line_start":25,"line_end":25,"column_start":1,"column_end":23}},{"value":"/ use tokio_util::sync::CancellationToken;","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":8087,"byte_end":8131,"line_start":26,"line_end":26,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":8132,"byte_end":8135,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":8136,"byte_end":8154,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":8155,"byte_end":8176,"line_start":29,"line_end":29,"column_start":1,"column_end":22}},{"value":"/     let token = CancellationToken::new();","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":8177,"byte_end":8222,"line_start":30,"line_end":30,"column_start":1,"column_end":46}},{"value":"/     let cloned_token = token.clone();","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":8223,"byte_end":8264,"line_start":31,"line_end":31,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":8265,"byte_end":8268,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/     let join_handle = tokio::spawn(async move {","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":8269,"byte_end":8320,"line_start":33,"line_end":33,"column_start":1,"column_end":52}},{"value":"/         // Wait for either cancellation or a very long time","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":8321,"byte_end":8384,"line_start":34,"line_end":34,"column_start":1,"column_end":64}},{"value":"/         select! {","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":8385,"byte_end":8406,"line_start":35,"line_end":35,"column_start":1,"column_end":22}},{"value":"/             _ = cloned_token.cancelled() => {","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":8407,"byte_end":8456,"line_start":36,"line_end":36,"column_start":1,"column_end":50}},{"value":"/                 // The token was cancelled","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":8457,"byte_end":8503,"line_start":37,"line_end":37,"column_start":1,"column_end":47}},{"value":"/                 5","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":8504,"byte_end":8525,"line_start":38,"line_end":38,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":8526,"byte_end":8543,"line_start":39,"line_end":39,"column_start":1,"column_end":18}},{"value":"/             _ = tokio::time::sleep(std::time::Duration::from_secs(9999)) => {","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":8544,"byte_end":8625,"line_start":40,"line_end":40,"column_start":1,"column_end":82}},{"value":"/                 99","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":8626,"byte_end":8648,"line_start":41,"line_end":41,"column_start":1,"column_end":23}},{"value":"/             }","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":8649,"byte_end":8666,"line_start":42,"line_end":42,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":8667,"byte_end":8680,"line_start":43,"line_end":43,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":8681,"byte_end":8692,"line_start":44,"line_end":44,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":8693,"byte_end":8696,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":8697,"byte_end":8730,"line_start":46,"line_end":46,"column_start":1,"column_end":34}},{"value":"/         tokio::time::sleep(std::time::Duration::from_millis(10)).await;","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":8731,"byte_end":8806,"line_start":47,"line_end":47,"column_start":1,"column_end":76}},{"value":"/         token.cancel();","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":8807,"byte_end":8834,"line_start":48,"line_end":48,"column_start":1,"column_end":28}},{"value":"/     });","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":8835,"byte_end":8846,"line_start":49,"line_end":49,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":8847,"byte_end":8850,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(5, join_handle.await.unwrap());","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":8851,"byte_end":8901,"line_start":51,"line_end":51,"column_start":1,"column_end":51}},{"value":"/ }","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":8902,"byte_end":8907,"line_start":52,"line_end":52,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":8908,"byte_end":8915,"line_start":53,"line_end":53,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1309},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":9171,"byte_end":9196,"line_start":62,"line_end":62,"column_start":16,"column_end":41},"name":"WaitForCancellationFuture","qualname":"::sync::cancellation_token::WaitForCancellationFuture","value":"WaitForCancellationFuture {  }","parent":null,"children":[{"krate":0,"index":1311},{"krate":0,"index":1312}],"decl_id":null,"docs":" A Future that is resolved once the corresponding [`CancellationToken`]\n is cancelled.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14370100,"byte_end":14370109,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":9422,"byte_end":9425,"line_start":72,"line_end":72,"column_start":8,"column_end":11},"name":"fmt","qualname":"<CancellationToken as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut core::fmt::Formatter)\n-> core::fmt::Result","parent":{"krate":2,"index":10286},"children":[],"decl_id":{"krate":2,"index":10287},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":9664,"byte_end":9669,"line_start":80,"line_end":80,"column_start":8,"column_end":13},"name":"clone","qualname":"<CancellationToken as std::clone::Clone>::clone","value":"fn clone<'_>(&'_ Self) -> Self","parent":{"krate":2,"index":2882},"children":[],"decl_id":{"krate":2,"index":2883},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":9872,"byte_end":9876,"line_start":89,"line_end":89,"column_start":8,"column_end":12},"name":"drop","qualname":"<CancellationToken as std::ops::Drop>::drop","value":"fn drop<'_>(&'_ mut Self)","parent":{"krate":2,"index":3510},"children":[],"decl_id":{"krate":2,"index":3511},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":90},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":10001,"byte_end":10008,"line_start":95,"line_end":95,"column_start":8,"column_end":15},"name":"default","qualname":"<CancellationToken as std::default::Default>::default","value":"fn default() -> CancellationToken","parent":{"krate":2,"index":3241},"children":[],"decl_id":{"krate":2,"index":3242},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":10180,"byte_end":10183,"line_start":102,"line_end":102,"column_start":12,"column_end":15},"name":"new","qualname":"<CancellationToken>::new","value":"fn new() -> CancellationToken","parent":null,"children":[],"decl_id":null,"docs":" Creates a new CancellationToken in the non-cancelled state.\n","sig":null,"attributes":[{"value":"/ Creates a new CancellationToken in the non-cancelled state.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":10105,"byte_end":10168,"line_start":101,"line_end":101,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":11582,"byte_end":11593,"line_start":146,"line_end":146,"column_start":12,"column_end":23},"name":"child_token","qualname":"<CancellationToken>::child_token","value":"fn child_token<'_>(&'_ Self) -> CancellationToken","parent":null,"children":[],"decl_id":null,"docs":" Creates a `CancellationToken` which will get cancelled whenever the\n current token gets cancelled.","sig":null,"attributes":[{"value":"/ Creates a `CancellationToken` which will get cancelled whenever the","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":10315,"byte_end":10386,"line_start":108,"line_end":108,"column_start":5,"column_end":76}},{"value":"/ current token gets cancelled.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":10391,"byte_end":10424,"line_start":109,"line_end":109,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":10429,"byte_end":10432,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ If the current token is already cancelled, the child token will get","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":10437,"byte_end":10508,"line_start":111,"line_end":111,"column_start":5,"column_end":76}},{"value":"/ returned in cancelled state.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":10513,"byte_end":10545,"line_start":112,"line_end":112,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":10550,"byte_end":10553,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":10558,"byte_end":10572,"line_start":114,"line_end":114,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":10577,"byte_end":10580,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":10585,"byte_end":10598,"line_start":116,"line_end":116,"column_start":5,"column_end":18}},{"value":"/ use tokio::select;","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":10603,"byte_end":10625,"line_start":117,"line_end":117,"column_start":5,"column_end":27}},{"value":"/ use tokio_util::sync::CancellationToken;","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":10630,"byte_end":10674,"line_start":118,"line_end":118,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":10679,"byte_end":10682,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":10687,"byte_end":10705,"line_start":120,"line_end":120,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":10710,"byte_end":10731,"line_start":121,"line_end":121,"column_start":5,"column_end":26}},{"value":"/     let token = CancellationToken::new();","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":10736,"byte_end":10781,"line_start":122,"line_end":122,"column_start":5,"column_end":50}},{"value":"/     let child_token = token.child_token();","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":10786,"byte_end":10832,"line_start":123,"line_end":123,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":10837,"byte_end":10840,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/     let join_handle = tokio::spawn(async move {","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":10845,"byte_end":10896,"line_start":125,"line_end":125,"column_start":5,"column_end":56}},{"value":"/         // Wait for either cancellation or a very long time","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":10901,"byte_end":10964,"line_start":126,"line_end":126,"column_start":5,"column_end":68}},{"value":"/         select! {","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":10969,"byte_end":10990,"line_start":127,"line_end":127,"column_start":5,"column_end":26}},{"value":"/             _ = child_token.cancelled() => {","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":10995,"byte_end":11043,"line_start":128,"line_end":128,"column_start":5,"column_end":53}},{"value":"/                 // The token was cancelled","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":11048,"byte_end":11094,"line_start":129,"line_end":129,"column_start":5,"column_end":51}},{"value":"/                 5","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":11099,"byte_end":11120,"line_start":130,"line_end":130,"column_start":5,"column_end":26}},{"value":"/             }","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":11125,"byte_end":11142,"line_start":131,"line_end":131,"column_start":5,"column_end":22}},{"value":"/             _ = tokio::time::sleep(std::time::Duration::from_secs(9999)) => {","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":11147,"byte_end":11228,"line_start":132,"line_end":132,"column_start":5,"column_end":86}},{"value":"/                 99","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":11233,"byte_end":11255,"line_start":133,"line_end":133,"column_start":5,"column_end":27}},{"value":"/             }","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":11260,"byte_end":11277,"line_start":134,"line_end":134,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":11282,"byte_end":11295,"line_start":135,"line_end":135,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":11300,"byte_end":11311,"line_start":136,"line_end":136,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":11316,"byte_end":11319,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":11324,"byte_end":11357,"line_start":138,"line_end":138,"column_start":5,"column_end":38}},{"value":"/         tokio::time::sleep(std::time::Duration::from_millis(10)).await;","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":11362,"byte_end":11437,"line_start":139,"line_end":139,"column_start":5,"column_end":80}},{"value":"/         token.cancel();","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":11442,"byte_end":11469,"line_start":140,"line_end":140,"column_start":5,"column_end":32}},{"value":"/     });","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":11474,"byte_end":11485,"line_start":141,"line_end":141,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":11490,"byte_end":11493,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(5, join_handle.await.unwrap());","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":11498,"byte_end":11548,"line_start":143,"line_end":143,"column_start":5,"column_end":55}},{"value":"/ }","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":11553,"byte_end":11558,"line_start":144,"line_end":144,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":11563,"byte_end":11570,"line_start":145,"line_end":145,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":12316,"byte_end":12322,"line_start":162,"line_end":162,"column_start":12,"column_end":18},"name":"cancel","qualname":"<CancellationToken>::cancel","value":"fn cancel<'_>(&'_ Self)","parent":null,"children":[],"decl_id":null,"docs":" Cancel the [`CancellationToken`] and all child tokens which had been\n derived from it.","sig":null,"attributes":[{"value":"/ Cancel the [`CancellationToken`] and all child tokens which had been","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":11728,"byte_end":11800,"line_start":152,"line_end":152,"column_start":5,"column_end":77}},{"value":"/ derived from it.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":11805,"byte_end":11825,"line_start":153,"line_end":153,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":11830,"byte_end":11833,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ This will wake up all tasks which are waiting for cancellation.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":11838,"byte_end":11905,"line_start":155,"line_end":155,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":11910,"byte_end":11913,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ Be aware that cancellation is not an atomic operation. It is possible","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":11918,"byte_end":11991,"line_start":157,"line_end":157,"column_start":5,"column_end":78}},{"value":"/ for another thread running in parallel with a call to `cancel` to first","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":11996,"byte_end":12071,"line_start":158,"line_end":158,"column_start":5,"column_end":80}},{"value":"/ receive `true` from `is_cancelled` on one child node, and then receive","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":12076,"byte_end":12150,"line_start":159,"line_end":159,"column_start":5,"column_end":79}},{"value":"/ `false` from `is_cancelled` on another child node. However, once the","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":12155,"byte_end":12227,"line_start":160,"line_end":160,"column_start":5,"column_end":77}},{"value":"/ call to `cancel` returns, all child nodes have been fully cancelled.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":12232,"byte_end":12304,"line_start":161,"line_end":161,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":95},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":12454,"byte_end":12466,"line_start":167,"line_end":167,"column_start":12,"column_end":24},"name":"is_cancelled","qualname":"<CancellationToken>::is_cancelled","value":"fn is_cancelled<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the `CancellationToken` is cancelled.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the `CancellationToken` is cancelled.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":12383,"byte_end":12442,"line_start":166,"line_end":166,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":12825,"byte_end":12834,"line_start":179,"line_end":179,"column_start":12,"column_end":21},"name":"cancelled","qualname":"<CancellationToken>::cancelled","value":"fn cancelled<'_>(&'_ Self) -> WaitForCancellationFuture","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Future` that gets fulfilled when cancellation is requested.","sig":null,"attributes":[{"value":"/ Returns a `Future` that gets fulfilled when cancellation is requested.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":12540,"byte_end":12614,"line_start":171,"line_end":171,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":12619,"byte_end":12622,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ The future will complete immediately if the token is already cancelled","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":12627,"byte_end":12701,"line_start":173,"line_end":173,"column_start":5,"column_end":79}},{"value":"/ when this method is called.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":12706,"byte_end":12737,"line_start":174,"line_end":174,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":12742,"byte_end":12745,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ # Cancel safety","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":12750,"byte_end":12769,"line_start":176,"line_end":176,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":12774,"byte_end":12777,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ This method is cancel safe.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":12782,"byte_end":12813,"line_start":178,"line_end":178,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":13178,"byte_end":13188,"line_start":190,"line_end":190,"column_start":12,"column_end":22},"name":"drop_guard","qualname":"<CancellationToken>::drop_guard","value":"fn drop_guard(Self) -> DropGuard","parent":null,"children":[],"decl_id":null,"docs":" Creates a `DropGuard` for this token.","sig":null,"attributes":[{"value":"/ Creates a `DropGuard` for this token.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":13015,"byte_end":13056,"line_start":186,"line_end":186,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":13061,"byte_end":13064,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ Returned guard will cancel this token (and all its children) on drop","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":13069,"byte_end":13141,"line_start":188,"line_end":188,"column_start":5,"column_end":77}},{"value":"/ unless disarmed.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":13146,"byte_end":13166,"line_start":189,"line_end":189,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":13375,"byte_end":13378,"line_start":198,"line_end":198,"column_start":8,"column_end":11},"name":"fmt","qualname":"<WaitForCancellationFuture as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut core::fmt::Formatter)\n-> core::fmt::Result","parent":{"krate":2,"index":10286},"children":[],"decl_id":{"krate":2,"index":10287},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":13595,"byte_end":13599,"line_start":206,"line_end":206,"column_start":8,"column_end":12},"name":"poll","qualname":"<WaitForCancellationFuture as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<()>","parent":{"krate":2,"index":13761},"children":[],"decl_id":{"krate":2,"index":13763},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1346},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":29593,"byte_end":29606,"line_start":12,"line_end":12,"column_start":12,"column_end":25},"name":"PollSendError","qualname":"::sync::mpsc::PollSendError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by the `PollSender` when the channel is closed.\n","sig":null,"attributes":[{"value":"/ Error returned by the `PollSender` when the channel is closed.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":29498,"byte_end":29564,"line_start":10,"line_end":10,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":147},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":29885,"byte_end":29895,"line_start":19,"line_end":19,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<PollSendError<T>>::into_inner","value":"fn into_inner(Self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the stored value, if any.","sig":null,"attributes":[{"value":"/ Consumes the stored value, if any.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":29654,"byte_end":29692,"line_start":15,"line_end":15,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":29697,"byte_end":29700,"line_start":16,"line_end":16,"column_start":5,"column_end":8}},{"value":"/ If this error was encountered when calling `start_send`/`send_item`, this will be the item","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":29705,"byte_end":29799,"line_start":17,"line_end":17,"column_start":5,"column_end":99}},{"value":"/ that the caller attempted to send.  Otherwise, it will be `None`.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":29804,"byte_end":29873,"line_start":18,"line_end":18,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":150},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":29992,"byte_end":29995,"line_start":25,"line_end":25,"column_start":8,"column_end":11},"name":"fmt","qualname":"<PollSendError<T> as std::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10293},"children":[],"decl_id":{"krate":2,"index":10294},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1368},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":30415,"byte_end":30425,"line_start":44,"line_end":44,"column_start":12,"column_end":22},"name":"PollSender","qualname":"::sync::mpsc::PollSender","value":"PollSender {  }","parent":null,"children":[{"krate":0,"index":1370},{"krate":0,"index":1371},{"krate":0,"index":1372}],"decl_id":null,"docs":" A wrapper around [`mpsc::Sender`] that can be polled.","sig":null,"attributes":[{"value":"/ A wrapper around [`mpsc::Sender`] that can be polled.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":30277,"byte_end":30334,"line_start":40,"line_end":40,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":30335,"byte_end":30338,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ [`mpsc::Sender`]: tokio::sync::mpsc::Sender","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":30339,"byte_end":30386,"line_start":42,"line_end":42,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":31329,"byte_end":31332,"line_start":69,"line_end":69,"column_start":12,"column_end":15},"name":"new","qualname":"<PollSender<T>>::new","value":"fn new(Sender<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `PollSender`.\n","sig":null,"attributes":[{"value":"/ Creates a new `PollSender`.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":31286,"byte_end":31317,"line_start":68,"line_end":68,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":162},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":32316,"byte_end":32328,"line_start":94,"line_end":94,"column_start":12,"column_end":24},"name":"poll_reserve","qualname":"<PollSender<T>>::poll_reserve","value":"fn poll_reserve<'_, '_, '_>(&'_ mut Self, &'_ mut Context)\n-> Poll<Result<(), PollSendError<T>>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to prepare the sender to receive a value.","sig":null,"attributes":[{"value":"/ Attempts to prepare the sender to receive a value.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":31655,"byte_end":31709,"line_start":81,"line_end":81,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":31714,"byte_end":31717,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ This method must be called and return `Poll::Ready(Ok(()))` prior to each call to","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":31722,"byte_end":31807,"line_start":83,"line_end":83,"column_start":5,"column_end":90}},{"value":"/ `send_item`.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":31812,"byte_end":31828,"line_start":84,"line_end":84,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":31833,"byte_end":31836,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ This method returns `Poll::Ready` once the underlying channel is ready to receive a value,","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":31841,"byte_end":31935,"line_start":86,"line_end":86,"column_start":5,"column_end":99}},{"value":"/ by reserving a slot in the channel for the item to be sent. If this method returns","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":31940,"byte_end":32026,"line_start":87,"line_end":87,"column_start":5,"column_end":91}},{"value":"/ `Poll::Pending`, the current task is registered to be notified (via","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":32031,"byte_end":32102,"line_start":88,"line_end":88,"column_start":5,"column_end":76}},{"value":"/ `cx.waker().wake_by_ref()`) when `poll_reserve` should be called again.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":32107,"byte_end":32182,"line_start":89,"line_end":89,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":32187,"byte_end":32190,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":32195,"byte_end":32207,"line_start":91,"line_end":91,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":32212,"byte_end":32215,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ If the channel is closed, an error will be returned.  This is a permanent state.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":32220,"byte_end":32304,"line_start":93,"line_end":93,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":163},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":34353,"byte_end":34362,"line_start":140,"line_end":140,"column_start":12,"column_end":21},"name":"send_item","qualname":"<PollSender<T>>::send_item","value":"fn send_item<'_>(&'_ mut Self, T) -> Result<(), PollSendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Sends an item to the channel.","sig":null,"attributes":[{"value":"/ Sends an item to the channel.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":33873,"byte_end":33906,"line_start":126,"line_end":126,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":33911,"byte_end":33914,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ Before calling `send_item`, `poll_reserve` must be called with a successful return","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":33919,"byte_end":34005,"line_start":128,"line_end":128,"column_start":5,"column_end":91}},{"value":"/ value of `Poll::Ready(Ok(()))`.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":34010,"byte_end":34045,"line_start":129,"line_end":129,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":34050,"byte_end":34053,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":34058,"byte_end":34070,"line_start":131,"line_end":131,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":34075,"byte_end":34078,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ If the channel is closed, an error will be returned.  This is a permanent state.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":34083,"byte_end":34167,"line_start":133,"line_end":133,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":34172,"byte_end":34175,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":34180,"byte_end":34192,"line_start":135,"line_end":135,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":34197,"byte_end":34200,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ If `poll_reserve` was not successfully called prior to calling `send_item`, then this method","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":34205,"byte_end":34301,"line_start":137,"line_end":137,"column_start":5,"column_end":101}},{"value":"/ will panic.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":34306,"byte_end":34321,"line_start":138,"line_end":138,"column_start":5,"column_end":20}},{"value":"track_caller","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":34326,"byte_end":34341,"line_start":139,"line_end":139,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":35381,"byte_end":35390,"line_start":163,"line_end":163,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<PollSender<T>>::is_closed","value":"fn is_closed<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether this sender is been closed.","sig":null,"attributes":[{"value":"/ Checks whether this sender is been closed.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":35235,"byte_end":35281,"line_start":160,"line_end":160,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":35286,"byte_end":35289,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ The underlying channel that this sender was wrapping may still be open.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":35294,"byte_end":35369,"line_start":162,"line_end":162,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":165},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":35712,"byte_end":35719,"line_start":171,"line_end":171,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<PollSender<T>>::get_ref","value":"fn get_ref<'_>(&'_ Self) -> Option<&'_ Sender<T>>","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the `Sender` of the underlying channel.","sig":null,"attributes":[{"value":"/ Gets a reference to the `Sender` of the underlying channel.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":35488,"byte_end":35551,"line_start":167,"line_end":167,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":35556,"byte_end":35559,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ If `PollSender` has been closed, `None` is returned. The underlying channel that this sender","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":35564,"byte_end":35660,"line_start":169,"line_end":169,"column_start":5,"column_end":101}},{"value":"/ was wrapping may still be open.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":35665,"byte_end":35700,"line_start":170,"line_end":170,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":166},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":36517,"byte_end":36522,"line_start":187,"line_end":187,"column_start":12,"column_end":17},"name":"close","qualname":"<PollSender<T>>::close","value":"fn close<'_>(&'_ mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes this sender.","sig":null,"attributes":[{"value":"/ Closes this sender.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":35791,"byte_end":35814,"line_start":175,"line_end":175,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":35819,"byte_end":35822,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ No more messages will be able to be sent from this sender, but the underlying channel will","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":35827,"byte_end":35921,"line_start":177,"line_end":177,"column_start":5,"column_end":99}},{"value":"/ remain open until all senders have dropped, or until the [`Receiver`] closes the channel.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":35926,"byte_end":36019,"line_start":178,"line_end":178,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":36024,"byte_end":36027,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ If a slot was previously reserved by calling `poll_reserve`, then a final call can be made","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":36032,"byte_end":36126,"line_start":180,"line_end":180,"column_start":5,"column_end":99}},{"value":"/ to `send_item` in order to consume the reserved slot.  After that, no further sends will be","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":36131,"byte_end":36226,"line_start":181,"line_end":181,"column_start":5,"column_end":100}},{"value":"/ possible.  If you do not intend to send another item, you can release the reserved slot back","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":36231,"byte_end":36327,"line_start":182,"line_end":182,"column_start":5,"column_end":101}},{"value":"/ to the underlying sender by calling [`abort_send`].","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":36332,"byte_end":36387,"line_start":183,"line_end":183,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":36392,"byte_end":36395,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ [`abort_send`]: crate::sync::PollSender::abort_send","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":36400,"byte_end":36455,"line_start":185,"line_end":185,"column_start":5,"column_end":60}},{"value":"/ [`Receiver`]: tokio::sync::mpsc::Receiver","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":36460,"byte_end":36505,"line_start":186,"line_end":186,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":167},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":37456,"byte_end":37466,"line_start":209,"line_end":209,"column_start":12,"column_end":22},"name":"abort_send","qualname":"<PollSender<T>>::abort_send","value":"fn abort_send<'_>(&'_ mut Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Aborts the current in-progress send, if any.","sig":null,"attributes":[{"value":"/ Aborts the current in-progress send, if any.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":37160,"byte_end":37208,"line_start":204,"line_end":204,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":37213,"byte_end":37216,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ Returns `true` if a send was aborted.  If the sender was closed prior to calling","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":37221,"byte_end":37305,"line_start":206,"line_end":206,"column_start":5,"column_end":89}},{"value":"/ `abort_send`, then the sender will remain in the closed state, otherwise the sender will be","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":37310,"byte_end":37405,"line_start":207,"line_end":207,"column_start":5,"column_end":100}},{"value":"/ ready to attempt another send.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":37410,"byte_end":37444,"line_start":208,"line_end":208,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":170},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":39104,"byte_end":39109,"line_start":249,"line_end":249,"column_start":8,"column_end":13},"name":"clone","qualname":"<PollSender<T> as std::clone::Clone>::clone","value":"fn clone<'_>(&'_ Self) -> PollSender<T>","parent":{"krate":2,"index":2882},"children":[],"decl_id":{"krate":2,"index":2883},"docs":" Clones this `PollSender`.","sig":null,"attributes":[{"value":"/ Clones this `PollSender`.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":38957,"byte_end":38986,"line_start":246,"line_end":246,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":38991,"byte_end":38994,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ The resulting `PollSender` will have an initial state identical to calling `PollSender::new`.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":38999,"byte_end":39096,"line_start":248,"line_end":248,"column_start":5,"column_end":102}}]},{"kind":"Method","id":{"krate":0,"index":175},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":39736,"byte_end":39746,"line_start":268,"line_end":268,"column_start":8,"column_end":18},"name":"poll_ready","qualname":"<PollSender<T> as futures_sink::Sink>::poll_ready","value":"fn poll_ready<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Result<(), Self::Error>>","parent":{"krate":21,"index":17},"children":[],"decl_id":{"krate":21,"index":20},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":176},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":39887,"byte_end":39897,"line_start":272,"line_end":272,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"<PollSender<T> as futures_sink::Sink>::poll_flush","value":"fn poll_flush<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Result<(), Self::Error>>","parent":{"krate":21,"index":17},"children":[],"decl_id":{"krate":21,"index":22},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":40020,"byte_end":40030,"line_start":276,"line_end":276,"column_start":8,"column_end":18},"name":"start_send","qualname":"<PollSender<T> as futures_sink::Sink>::start_send","value":"fn start_send<'_>(Pin<&'_ mut Self>, T) -> Result<(), Self::Error>","parent":{"krate":21,"index":17},"children":[],"decl_id":{"krate":21,"index":21},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":178},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":40151,"byte_end":40161,"line_start":280,"line_end":280,"column_start":8,"column_end":18},"name":"poll_close","qualname":"<PollSender<T> as futures_sink::Sink>::poll_close","value":"fn poll_close<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Result<(), Self::Error>>","parent":{"krate":21,"index":17},"children":[],"decl_id":{"krate":21,"index":23},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":226},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":40684,"byte_end":40697,"line_start":13,"line_end":13,"column_start":12,"column_end":25},"name":"PollSemaphore","qualname":"::sync::poll_semaphore::PollSemaphore","value":"PollSemaphore {  }","parent":null,"children":[{"krate":0,"index":227},{"krate":0,"index":228}],"decl_id":null,"docs":" A wrapper around [`Semaphore`] that provides a `poll_acquire` method.","sig":null,"attributes":[{"value":"/ A wrapper around [`Semaphore`] that provides a `poll_acquire` method.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":40553,"byte_end":40626,"line_start":10,"line_end":10,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":40627,"byte_end":40630,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`Semaphore`]: tokio::sync::Semaphore","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":40631,"byte_end":40672,"line_start":12,"line_end":12,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":230},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":40900,"byte_end":40903,"line_start":20,"line_end":20,"column_start":12,"column_end":15},"name":"new","qualname":"<PollSemaphore>::new","value":"fn new(Arc<Semaphore>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `PollSemaphore`.\n","sig":null,"attributes":[{"value":"/ Create a new `PollSemaphore`.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":40855,"byte_end":40888,"line_start":19,"line_end":19,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":231},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":41067,"byte_end":41072,"line_start":28,"line_end":28,"column_start":12,"column_end":17},"name":"close","qualname":"<PollSemaphore>::close","value":"fn close<'_>(&'_ Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes the semaphore.\n","sig":null,"attributes":[{"value":"/ Closes the semaphore.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":41030,"byte_end":41055,"line_start":27,"line_end":27,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":232},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":41178,"byte_end":41189,"line_start":33,"line_end":33,"column_start":12,"column_end":23},"name":"clone_inner","qualname":"<PollSemaphore>::clone_inner","value":"fn clone_inner<'_>(&'_ Self) -> Arc<Semaphore>","parent":null,"children":[],"decl_id":null,"docs":" Obtain a clone of the inner semaphore.\n","sig":null,"attributes":[{"value":"/ Obtain a clone of the inner semaphore.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":41124,"byte_end":41166,"line_start":32,"line_end":32,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":233},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":41304,"byte_end":41314,"line_start":38,"line_end":38,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<PollSemaphore>::into_inner","value":"fn into_inner(Self) -> Arc<Semaphore>","parent":null,"children":[],"decl_id":null,"docs":" Get back the inner semaphore.\n","sig":null,"attributes":[{"value":"/ Get back the inner semaphore.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":41259,"byte_end":41292,"line_start":37,"line_end":37,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":234},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":42048,"byte_end":42060,"line_start":55,"line_end":55,"column_start":12,"column_end":24},"name":"poll_acquire","qualname":"<PollSemaphore>::poll_acquire","value":"fn poll_acquire<'_, '_, '_>(&'_ mut Self, &'_ mut Context)\n-> Poll<Option<OwnedSemaphorePermit>>","parent":null,"children":[],"decl_id":null,"docs":" Poll to acquire a permit from the semaphore.","sig":null,"attributes":[{"value":"/ Poll to acquire a permit from the semaphore.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":41375,"byte_end":41423,"line_start":42,"line_end":42,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":41428,"byte_end":41431,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ This can return the following values:","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":41436,"byte_end":41477,"line_start":44,"line_end":44,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":41482,"byte_end":41485,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/  - `Poll::Pending` if a permit is not currently available.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":41490,"byte_end":41552,"line_start":46,"line_end":46,"column_start":5,"column_end":67}},{"value":"/  - `Poll::Ready(Some(permit))` if a permit was acquired.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":41557,"byte_end":41617,"line_start":47,"line_end":47,"column_start":5,"column_end":65}},{"value":"/  - `Poll::Ready(None)` if the semaphore has been closed.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":41622,"byte_end":41682,"line_start":48,"line_end":48,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":41687,"byte_end":41690,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ When this method returns `Poll::Pending`, the current task is scheduled","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":41695,"byte_end":41770,"line_start":50,"line_end":50,"column_start":5,"column_end":80}},{"value":"/ to receive a wakeup when a permit becomes available, or when the","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":41775,"byte_end":41843,"line_start":51,"line_end":51,"column_start":5,"column_end":73}},{"value":"/ semaphore is closed. Note that on multiple calls to `poll_acquire`, only","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":41848,"byte_end":41924,"line_start":52,"line_end":52,"column_start":5,"column_end":81}},{"value":"/ the `Waker` from the `Context` passed to the most recent call is","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":41929,"byte_end":41997,"line_start":53,"line_end":53,"column_start":5,"column_end":73}},{"value":"/ scheduled to receive a wakeup.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":42002,"byte_end":42036,"line_start":54,"line_end":54,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":235},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":43488,"byte_end":43505,"line_start":92,"line_end":92,"column_start":12,"column_end":29},"name":"available_permits","qualname":"<PollSemaphore>::available_permits","value":"fn available_permits<'_>(&'_ Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current number of available permits.","sig":null,"attributes":[{"value":"/ Returns the current number of available permits.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":43204,"byte_end":43256,"line_start":86,"line_end":86,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":43261,"byte_end":43264,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to the [`Semaphore::available_permits`] method on the","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":43269,"byte_end":43345,"line_start":88,"line_end":88,"column_start":5,"column_end":81}},{"value":"/ `tokio::sync::Semaphore` type.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":43350,"byte_end":43384,"line_start":89,"line_end":89,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":43389,"byte_end":43392,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ [`Semaphore::available_permits`]: tokio::sync::Semaphore::available_permits","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":43397,"byte_end":43476,"line_start":91,"line_end":91,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":236},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":43965,"byte_end":43976,"line_start":105,"line_end":105,"column_start":12,"column_end":23},"name":"add_permits","qualname":"<PollSemaphore>::add_permits","value":"fn add_permits<'_>(&'_ Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Adds `n` new permits to the semaphore.","sig":null,"attributes":[{"value":"/ Adds `n` new permits to the semaphore.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":43578,"byte_end":43620,"line_start":96,"line_end":96,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":43625,"byte_end":43628,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ The maximum number of permits is `usize::MAX >> 3`, and this function","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":43633,"byte_end":43706,"line_start":98,"line_end":98,"column_start":5,"column_end":78}},{"value":"/ will panic if the limit is exceeded.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":43711,"byte_end":43751,"line_start":99,"line_end":99,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":43756,"byte_end":43759,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to the [`Semaphore::add_permits`] method on the","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":43764,"byte_end":43834,"line_start":101,"line_end":101,"column_start":5,"column_end":75}},{"value":"/ `tokio::sync::Semaphore` type.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":43839,"byte_end":43873,"line_start":102,"line_end":102,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":43878,"byte_end":43881,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ [`Semaphore::add_permits`]: tokio::sync::Semaphore::add_permits","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":43886,"byte_end":43953,"line_start":104,"line_end":104,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":239},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":44122,"byte_end":44131,"line_start":113,"line_end":113,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<PollSemaphore as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<OwnedSemaphorePermit>>","parent":{"krate":30,"index":96},"children":[],"decl_id":{"krate":30,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":241},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":44310,"byte_end":44315,"line_start":119,"line_end":119,"column_start":8,"column_end":13},"name":"clone","qualname":"<PollSemaphore as std::clone::Clone>::clone","value":"fn clone<'_>(&'_ Self) -> PollSemaphore","parent":{"krate":2,"index":2882},"children":[],"decl_id":{"krate":2,"index":2883},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":243},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":44441,"byte_end":44444,"line_start":125,"line_end":125,"column_start":8,"column_end":11},"name":"fmt","qualname":"<PollSemaphore as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10286},"children":[],"decl_id":{"krate":2,"index":10287},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":245},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":44666,"byte_end":44672,"line_start":133,"line_end":133,"column_start":8,"column_end":14},"name":"as_ref","qualname":"<PollSemaphore as std::convert::AsRef>::as_ref","value":"fn as_ref<'_>(&'_ Self) -> &'_ Semaphore","parent":{"krate":2,"index":3160},"children":[],"decl_id":{"krate":2,"index":3162},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":282},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/reusable_box.rs","byte_start":45130,"byte_end":45147,"line_start":14,"line_end":14,"column_start":12,"column_end":29},"name":"ReusableBoxFuture","qualname":"::sync::reusable_box::ReusableBoxFuture","value":"ReusableBoxFuture {  }","parent":null,"children":[{"krate":0,"index":285}],"decl_id":null,"docs":" A reusable `Pin<Box<dyn Future<Output = T> + Send + 'a>>`.","sig":null,"attributes":[{"value":"/ A reusable `Pin<Box<dyn Future<Output = T> + Send + 'a>>`.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/reusable_box.rs","byte_start":44925,"byte_end":44987,"line_start":10,"line_end":10,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/reusable_box.rs","byte_start":44988,"byte_end":44991,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This type lets you replace the future stored in the box without","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/reusable_box.rs","byte_start":44992,"byte_end":45059,"line_start":12,"line_end":12,"column_start":1,"column_end":68}},{"value":"/ reallocating when the size and alignment permits this.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/reusable_box.rs","byte_start":45060,"byte_end":45118,"line_start":13,"line_end":13,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":289},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/reusable_box.rs","byte_start":45343,"byte_end":45346,"line_start":20,"line_end":20,"column_start":12,"column_end":15},"name":"new","qualname":"<ReusableBoxFuture>::new","value":"fn new<F>(F) -> Self where F: Future<Output = T> + Send + 'a","parent":null,"children":[],"decl_id":null,"docs":" Create a new `ReusableBoxFuture<T>` containing the provided future.\n","sig":null,"attributes":[{"value":"/ Create a new `ReusableBoxFuture<T>` containing the provided future.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/reusable_box.rs","byte_start":45260,"byte_end":45331,"line_start":19,"line_end":19,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":291},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/reusable_box.rs","byte_start":45716,"byte_end":45719,"line_start":33,"line_end":33,"column_start":12,"column_end":15},"name":"set","qualname":"<ReusableBoxFuture>::set","value":"fn set<F, '_>(&'_ mut Self, F) where F: Future<Output = T> + Send + 'a","parent":null,"children":[],"decl_id":null,"docs":" Replace the future currently stored in this box.","sig":null,"attributes":[{"value":"/ Replace the future currently stored in this box.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/reusable_box.rs","byte_start":45501,"byte_end":45553,"line_start":29,"line_end":29,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/reusable_box.rs","byte_start":45558,"byte_end":45561,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ This reallocates if and only if the layout of the provided future is","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/reusable_box.rs","byte_start":45566,"byte_end":45638,"line_start":31,"line_end":31,"column_start":5,"column_end":77}},{"value":"/ different from the layout of the currently stored future.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/reusable_box.rs","byte_start":45643,"byte_end":45704,"line_start":32,"line_end":32,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":293},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/reusable_box.rs","byte_start":46157,"byte_end":46164,"line_start":47,"line_end":47,"column_start":12,"column_end":19},"name":"try_set","qualname":"<ReusableBoxFuture>::try_set","value":"fn try_set<F, '_>(&'_ mut Self, F) -> Result<(), F> where F: Future<Output =\nT> + Send + 'a","parent":null,"children":[],"decl_id":null,"docs":" Replace the future currently stored in this box.","sig":null,"attributes":[{"value":"/ Replace the future currently stored in this box.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/reusable_box.rs","byte_start":45916,"byte_end":45968,"line_start":42,"line_end":42,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/reusable_box.rs","byte_start":45973,"byte_end":45976,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ This function never reallocates, but returns an error if the provided","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/reusable_box.rs","byte_start":45981,"byte_end":46054,"line_start":44,"line_end":44,"column_start":5,"column_end":78}},{"value":"/ future has a different size or alignment from the currently stored","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/reusable_box.rs","byte_start":46059,"byte_end":46129,"line_start":45,"line_end":45,"column_start":5,"column_end":75}},{"value":"/ future.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/reusable_box.rs","byte_start":46134,"byte_end":46145,"line_start":46,"line_end":46,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":299},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/reusable_box.rs","byte_start":47231,"byte_end":47238,"line_start":72,"line_end":72,"column_start":12,"column_end":19},"name":"get_pin","qualname":"<ReusableBoxFuture>::get_pin","value":"fn get_pin<'_>(&'_ mut Self) -> Pin<&'_ mut dyn Future<Output = T> + Send>","parent":null,"children":[],"decl_id":null,"docs":" Get a pinned reference to the underlying future.\n","sig":null,"attributes":[{"value":"/ Get a pinned reference to the underlying future.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/reusable_box.rs","byte_start":47167,"byte_end":47219,"line_start":71,"line_end":71,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":300},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/reusable_box.rs","byte_start":47391,"byte_end":47395,"line_start":77,"line_end":77,"column_start":12,"column_end":16},"name":"poll","qualname":"<ReusableBoxFuture>::poll","value":"fn poll<'_, '_, '_>(&'_ mut Self, &'_ mut Context) -> Poll<T>","parent":null,"children":[],"decl_id":null,"docs":" Poll the future stored inside this box.\n","sig":null,"attributes":[{"value":"/ Poll the future stored inside this box.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/reusable_box.rs","byte_start":47336,"byte_end":47379,"line_start":76,"line_end":76,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":304},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/reusable_box.rs","byte_start":47606,"byte_end":47610,"line_start":86,"line_end":86,"column_start":8,"column_end":12},"name":"poll","qualname":"<ReusableBoxFuture as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<T>","parent":{"krate":2,"index":13761},"children":[],"decl_id":{"krate":2,"index":13763},"docs":" Poll the future stored inside this box.\n","sig":null,"attributes":[{"value":"/ Poll the future stored inside this box.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/reusable_box.rs","byte_start":47555,"byte_end":47598,"line_start":85,"line_end":85,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":309},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/reusable_box.rs","byte_start":48022,"byte_end":48025,"line_start":97,"line_end":97,"column_start":8,"column_end":11},"name":"fmt","qualname":"<ReusableBoxFuture as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10286},"children":[],"decl_id":{"krate":2,"index":10287},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":340},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"either","qualname":"::either","value":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","parent":null,"children":[{"krate":0,"index":341},{"krate":0,"index":342},{"krate":0,"index":345},{"krate":0,"index":348},{"krate":0,"index":351},{"krate":0,"index":352},{"krate":0,"index":355},{"krate":0,"index":358},{"krate":0,"index":359},{"krate":0,"index":362},{"krate":0,"index":365},{"krate":0,"index":368},{"krate":0,"index":371},{"krate":0,"index":374},{"krate":0,"index":1376},{"krate":0,"index":1385},{"krate":0,"index":1389},{"krate":0,"index":377},{"krate":0,"index":378},{"krate":0,"index":384},{"krate":0,"index":388},{"krate":0,"index":393},{"krate":0,"index":398},{"krate":0,"index":404}],"decl_id":null,"docs":" Module defining an Either type.\n","sig":null,"attributes":[{"value":"/ Module defining an Either type.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":50246,"byte_end":50281,"line_start":1,"line_end":1,"column_start":1,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1379},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":52228,"byte_end":52232,"line_start":65,"line_end":65,"column_start":5,"column_end":9},"name":"Left","qualname":"::either::Either::Left","value":"Either::Left(L)","parent":{"krate":0,"index":1376},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1381},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":52233,"byte_end":52234,"line_start":65,"line_end":65,"column_start":10,"column_end":11},"name":"0","qualname":"::either::Either::Left::0","value":"L","parent":{"krate":0,"index":1379},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1382},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":52241,"byte_end":52246,"line_start":66,"line_end":66,"column_start":5,"column_end":10},"name":"Right","qualname":"::either::Either::Right","value":"Either::Right(R)","parent":{"krate":0,"index":1376},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1384},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":52247,"byte_end":52248,"line_start":66,"line_end":66,"column_start":11,"column_end":12},"name":"0","qualname":"::either::Either::Right::0","value":"R","parent":{"krate":0,"index":1382},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1376},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":52209,"byte_end":52215,"line_start":64,"line_end":64,"column_start":10,"column_end":16},"name":"Either","qualname":"::either::Either","value":"enum Either<L, R> { Left(L), Right(R), }","parent":null,"children":[{"krate":0,"index":1379},{"krate":0,"index":1382}],"decl_id":null,"docs":" Combines two different futures, streams, or sinks having the same associated types into a single type.","sig":null,"attributes":[{"value":"/ Combines two different futures, streams, or sinks having the same associated types into a single type.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":50458,"byte_end":50564,"line_start":10,"line_end":10,"column_start":1,"column_end":107}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":50565,"byte_end":50568,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This type implements common asynchronous traits such as [`Future`] and those in Tokio.","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":50569,"byte_end":50659,"line_start":12,"line_end":12,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":50660,"byte_end":50663,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [`Future`]: std::future::Future","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":50664,"byte_end":50699,"line_start":14,"line_end":14,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":50700,"byte_end":50703,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":50704,"byte_end":50717,"line_start":16,"line_end":16,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":50718,"byte_end":50721,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The following code will not work:","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":50722,"byte_end":50759,"line_start":18,"line_end":18,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":50760,"byte_end":50763,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```compile_fail","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":50764,"byte_end":50783,"line_start":20,"line_end":20,"column_start":1,"column_end":20}},{"value":"/ # fn some_condition() -> bool { true }","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":50784,"byte_end":50826,"line_start":21,"line_end":21,"column_start":1,"column_end":43}},{"value":"/ # async fn some_async_function() -> u32 { 10 }","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":50827,"byte_end":50877,"line_start":22,"line_end":22,"column_start":1,"column_end":51}},{"value":"/ # async fn other_async_function() -> u32 { 20 }","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":50878,"byte_end":50929,"line_start":23,"line_end":23,"column_start":1,"column_end":52}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":50930,"byte_end":50948,"line_start":24,"line_end":24,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":50949,"byte_end":50970,"line_start":25,"line_end":25,"column_start":1,"column_end":22}},{"value":"/     let result = if some_condition() {","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":50971,"byte_end":51013,"line_start":26,"line_end":26,"column_start":1,"column_end":43}},{"value":"/         some_async_function()","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":51014,"byte_end":51047,"line_start":27,"line_end":27,"column_start":1,"column_end":34}},{"value":"/     } else {","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":51048,"byte_end":51064,"line_start":28,"line_end":28,"column_start":1,"column_end":17}},{"value":"/         other_async_function() // <- Will print: \"`if` and `else` have incompatible types\"","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":51065,"byte_end":51159,"line_start":29,"line_end":29,"column_start":1,"column_end":95}},{"value":"/     };","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":51160,"byte_end":51170,"line_start":30,"line_end":30,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":51171,"byte_end":51174,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/     println!(\"Result is {}\", result.await);","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":51175,"byte_end":51222,"line_start":32,"line_end":32,"column_start":1,"column_end":48}},{"value":"/ }","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":51223,"byte_end":51228,"line_start":33,"line_end":33,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":51229,"byte_end":51236,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":51237,"byte_end":51240,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":51441,"byte_end":51444,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ When the output type is the same, we can wrap each future in `Either` to avoid the","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":51445,"byte_end":51531,"line_start":40,"line_end":40,"column_start":1,"column_end":87}},{"value":"/ issue:","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":51532,"byte_end":51542,"line_start":41,"line_end":41,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":51543,"byte_end":51546,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":51547,"byte_end":51554,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::either::Either;","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":51555,"byte_end":51590,"line_start":44,"line_end":44,"column_start":1,"column_end":36}},{"value":"/ # fn some_condition() -> bool { true }","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":51591,"byte_end":51633,"line_start":45,"line_end":45,"column_start":1,"column_end":43}},{"value":"/ # async fn some_async_function() -> u32 { 10 }","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":51634,"byte_end":51684,"line_start":46,"line_end":46,"column_start":1,"column_end":51}},{"value":"/ # async fn other_async_function() -> u32 { 20 }","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":51685,"byte_end":51736,"line_start":47,"line_end":47,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":51737,"byte_end":51740,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":51741,"byte_end":51759,"line_start":49,"line_end":49,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":51760,"byte_end":51781,"line_start":50,"line_end":50,"column_start":1,"column_end":22}},{"value":"/     let result = if some_condition() {","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":51782,"byte_end":51824,"line_start":51,"line_end":51,"column_start":1,"column_end":43}},{"value":"/         Either::Left(some_async_function())","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":51825,"byte_end":51872,"line_start":52,"line_end":52,"column_start":1,"column_end":48}},{"value":"/     } else {","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":51873,"byte_end":51889,"line_start":53,"line_end":53,"column_start":1,"column_end":17}},{"value":"/         Either::Right(other_async_function())","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":51890,"byte_end":51939,"line_start":54,"line_end":54,"column_start":1,"column_end":50}},{"value":"/     };","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":51940,"byte_end":51950,"line_start":55,"line_end":55,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":51951,"byte_end":51954,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/     let value = result.await;","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":51955,"byte_end":51988,"line_start":57,"line_end":57,"column_start":1,"column_end":34}},{"value":"/     println!(\"Result is {}\", value);","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":51989,"byte_end":52029,"line_start":58,"line_end":58,"column_start":1,"column_end":41}},{"value":"/     # assert_eq!(value, 10);","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":52030,"byte_end":52062,"line_start":59,"line_end":59,"column_start":1,"column_end":33}},{"value":"/ }","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":52063,"byte_end":52068,"line_start":60,"line_end":60,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":52069,"byte_end":52076,"line_start":61,"line_end":61,"column_start":1,"column_end":8}},{"value":"allow(missing_docs)","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":52077,"byte_end":52099,"line_start":62,"line_end":62,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":383},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":52956,"byte_end":52960,"line_start":90,"line_end":90,"column_start":8,"column_end":12},"name":"poll","qualname":"<Either<L, R> as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13761},"children":[],"decl_id":{"krate":2,"index":13763},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":387},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":53165,"byte_end":53174,"line_start":100,"line_end":100,"column_start":8,"column_end":17},"name":"poll_read","qualname":"<Either<L, R> as tokio::io::AsyncRead>::poll_read","value":"fn poll_read<'_, '_, '_, '_,\n'_>(Pin<&'_ mut Self>, &'_ mut Context, &'_ mut ReadBuf) -> Poll<Result<()>>","parent":{"krate":22,"index":206},"children":[],"decl_id":{"krate":22,"index":207},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":391},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":53450,"byte_end":53463,"line_start":114,"line_end":114,"column_start":8,"column_end":21},"name":"poll_fill_buf","qualname":"<Either<L, R> as tokio::io::AsyncBufRead>::poll_fill_buf","value":"fn poll_fill_buf<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Result<&'_ [u8]>>","parent":{"krate":22,"index":164},"children":[],"decl_id":{"krate":22,"index":165},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":392},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":53594,"byte_end":53601,"line_start":118,"line_end":118,"column_start":8,"column_end":15},"name":"consume","qualname":"<Either<L, R> as tokio::io::AsyncBufRead>::consume","value":"fn consume<'_>(Pin<&'_ mut Self>, usize)","parent":{"krate":22,"index":164},"children":[],"decl_id":{"krate":22,"index":166},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":396},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":53778,"byte_end":53788,"line_start":128,"line_end":128,"column_start":8,"column_end":18},"name":"start_seek","qualname":"<Either<L, R> as tokio::io::AsyncSeek>::start_seek","value":"fn start_seek<'_>(Pin<&'_ mut Self>, SeekFrom) -> Result<()>","parent":{"krate":22,"index":245},"children":[],"decl_id":{"krate":22,"index":246},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":397},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":53911,"byte_end":53924,"line_start":132,"line_end":132,"column_start":8,"column_end":21},"name":"poll_complete","qualname":"<Either<L, R> as tokio::io::AsyncSeek>::poll_complete","value":"fn poll_complete<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Result<u64>>","parent":{"krate":22,"index":245},"children":[],"decl_id":{"krate":22,"index":247},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":401},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":54140,"byte_end":54150,"line_start":142,"line_end":142,"column_start":8,"column_end":18},"name":"poll_write","qualname":"<Either<L, R> as tokio::io::AsyncWrite>::poll_write","value":"fn poll_write<'_, '_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context, &'_ [u8])\n-> Poll<Result<usize>>","parent":{"krate":22,"index":285},"children":[],"decl_id":{"krate":22,"index":286},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":402},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":54295,"byte_end":54305,"line_start":146,"line_end":146,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"<Either<L, R> as tokio::io::AsyncWrite>::poll_flush","value":"fn poll_flush<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<tokio::io::Result<()>>","parent":{"krate":22,"index":285},"children":[],"decl_id":{"krate":22,"index":287},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":403},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":54441,"byte_end":54454,"line_start":150,"line_end":150,"column_start":8,"column_end":21},"name":"poll_shutdown","qualname":"<Either<L, R> as tokio::io::AsyncWrite>::poll_shutdown","value":"fn poll_shutdown<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<tokio::io::Result<()>>","parent":{"krate":22,"index":285},"children":[],"decl_id":{"krate":22,"index":288},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":408},"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":54776,"byte_end":54785,"line_start":162,"line_end":162,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Either<L, R> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":30,"index":96},"children":[],"decl_id":{"krate":30,"index":98},"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16376700,"byte_end":16376710,"line_start":47,"line_end":47,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":480}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16376861,"byte_end":16376871,"line_start":54,"line_end":54,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":482},{"krate":0,"index":483},{"krate":0,"index":484}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16377198,"byte_end":16377208,"line_start":68,"line_end":68,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":486},{"krate":0,"index":487}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16377432,"byte_end":16377442,"line_start":78,"line_end":78,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":489},{"krate":0,"index":490}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_impl.rs","byte_start":16387678,"byte_end":16387687,"line_start":48,"line_end":48,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":592}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_impl.rs","byte_start":16387919,"byte_end":16387929,"line_start":59,"line_end":59,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":594}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_impl.rs","byte_start":16388080,"byte_end":16388089,"line_start":67,"line_end":67,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":596}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_impl.rs","byte_start":16388444,"byte_end":16388454,"line_start":83,"line_end":83,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":598}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_impl.rs","byte_start":16388700,"byte_end":16388708,"line_start":94,"line_end":94,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":600}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_impl.rs","byte_start":16388805,"byte_end":16388813,"line_start":99,"line_end":99,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":602}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_impl.rs","byte_start":16388924,"byte_end":16388932,"line_start":104,"line_end":104,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":604}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_impl.rs","byte_start":16389032,"byte_end":16389040,"line_start":109,"line_end":109,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":606}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_impl.rs","byte_start":16389150,"byte_end":16389160,"line_start":114,"line_end":114,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":611},{"krate":0,"index":612}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_impl.rs","byte_start":16397447,"byte_end":16397457,"line_start":249,"line_end":249,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":624},{"krate":0,"index":625},{"krate":0,"index":626},{"krate":0,"index":627},{"krate":0,"index":631}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16400292,"byte_end":16400298,"line_start":33,"line_end":33,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":703},{"krate":0,"index":704}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16404154,"byte_end":16404160,"line_start":118,"line_end":118,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":708},{"krate":0,"index":709},{"krate":0,"index":710},{"krate":0,"index":711},{"krate":0,"index":712},{"krate":0,"index":713},{"krate":0,"index":714},{"krate":0,"index":717},{"krate":0,"index":718},{"krate":0,"index":719},{"krate":0,"index":720},{"krate":0,"index":721},{"krate":0,"index":722},{"krate":0,"index":723}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16410551,"byte_end":16410557,"line_start":283,"line_end":283,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":727},{"krate":0,"index":728}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16410873,"byte_end":16410879,"line_start":296,"line_end":296,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":733},{"krate":0,"index":734},{"krate":0,"index":735},{"krate":0,"index":736},{"krate":0,"index":737}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16411594,"byte_end":16411600,"line_start":321,"line_end":321,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":741}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16412640,"byte_end":16412651,"line_start":359,"line_end":359,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":745}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16413578,"byte_end":16413588,"line_start":27,"line_end":27,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":796},{"krate":0,"index":797}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16414517,"byte_end":16414527,"line_start":61,"line_end":61,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":801},{"krate":0,"index":802},{"krate":0,"index":803},{"krate":0,"index":804},{"krate":0,"index":805},{"krate":0,"index":806},{"krate":0,"index":807},{"krate":0,"index":810},{"krate":0,"index":811},{"krate":0,"index":812}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16417357,"byte_end":16417367,"line_start":149,"line_end":149,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":816},{"krate":0,"index":817}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16417680,"byte_end":16417690,"line_start":162,"line_end":162,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":822},{"krate":0,"index":823},{"krate":0,"index":824},{"krate":0,"index":825},{"krate":0,"index":826}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16418416,"byte_end":16418426,"line_start":185,"line_end":185,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":830}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16419405,"byte_end":16419416,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":879}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16419772,"byte_end":16419783,"line_start":41,"line_end":41,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":883},{"krate":0,"index":884},{"krate":0,"index":885},{"krate":0,"index":886},{"krate":0,"index":887},{"krate":0,"index":888},{"krate":0,"index":889},{"krate":0,"index":892},{"krate":0,"index":893},{"krate":0,"index":894}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16422628,"byte_end":16422639,"line_start":129,"line_end":129,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":899},{"krate":0,"index":900},{"krate":0,"index":901},{"krate":0,"index":902},{"krate":0,"index":903}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16423403,"byte_end":16423414,"line_start":155,"line_end":155,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":907},{"krate":0,"index":908}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16423655,"byte_end":16423666,"line_start":166,"line_end":166,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":912}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16438710,"byte_end":16438730,"line_start":441,"line_end":441,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":976},{"krate":0,"index":977},{"krate":0,"index":978},{"krate":0,"index":979},{"krate":0,"index":980},{"krate":0,"index":981}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16442064,"byte_end":16442084,"line_start":549,"line_end":549,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":983},{"krate":0,"index":984},{"krate":0,"index":985}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16442970,"byte_end":16442990,"line_start":580,"line_end":580,"column_start":25,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":987},{"krate":0,"index":988}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16444331,"byte_end":16444351,"line_start":624,"line_end":624,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":991}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16444913,"byte_end":16444920,"line_start":650,"line_end":650,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1000},{"krate":0,"index":1001},{"krate":0,"index":1002},{"krate":0,"index":1003},{"krate":0,"index":1004},{"krate":0,"index":1005},{"krate":0,"index":1007},{"krate":0,"index":1008},{"krate":0,"index":1009},{"krate":0,"index":1010},{"krate":0,"index":1011},{"krate":0,"index":1012},{"krate":0,"index":1014},{"krate":0,"index":1016},{"krate":0,"index":1018},{"krate":0,"index":1019}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16455695,"byte_end":16455702,"line_start":1027,"line_end":1027,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1021}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16455828,"byte_end":16455853,"line_start":1035,"line_end":1035,"column_start":21,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1023}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16456011,"byte_end":16456036,"line_start":1041,"line_end":1041,"column_start":23,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1025}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16456171,"byte_end":16456196,"line_start":1047,"line_end":1047,"column_start":19,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16457265,"byte_end":16457275,"line_start":30,"line_end":30,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1068},{"krate":0,"index":1069},{"krate":0,"index":1070}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16459817,"byte_end":16459827,"line_start":106,"line_end":106,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1075},{"krate":0,"index":1076},{"krate":0,"index":1077},{"krate":0,"index":1079}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16463203,"byte_end":16463213,"line_start":185,"line_end":185,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1082},{"krate":0,"index":1083}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16463536,"byte_end":16463546,"line_start":200,"line_end":200,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1085}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16463853,"byte_end":16463868,"line_start":215,"line_end":215,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1087}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16464150,"byte_end":16464165,"line_start":224,"line_end":224,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1089}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16464282,"byte_end":16464297,"line_start":230,"line_end":230,"column_start":28,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16466623,"byte_end":16466640,"line_start":65,"line_end":65,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1137},{"krate":0,"index":1138},{"krate":0,"index":1139}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16469289,"byte_end":16469306,"line_start":134,"line_end":134,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1141},{"krate":0,"index":1142},{"krate":0,"index":1143},{"krate":0,"index":1146}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16472598,"byte_end":16472615,"line_start":212,"line_end":212,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1149},{"krate":0,"index":1150}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16472979,"byte_end":16472996,"line_start":228,"line_end":228,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1152}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16473414,"byte_end":16473436,"line_start":246,"line_end":246,"column_start":23,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1154}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16473765,"byte_end":16473787,"line_start":257,"line_end":257,"column_start":26,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1156}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16473918,"byte_end":16473940,"line_start":263,"line_end":263,"column_start":28,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token/guard.rs","byte_start":14585,"byte_end":14594,"line_start":10,"line_end":10,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":21}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token/guard.rs","byte_start":14954,"byte_end":14963,"line_start":21,"line_end":21,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":23}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token/tree_node.rs","byte_start":17413,"byte_end":17421,"line_start":50,"line_end":50,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":39},{"krate":0,"index":40}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":9395,"byte_end":9412,"line_start":71,"line_end":71,"column_start":27,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":84}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":9637,"byte_end":9654,"line_start":79,"line_end":79,"column_start":16,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":86}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":9845,"byte_end":9862,"line_start":88,"line_end":88,"column_start":15,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":88}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":9974,"byte_end":9991,"line_start":94,"line_end":94,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":90}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":10081,"byte_end":10098,"line_start":100,"line_end":100,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":97}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":13336,"byte_end":13361,"line_start":197,"line_end":197,"column_start":31,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":100}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":13533,"byte_end":13558,"line_start":203,"line_end":203,"column_start":21,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":103},{"krate":0,"index":104}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":29631,"byte_end":29644,"line_start":14,"line_end":14,"column_start":9,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":147}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":29966,"byte_end":29979,"line_start":24,"line_end":24,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":150}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":30139,"byte_end":30152,"line_start":30,"line_end":30,"column_start":43,"column_end":56},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":31266,"byte_end":31276,"line_start":67,"line_end":67,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":167}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":38937,"byte_end":38947,"line_start":245,"line_end":245,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":170}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":39677,"byte_end":39687,"line_start":265,"line_end":265,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":174},{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":178}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":40835,"byte_end":40848,"line_start":18,"line_end":18,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":230},{"krate":0,"index":231},{"krate":0,"index":232},{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":236}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":44060,"byte_end":44073,"line_start":110,"line_end":110,"column_start":17,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":238},{"krate":0,"index":239}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":44287,"byte_end":44300,"line_start":118,"line_end":118,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":241}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":44418,"byte_end":44431,"line_start":124,"line_end":124,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":243}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":44643,"byte_end":44656,"line_start":132,"line_end":132,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":245}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Inherent","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/reusable_box.rs","byte_start":45229,"byte_end":45246,"line_start":18,"line_end":18,"column_start":13,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":289},{"krate":0,"index":291},{"krate":0,"index":293},{"krate":0,"index":299},{"krate":0,"index":300}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/reusable_box.rs","byte_start":47502,"byte_end":47519,"line_start":82,"line_end":82,"column_start":20,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":303},{"krate":0,"index":304}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/reusable_box.rs","byte_start":47936,"byte_end":47953,"line_start":94,"line_end":94,"column_start":25,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/reusable_box.rs","byte_start":47988,"byte_end":48005,"line_start":96,"line_end":96,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":309}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Inherent","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/reusable_box.rs","byte_start":49393,"byte_end":49403,"line_start":141,"line_end":141,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":323},{"krate":0,"index":324}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/reusable_box.rs","byte_start":49691,"byte_end":49701,"line_start":153,"line_end":153,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":328}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/reusable_box.rs","byte_start":50099,"byte_end":50106,"line_start":165,"line_end":165,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":335},{"krate":0,"index":336}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":52852,"byte_end":52858,"line_start":83,"line_end":83,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":382},{"krate":0,"index":383}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":53101,"byte_end":53107,"line_start":95,"line_end":95,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":387}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":53380,"byte_end":53386,"line_start":109,"line_end":109,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":391},{"krate":0,"index":392}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":53714,"byte_end":53720,"line_start":123,"line_end":123,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":396},{"krate":0,"index":397}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":54074,"byte_end":54080,"line_start":137,"line_end":137,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":401},{"krate":0,"index":402},{"krate":0,"index":403}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":54632,"byte_end":54638,"line_start":155,"line_end":155,"column_start":45,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":407},{"krate":0,"index":408}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","byte_start":647,"byte_end":652,"line_start":28,"line_end":28,"column_start":13,"column_end":18},"ref_id":{"krate":0,"index":458}},{"kind":"Mod","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16375112,"byte_end":16375128,"line_start":283,"line_end":283,"column_start":9,"column_end":25},"ref_id":{"krate":0,"index":916}},{"kind":"Mod","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","byte_start":904,"byte_end":908,"line_start":54,"line_end":54,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":14}},{"kind":"Mod","span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","byte_start":919,"byte_end":925,"line_start":56,"line_end":56,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":340}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16376700,"byte_end":16376710,"line_start":47,"line_end":47,"column_start":6,"column_end":16},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1165},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16376861,"byte_end":16376871,"line_start":54,"line_end":54,"column_start":18,"column_end":28},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1165},"to":{"krate":0,"index":511}},{"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16377198,"byte_end":16377208,"line_start":68,"line_end":68,"column_start":25,"column_end":35},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1165},"to":{"krate":0,"index":528}},{"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16377432,"byte_end":16377442,"line_start":78,"line_end":78,"column_start":28,"column_end":38},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1165},"to":{"krate":0,"index":528}},{"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_impl.rs","byte_start":16387678,"byte_end":16387687,"line_start":48,"line_end":48,"column_start":18,"column_end":27},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":1189},"to":{"krate":2,"index":3241}},{"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_impl.rs","byte_start":16387919,"byte_end":16387929,"line_start":59,"line_end":59,"column_start":18,"column_end":28},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":589},"to":{"krate":2,"index":3241}},{"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_impl.rs","byte_start":16388080,"byte_end":16388089,"line_start":67,"line_end":67,"column_start":25,"column_end":34},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":1189},"to":{"krate":2,"index":3169}},{"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_impl.rs","byte_start":16388444,"byte_end":16388454,"line_start":83,"line_end":83,"column_start":25,"column_end":35},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":589},"to":{"krate":2,"index":3169}},{"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_impl.rs","byte_start":16388700,"byte_end":16388708,"line_start":94,"line_end":94,"column_start":28,"column_end":36},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1196},"to":{"krate":2,"index":2857}},{"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_impl.rs","byte_start":16388805,"byte_end":16388813,"line_start":99,"line_end":99,"column_start":31,"column_end":39},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1196},"to":{"krate":2,"index":2860}},{"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_impl.rs","byte_start":16388924,"byte_end":16388932,"line_start":104,"line_end":104,"column_start":29,"column_end":37},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1196},"to":{"krate":2,"index":2857}},{"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_impl.rs","byte_start":16389032,"byte_end":16389040,"line_start":109,"line_end":109,"column_start":32,"column_end":40},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1196},"to":{"krate":2,"index":2860}},{"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_impl.rs","byte_start":16389150,"byte_end":16389160,"line_start":114,"line_end":114,"column_start":26,"column_end":36},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1660},"to":{"krate":30,"index":96}},{"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_impl.rs","byte_start":16397447,"byte_end":16397457,"line_start":249,"line_end":249,"column_start":30,"column_end":40},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1660},"to":{"krate":21,"index":17}},{"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16400292,"byte_end":16400298,"line_start":33,"line_end":33,"column_start":12,"column_end":18},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1475},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16404154,"byte_end":16404160,"line_start":118,"line_end":118,"column_start":12,"column_end":18},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1475},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16410551,"byte_end":16410557,"line_start":283,"line_end":283,"column_start":23,"column_end":29},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1475},"to":{"krate":30,"index":96}},{"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16410873,"byte_end":16410879,"line_start":296,"line_end":296,"column_start":27,"column_end":33},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1475},"to":{"krate":21,"index":17}},{"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16411594,"byte_end":16411600,"line_start":321,"line_end":321,"column_start":27,"column_end":33},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1475},"to":{"krate":2,"index":10286}},{"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16412640,"byte_end":16412651,"line_start":359,"line_end":359,"column_start":12,"column_end":23},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1201},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16413578,"byte_end":16413588,"line_start":27,"line_end":27,"column_start":12,"column_end":22},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1434},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16414517,"byte_end":16414527,"line_start":61,"line_end":61,"column_start":12,"column_end":22},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1434},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16417357,"byte_end":16417367,"line_start":149,"line_end":149,"column_start":23,"column_end":33},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1434},"to":{"krate":30,"index":96}},{"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16417680,"byte_end":16417690,"line_start":162,"line_end":162,"column_start":27,"column_end":37},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1434},"to":{"krate":21,"index":17}},{"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16418416,"byte_end":16418426,"line_start":185,"line_end":185,"column_start":27,"column_end":37},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":1434},"to":{"krate":2,"index":10286}},{"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16419405,"byte_end":16419416,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1393},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16419772,"byte_end":16419783,"line_start":41,"line_end":41,"column_start":12,"column_end":23},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1393},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16422628,"byte_end":16422639,"line_start":129,"line_end":129,"column_start":27,"column_end":38},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1393},"to":{"krate":21,"index":17}},{"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16423403,"byte_end":16423414,"line_start":155,"line_end":155,"column_start":23,"column_end":34},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1393},"to":{"krate":30,"index":96}},{"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16423655,"byte_end":16423666,"line_start":166,"line_end":166,"column_start":27,"column_end":38},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1393},"to":{"krate":2,"index":10286}},{"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16438710,"byte_end":16438730,"line_start":441,"line_end":441,"column_start":6,"column_end":26},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1225},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16442064,"byte_end":16442084,"line_start":549,"line_end":549,"column_start":18,"column_end":38},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1225},"to":{"krate":0,"index":511}},{"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16442970,"byte_end":16442990,"line_start":580,"line_end":580,"column_start":25,"column_end":45},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1225},"to":{"krate":0,"index":528}},{"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16444331,"byte_end":16444351,"line_start":624,"line_end":624,"column_start":18,"column_end":38},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1225},"to":{"krate":2,"index":3241}},{"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16444913,"byte_end":16444920,"line_start":650,"line_end":650,"column_start":6,"column_end":13},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1213},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16455695,"byte_end":16455702,"line_start":1027,"line_end":1027,"column_start":18,"column_end":25},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1213},"to":{"krate":2,"index":3241}},{"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16455828,"byte_end":16455853,"line_start":1035,"line_end":1035,"column_start":21,"column_end":46},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":973},"to":{"krate":2,"index":10286}},{"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16456011,"byte_end":16456036,"line_start":1041,"line_end":1041,"column_start":23,"column_end":48},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":973},"to":{"krate":2,"index":10293}},{"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16456171,"byte_end":16456196,"line_start":1047,"line_end":1047,"column_start":19,"column_end":44},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":973},"to":{"krate":1,"index":2576}},{"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16457265,"byte_end":16457275,"line_start":30,"line_end":30,"column_start":6,"column_end":16},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1243},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16459817,"byte_end":16459827,"line_start":106,"line_end":106,"column_start":18,"column_end":28},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1243},"to":{"krate":0,"index":511}},{"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16463203,"byte_end":16463213,"line_start":185,"line_end":185,"column_start":24,"column_end":34},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1243},"to":{"krate":0,"index":528}},{"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16463536,"byte_end":16463546,"line_start":200,"line_end":200,"column_start":18,"column_end":28},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1243},"to":{"krate":2,"index":3241}},{"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16463853,"byte_end":16463868,"line_start":215,"line_end":215,"column_start":23,"column_end":38},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1265},"to":{"krate":2,"index":10293}},{"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16464150,"byte_end":16464165,"line_start":224,"line_end":224,"column_start":26,"column_end":41},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1265},"to":{"krate":2,"index":3169}},{"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16464282,"byte_end":16464297,"line_start":230,"line_end":230,"column_start":28,"column_end":43},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1265},"to":{"krate":1,"index":2576}},{"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16466623,"byte_end":16466640,"line_start":65,"line_end":65,"column_start":6,"column_end":23},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1273},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16469289,"byte_end":16469306,"line_start":134,"line_end":134,"column_start":18,"column_end":35},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1273},"to":{"krate":0,"index":511}},{"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16472598,"byte_end":16472615,"line_start":212,"line_end":212,"column_start":24,"column_end":41},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1273},"to":{"krate":0,"index":528}},{"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16472979,"byte_end":16472996,"line_start":228,"line_end":228,"column_start":18,"column_end":35},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1273},"to":{"krate":2,"index":3241}},{"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16473414,"byte_end":16473436,"line_start":246,"line_end":246,"column_start":23,"column_end":45},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1297},"to":{"krate":2,"index":10293}},{"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16473765,"byte_end":16473787,"line_start":257,"line_end":257,"column_start":26,"column_end":48},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1297},"to":{"krate":2,"index":3169}},{"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16473918,"byte_end":16473940,"line_start":263,"line_end":263,"column_start":28,"column_end":50},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1297},"to":{"krate":1,"index":2576}},{"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token/guard.rs","byte_start":14585,"byte_end":14594,"line_start":10,"line_end":10,"column_start":6,"column_end":15},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1305},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token/guard.rs","byte_start":14954,"byte_end":14963,"line_start":21,"line_end":21,"column_start":15,"column_end":24},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1305},"to":{"krate":2,"index":3510}},{"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token/tree_node.rs","byte_start":17413,"byte_end":17421,"line_start":50,"line_end":50,"column_start":6,"column_end":14},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":35},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":9395,"byte_end":9412,"line_start":71,"line_end":71,"column_start":27,"column_end":44},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":81},"to":{"krate":2,"index":10286}},{"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":9637,"byte_end":9654,"line_start":79,"line_end":79,"column_start":16,"column_end":33},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":81},"to":{"krate":2,"index":2882}},{"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":9845,"byte_end":9862,"line_start":88,"line_end":88,"column_start":15,"column_end":32},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":81},"to":{"krate":2,"index":3510}},{"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":9974,"byte_end":9991,"line_start":94,"line_end":94,"column_start":18,"column_end":35},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":81},"to":{"krate":2,"index":3241}},{"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":10081,"byte_end":10098,"line_start":100,"line_end":100,"column_start":6,"column_end":23},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":81},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":13336,"byte_end":13361,"line_start":197,"line_end":197,"column_start":31,"column_end":56},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1309},"to":{"krate":2,"index":10286}},{"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":13533,"byte_end":13558,"line_start":203,"line_end":203,"column_start":21,"column_end":46},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1309},"to":{"krate":2,"index":13761}},{"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":29631,"byte_end":29644,"line_start":14,"line_end":14,"column_start":9,"column_end":22},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1346},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":29966,"byte_end":29979,"line_start":24,"line_end":24,"column_start":26,"column_end":39},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1346},"to":{"krate":2,"index":10293}},{"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":30139,"byte_end":30152,"line_start":30,"line_end":30,"column_start":43,"column_end":56},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1346},"to":{"krate":1,"index":2576}},{"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":31266,"byte_end":31276,"line_start":67,"line_end":67,"column_start":25,"column_end":35},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1368},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":38937,"byte_end":38947,"line_start":245,"line_end":245,"column_start":19,"column_end":29},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1368},"to":{"krate":2,"index":2882}},{"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":39677,"byte_end":39687,"line_start":265,"line_end":265,"column_start":37,"column_end":47},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1368},"to":{"krate":21,"index":17}},{"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":40835,"byte_end":40848,"line_start":18,"line_end":18,"column_start":6,"column_end":19},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":226},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":44060,"byte_end":44073,"line_start":110,"line_end":110,"column_start":17,"column_end":30},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":226},"to":{"krate":30,"index":96}},{"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":44287,"byte_end":44300,"line_start":118,"line_end":118,"column_start":16,"column_end":29},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":226},"to":{"krate":2,"index":2882}},{"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":44418,"byte_end":44431,"line_start":124,"line_end":124,"column_start":21,"column_end":34},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":226},"to":{"krate":2,"index":10286}},{"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":44643,"byte_end":44656,"line_start":132,"line_end":132,"column_start":27,"column_end":40},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":226},"to":{"krate":2,"index":3160}},{"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/reusable_box.rs","byte_start":45229,"byte_end":45246,"line_start":18,"line_end":18,"column_start":13,"column_end":30},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":282},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/reusable_box.rs","byte_start":47502,"byte_end":47519,"line_start":82,"line_end":82,"column_start":20,"column_end":37},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":282},"to":{"krate":2,"index":13761}},{"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/reusable_box.rs","byte_start":47936,"byte_end":47953,"line_start":94,"line_end":94,"column_start":25,"column_end":42},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":282},"to":{"krate":2,"index":3275}},{"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/reusable_box.rs","byte_start":47988,"byte_end":48005,"line_start":96,"line_end":96,"column_start":24,"column_end":41},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":282},"to":{"krate":2,"index":10286}},{"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/reusable_box.rs","byte_start":49393,"byte_end":49403,"line_start":141,"line_end":141,"column_start":27,"column_end":37},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":316},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/reusable_box.rs","byte_start":49691,"byte_end":49701,"line_start":153,"line_end":153,"column_start":36,"column_end":46},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":316},"to":{"krate":2,"index":3510}},{"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/reusable_box.rs","byte_start":50099,"byte_end":50106,"line_start":165,"line_end":165,"column_start":20,"column_end":27},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":329},"to":{"krate":2,"index":13761}},{"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":52852,"byte_end":52858,"line_start":83,"line_end":83,"column_start":26,"column_end":32},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1376},"to":{"krate":2,"index":13761}},{"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":53101,"byte_end":53107,"line_start":95,"line_end":95,"column_start":26,"column_end":32},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1376},"to":{"krate":22,"index":206}},{"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":53380,"byte_end":53386,"line_start":109,"line_end":109,"column_start":29,"column_end":35},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1376},"to":{"krate":22,"index":164}},{"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":53714,"byte_end":53720,"line_start":123,"line_end":123,"column_start":26,"column_end":32},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1376},"to":{"krate":22,"index":245}},{"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":54074,"byte_end":54080,"line_start":137,"line_end":137,"column_start":27,"column_end":33},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1376},"to":{"krate":22,"index":285}},{"span":{"file_name":"/home/chris/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":54632,"byte_end":54638,"line_start":155,"line_end":155,"column_start":45,"column_end":51},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1376},"to":{"krate":30,"index":96}}]}